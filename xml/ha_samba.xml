<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--taroth 2010-01-27: new chapter, fate#302227-->
<!--see:  http://linux-ha.org/wiki/CTDB_%28resource_agent%29
 
 http://wiki.samba.org/index.php/CTDB_Setup
 http://ctdb.samba.org/
 http://samba.org/~tridge/sambaxp-07/ctdb.pdf
 http://wiki.samba.org/index.php/CTDB_Setup
 + innerweb link by tserong
 
 CTDB = Cluster Trivial Database
-->
<chapter id="cha.ha.samba">
 <title>Samba Clustering</title>
 <abstract>
  <para><remark>FIXME</remark></para>
 </abstract>
 
 <sect1 id="sec.ha.samba.overview">
  <title>Conceptual Overview</title>
  <para>TDB, the trivial database, is used by Samba for many years. TDB
   is a lightweight database and allows multiple applications
   to write simultaneously to the database. To make sure, all write
   operations are successfully performed and nobody hampers each other,
   TDB uses an internally locking mechanism.</para>
  <para>CTDB (cluster trivial database) is a small extension to the
   existing TDB. CTDB is described by the project itself as a
    <quote>cluster implementation of the TDB database used by Samba and
    other projects to store temporary data</quote>. </para>
  <para>Each cluster node runs a local CTDB daemon. Samba
   talks to its local CTDB daemon, instead of writing directly to its
   TDB database. The daemons exchange metadata over the network, but
   actual write and read operations are done with a local copy on fast
   storage. The concept of CTDB is displayed in <xref
   linkend="fig.ha.samba.overview"/>.</para>
  
  <figure id="fig.ha.samba.overview">
   <title>Structure of a CTDB Cluster</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="ha_samba.svg" width="80%"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="ha_samba.png" width="80%"/>
    </imageobject>
   </mediaobject>
  </figure>
  
  <para></para>
  
  <para>A clustered Samba server must share certain data:</para>
  <itemizedlist>
   <listitem>
    <para>Mapping table that associate Unix user and group IDs to
     Windows users and groups.</para>
   </listitem>
   <listitem>
    <para>User database must be synchronized between all nodes.</para>
   </listitem>
   <listitem>
    <para>Join information for a member server in a Windows domain must
     be available on all nodes.</para>
   </listitem>
   <listitem>
    <para>Meta data has to be available on all nodes, like active SMB
     session, share connections, and various locks.</para>
   </listitem>
  </itemizedlist>
 </sect1>
 
 
 <sect1 id="sec.ha.samba.basicconf">
  <title>Basic Configuration</title>
  <para>To set up a clustered Samba server, proceed as follows:</para>
  <procedure>
   <step>
    <para>Configure your cluster (&ais;, Pacemaker, OCFS2) as described
     in this guide. </para>
   </step>
   <step>
    <para>Configure a shared filesystem, like OCFS2 and mount
     it, for example on <filename>/shared</filename>.</para>
   </step>
   <step>
    <para>If you want to turn on POSIX ACLs, enable it:</para>
    <itemizedlist>
     <listitem>
      <para>For a new OCFS2 filesystem use:</para>
      <screen><command>mkfs.ocfs2</command> --fs-features=xattr ...</screen>
     </listitem>
     <listitem>
      <para>For an existing OCFS2 filesystem use:</para>
      <screen><command>tunefs.ocfs2</command> --fs-feature=xattr<!-- 
      --> <replaceable>DEVICE</replaceable></screen>
      <para>Make sure the <option>acl</option> option is specified in
      the filesystem resource. Use the <command>crm</command> command:</para>
      <screen><command>primary</command> ocfs2-3 ocf:heartbeat:Filesystem<!--
       --> options="acl" ...</screen>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>Make sure the services <systemitem
     class="service">ctdb</systemitem>, <systemitem
      class="service">smb</systemitem>, <systemitem
       class="service">nmb</systemitem>, and <systemitem
        class="service">winbind</systemitem> are disabled:</para>
    <screen><command>chkconfig</command> ctdb off
<command>chkconfig</command> smb off
<command>chkconfig</command> nmb off
<command>chkconfig</command> winbind off</screen>
   </step>
   <step>
    <para>Create directories for CTDB lock and Samba state on the shared filesystem:</para>
    <screen><command>mkdir</command> -p /shared/samba/private</screen>
   </step>
   <step>
    <para>Insert in <filename>/etc/ctdb/nodes</filename> all nodes which
     contains all private IP addresses of each node in the cluster:</para>
    <screen>&subnetI;.10
&subnetI;.11</screen>
   </step>
   <step>
    <para>Set the following global options in
     <filename>/etc/samba/smb.conf</filename> on all nodes:</para>
    <screen>[global]
passdb backend = tdbsam
clustering = yes
idmap backend = tdb2
private dir = /shared/samba/private
ctdb socket = /var/lib/ctdb/ctdb.socket</screen>
   </step>
   <step>
    <para>Add one or more shares to
     <filename>/etc/samba/smb.conf</filename> on all nodes:</para>
    <screen>[myshare]
path = /shared/myshare
# Other options go here, for example: read only = no</screen>
   </step>
   <step>
    <para>Add a CTDB resource to the cluster:</para>
    <screen><command>crm</command> configure
crm(live)configure# <command>primitive</command> ctdb ocf:heartbeat:CTDB params \
    ctdb_recovery_lock="/shared/samba/ctdb.lock" \
    smb_private_dir="/shared/samba/private" \
    op monitor timeout=20 interval=10
crm(live)configure# <command>clone</command> ctdb-clone ctdb \
    meta globally-unique="false" interleave="true"
crm(live)configure# <command>colocation</command> ctdb-with-fs inf: ctdb-clone fs-clone
crm(live)configure# <command>order</command> start-ctdb-after-fs inf: fs-clone ctdb-clone
crm(live)configure# <command>commit</command></screen>
   </step>
   <step>
    <para>Add a clustered IP address:</para>
    <screen>crm(live)configure# <command>primitive</command> ip ocf:heartbeat:IPaddr2<!-- 
    --> params ip=&subnetII;.222 \
  clusterip_hash="sourceip-sourceport" op monitor interval=60s
crm(live)configure# <command>clone</command> ip-clone ip meta globally-unique="true"
crm(live)configure# <command>colocation</command> ip-with-ctdb inf: ip-clone ctdb-clone
crm(live)configure# <command>order</command> start-ip-after-ctdb inf: ctdb-clone ip-clone
crm(live)configure# <command>commit</command></screen>
   </step>
   <step>
    <para>Check the result:</para>
    <screen><command>crm</command> status
Clone Set: dlm-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: o2cb-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: c-ocfs2-3
     Started: [ hex-14 hex-13 ]
 Clone Set: ctdb-clone
     Started: [ hex-14 hex-13 ]
 Clone Set: ip-clone (unique)
     ip:0       (ocf::heartbeat:IPaddr2):       Started hex-13
     ip:1       (ocf::heartbeat:IPaddr2):       Started hex-14</screen>
   </step>
  </procedure>
 </sect1>
 
 <sect1 id="sec.ha.samba.testing">
  <title>Debugging and Testing Clustered Samba</title>
  <para>To check if your filesystem is suitable for CTDB, use the
   command <command>ping_pong</command>. It tests certain aspects 
   of your cluster filesystem like the coherence and performance 
   (see <ulink url="http://wiki.samba.org/index.php/Ping_pong"/>) 
   and as such gives some indications on how your cluster may behave 
   under high load. Start the test by running it on one nodes with the
   following command:</para>
  
  <procedure>
   <step>
    <para>Start the command <command>ping_pong</command> on one node and
     replace the placeholder <replaceable>N</replaceable> with the
     amount of nodes plus one. The filename is available on your shared
     storage and is therefor available on all nodes:</para>
    <screen><command>ping_pong</command> data.txt <replaceable>N</replaceable></screen>
    <para>Expect a very high locking rate as you running only on one node.
     If the program does not print a locking rate, replace your cluster
     filesystem.</para>
   </step>
   <step>
    <para>Start a second copy of <command>ping_pong</command> on another
    node with the same parameters.</para>
    <para>Expect to see a dramatically drop in locking rate. If you find
    one of the following situation, replace your cluster filesystem:</para>
    <itemizedlist>
     <listitem>
      <para><command>ping_pong</command> does not print a lock rate per
       second</para>
     </listitem>
     <listitem>
      <para>the locking rates in the two instances are not almost equal</para>
     </listitem>
     <listitem>
      <para>the locking rate did not drop after you have started the
       second instance</para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>Start a third copy of <command>ping_pong</command>. Add
     another node and note how the locking rate change.</para>
   </step>
   <step>
    <para>Kill the <command>ping_pong</command> commands step by step.
     You should observe an increase of the locking rate until you get
     back to the single node case. If you did not get the expected
     behaviour, replace your cluster filesystem.</para>
   </step>
  </procedure>
 </sect1>
 
 
 <sect1 id="sec.ha.samba.moreinfo">
  <title>For More Information</title>
  <itemizedlist>
   <listitem>
    <para><ulink url="http://linux-ha.org/wiki/CTDB_(resource_agent)"/></para>
   </listitem>
   <listitem>
    <para><ulink url="http://wiki.samba.org/index.php/CTDB_Setup"/></para>
   </listitem>
   <listitem>
    <para><ulink url="http://ctdb.samba.org"/></para>
   </listitem>
  </itemizedlist>
 </sect1>
 
</chapter>
