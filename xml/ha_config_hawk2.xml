<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->

<chapter xml:id="cha.conf.hawk2" 
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
 <title>Configuring and Managing Cluster Resources with &hawk;2</title>
 <info>
  <abstract>
   <para> To configure and manage cluster resources, &productname; either
    use &haweb; (&hawk;), or the &crmshell; (&crmsh;) command
    line utility. </para>
   <para> &hawk;2's Web-based user-interface interface allows you to monitor
    and administer your Linux cluster from non-Linux machines as well.
    Furthermore, it is the ideal solution in case your system only provides a
    minimal graphical user interface. </para>

   <!-- <para>
    This chapter introduces &hawk; and covers basic tasks for configuring
    and managing cluster resources: modifying global cluster options,
    creating basic and advanced types of resources (groups and clones),
    configuring constraints, specifying failover nodes and failback nodes,
    configuring resource monitoring, starting, cleaning up or removing
    resources, and migrating resources manually. For detailed analysis of
    the cluster status, &hawk; generates a cluster report
    (<literal>hb_report</literal>). You can view the cluster history or
    explore potential failure scenarios with the simulator.
   </para>-->
  </abstract>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:maintainer/>
   <dm:status>editing</dm:status>
   <dm:deadline/>
   <dm:priority/>
   <dm:translation>yes</dm:translation>
   <dm:languages/>
   <dm:release/>
   <dm:repository/>
  </dm:docmanager>
 </info>
 <note>
  <title>&hawk; Versions</title>
  <para>&productname; 12 SP1 ships with two &hawk; versions in
   parallel:</para>
  <itemizedlist>
   <listitem>
    <para>&hawk; version <literal>1</literal>(included in RPM package:
      <systemitem class="resource">hawk</systemitem>). For the documentation of
     this &hawk; version, see <xref linkend="cha.ha.config.hawk"/>.</para>
   </listitem>
   <listitem>
    <para>&hawk; version <literal>2</literal> (included in RPM package
      <systemitem class="resource">hawk2</systemitem>). This version is
     documented in the current chapter.</para>
   </listitem>
  </itemizedlist>
 </note>

 <sect1 xml:id="sec.conf.hawk2.req">
  <title>&hawk;2 Requirements</title>
  <para>Before users can log in to &hawk;, the following requirements need
   to be fulfilled:</para>

  <itemizedlist>
   <listitem>
    <para>The <systemitem class="resource">hawk2</systemitem> package must be
     installed on all cluster nodes you want to connect to with
     &hawk;2.</para>
   </listitem>
   <listitem>
    <para> On the machine from which you want to access a cluster node using
     &hawk;2, you only need a (graphical) Web browser with JavaScript and
     cookies enabled to establish the connection. </para>
   </listitem>
   <listitem>
    <para> To use &hawk;, the respective Web service must be started on the
     node that you want to connect to via the Web interface. See <xref
      linkend="pro.ha.hawk2.service"/>.</para>
    <para> If you have set up your cluster with the scripts from the <systemitem
      class="resource">ha-cluster-bootstrap</systemitem> package, the
     &hawk;2 service is already started. </para>
   </listitem>
   <listitem>
    <para> &hawk; users must be members of the <systemitem class="groupname"
      >haclient</systemitem> group. The installation creates a Linux user named
      <systemitem class="username">hacluster</systemitem>, who is added to the
      <systemitem class="groupname">haclient</systemitem> group. When using the
     <command>ha-cluster-init </command>script for setup, a default password is
     set for the <systemitem class="username">hacluster</systemitem> user. </para>
    <para> Before starting &hawk;2, set or change the password for the
      <systemitem>hacluster</systemitem> user. Alternatively, create a new user
     which is a member of the <systemitem class="groupname"
      >haclient</systemitem> group. </para>
    <para> Do this on every node you will connect to with &hawk;2. </para>
   </listitem>
  </itemizedlist>

  <procedure xml:id="pro.ha.hawk2.service">
   <title>Starting &hawk; Services</title>
   <step>
    <para> On the node you want to connect to, open a shell and log in as
     &rootuser;. </para>
   </step>
   <step>
    <para> Check the status of the service by entering </para>
    <screen>&prompt.root;<command>systemctl</command> status hawk</screen>
   </step>
   <step>
    <para> If the service is not running, start it with </para>
    <screen>&prompt.root;<command>systemctl</command> start hawk</screen>
    <para> If you want &hawk; to start automatically at boot time, execute
     the following command: </para>
    <screen>&prompt.root;<command>systemctl</command> enable hawk</screen>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.conf.hawk2.login">
  <title>Logging In</title>
  <para> The &hawk;2 Web interface uses the HTTPS protocol and port
    <literal>7630</literal>. </para>
  <!--taroth 2015-08-10: fate#318183 (SLE HA 12 SP1)-->
  <note>
   <title>Accessing &hawk;2 Via a Virtual IP</title>
   <para>To access &hawk;2 even in case the cluster node you usually connect
    to is down, a virtual IP address (<literal>IPaddr</literal> or
     <literal>IPaddr2</literal>) can be configured for &hawk;2 as cluster
    resource. It does not need any special configuration.</para>
  </note>
  <procedure xml:id="pro.ha.hawk2.login">
   <title>Logging In to the &hawk;2 Web Interface</title>

   <step>
    <para> On any machine, start a Web browser and make sure that JavaScript and
     cookies are enabled. </para>
   </step>
   <step>
    <para> As URL, enter the IP address or host name of any cluster node running
     the &hawk; Web service. Alternatively, enter the address of any
      <literal>IPaddr(2)</literal> resource that the cluster operator may have
     configured: </para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    <note>
     <title>Certificate Warning</title>
     <para> If a certificate warning appears when you try to access the URL for
      the first time, a self-signed certificate is in use. Self-signed
      certificates are not considered trustworthy by default. </para>
     <para> Ask your cluster operator for the certificate details to verify the
      certificate. </para>
     <para> To proceed anyway, you can add an exception in the browser to bypass
      the warning. </para>
     <para> For information on how to replace the self-signed certificate with a
      certificate signed by an official Certificate Authority, refer to FIXME
      <!--<xref linkend="vle.ha.hawk2.certificate"/>-->. </para>
    </note>
   </step>
   <step>
    <para> On the &hawk;2 login screen, enter the
      <guimenu>Username</guimenu> and <guimenu>Password</guimenu> of the
      <systemitem class="username">hacluster</systemitem> user (or of any other
     user that is a member of the <systemitem class="groupname"
      >haclient</systemitem> group). </para>
   </step>
   <step>
    <para> Click <guimenu>Log In</guimenu>. </para>
   </step>
  </procedure>
 </sect1>

 <sect1 xml:id="sec.conf.hawk2.overview">
  <title>&hawk; Overview: Main Elements</title>

  <para>After logging in to &hawk;2, you see a navigation bar at the
   left-hand side and a top-level row with some links at the right-hand
   side.</para>


  <note>
   <title>Available Functions in &hawk;2</title>
   <para> By default, users logged in as &rootuser; or <systemitem
     class="username">hacluster</systemitem> have full read-write access to all
    cluster configuration tasks. However, <xref linkend="cha.ha.acl"
     xrefstyle="select:title"/> (ACLs) can be used to define fine-grained access
    permissions. </para>
   <para> If ACLs are enabled in the CRM, the available functions in &hawk;2
    depend on the user role and access permissions assigned to you. In addition,
    the following functions in &hawk;2 can only be executed by the user
     <systemitem class="username">hacluster</systemitem>: <remark>remark
     2015-11-24: krig, is the following still valid?</remark></para>
   <itemizedlist>
    <listitem>
     <para> Generating a cluster report. </para>
    </listitem>
    <listitem>
     <para> Using the <guimenu>History Explorer</guimenu>. </para>
    </listitem>
    <listitem>
     <para> Viewing recent events for nodes or resources. </para>
    </listitem>
   </itemizedlist>
  </note>


  <sect2 xml:id="sec.conf.hawk2.overview.leftnav">
   <title>Left Navigation Bar</title>

   <variablelist>
    <varlistentry>
     <term><guimenu>Manage</guimenu></term>
     <listitem>
      <itemizedlist>
       <listitem>
        <para>
         <guimenu>Status</guimenu>: Displays the current cluster status at a glance (similar to
         <command>crm status</command> on the &crmsh;). For details, see <xref
          linkend="sec.conf.hawk2.monitor.status"/>. The screens refreshes itself in near real-time, any status changes
           for nodes or resources are reflected almost immediately.</para>
       </listitem>
       <listitem>
        <para>
         <guimenu>Dashboard</guimenu>: Allows you to monitor multiple clusters (also located on
         different sites, in case you have a &geo; cluster setup). For details, see <xref
          linkend="sec.conf.hawk2.monitor.dash"/>. The screens refreshes itself in near real-time, any status changes
         for nodes or resources are reflected almost immediately.</para>
       </listitem>
       <!--<listitem>
        <para>
         <guimenu>Graph</guimenu>: Shows a graphical representation of the nodes
         and resources configured in the CIB. It also shows the relationships
         between resources.</para>
       </listitem>-->
       <listitem>
        <para>
         <guimenu>History</guimenu>: Opens the <guimenu>History Explorer</guimenu> from which you
         can generate cluster reports. For details, see FIXME.</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Configuration</guimenu></term>
     <listitem>
      <itemizedlist>
       <listitem>
        <para>
         <guimenu>Add a resource</guimenu>: Opens the resource configuration
         screen. For details, see FIXME. </para>
       </listitem>
       <listitem>
        <para>
         <guimenu>Add a constraint</guimenu>: Opens the constraint configuration
         screen. For details, see FIXME.</para>
       </listitem>
       <listitem>
        <para>
         <guimenu>Choose a wizard</guimenu>: Lets you select from a number of
         wizards that guide you through the creation of resources for a certain
         workload, for example, a DRBD block device. For details, see
         <xref linkend="sec.conf.hawk2.cluster.rsc.wizard"/>.</para>
       </listitem>
       <listitem>
        <para>
         <guimenu>Edit</guimenu>: Lets you edit node names and attributes, resources and
         constraints.</para>
       </listitem> 
       <listitem>
        <para><guimenu>Configuration</guimenu>: Open the <guimenu>Cluster
          Configuration</guimenu> screen where you can modify global cluster
         options. For details, see FIXME.</para>
       </listitem>
       <listitem>
        <para><guimenu>Command Log</guimenu>: Lists the &crmsh; commands
         recently executed by &hawk;2. </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Access Control</guimenu></term>
     <listitem>
      <itemizedlist>
       <listitem>
        <para>
         <guimenu>Roles</guimenu>: Opens a screen where you can create roles for access control
         lists (a set of rules which describe access rights to the CIB). For details, see
         FIXME.</para>
       </listitem>
       <listitem>
        <para>
         <guimenu>Targets</guimenu>:Opens a screen where you can create targets (system users) for
         Access Control Lists and assign roles to them. For details, see FIXME.</para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.overview.toprow">
   <title>Top-Level Navigation</title>
   <para>&hawk;'s top-level row shows the following entries:</para>
   <itemizedlist>
    <listitem>
     <para><guimenu>Cluster Details</guimenu>: Click it to open a list of details that refresh
      themselves in almost real-time&mdash;any changes of epoch and status are reflected almost
      immediately. </para></listitem>
    <listitem>
     <para><guimenu>Simulator</guimenu>: Click it to enable or disable the
      simulator mode. For details, see FIXME. </para>
    </listitem>
    <listitem>
     <para><guimenu>Profile</guimenu>: Click it to change your language
      preferences for &hawk;2.</para>
    </listitem>
    <listitem>
     <para><guimenu>Help</guimenu>: Click it to access the HTML and PDF versions
      of the &productname; manuals that are installed on the node that you
      are connected to with &hawk;2.</para>
    </listitem>
    <listitem>
     <para><guimenu>Logout</guimenu>: Click it to log out.</para>
    </listitem>
   </itemizedlist>
  </sect2>
 </sect1>

 <sect1 xml:id="sec.conf.hawk2.monitor">
  <title>Monitoring Clusters</title>
  <para>Monitoring clusters belongs to the main tasks of cluster
   operators.</para>
  <sect2 xml:id="sec.conf.hawk2.monitor.status">
   <title>Status Screen: Monitoring a Cluster</title>
   <para>After you have logged in, &hawk; displays the
     <guimenu>Status</guimenu> screen by default. An icon in the upper right
    corner shows the cluster status at one glance. For further details, have a
    look at the following categories:</para>
   <variablelist>
    <varlistentry>
     <term>Errors</term>
     <listitem>
      <para>Only shown if errors have occurred.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Resources</term>
     <listitem>
      <para>Shows the configured resources including their
        <guimenu>Status</guimenu>, <guimenu>Name</guimenu> (ID), Location (node
       on which they are running), and resource agent <guimenu>Type</guimenu>.
       From the <guimenu>Operations</guimenu> column, you can trigger actions,
       edit the resource or view resource details like <guimenu>Meta
        Attributes</guimenu>, <guimenu>Operations</guimenu>, or
        <guimenu>Instances.</guimenu> Actions that can be triggered include
        <literal>start</literal> / <literal>stop</literal>,
        <literal>manage</literal> / <literal>unmanage</literal>,
        <literal>migrate</literal> / <literal>unmigrate</literal> or
        <literal>cleanup</literal>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Nodes</term>
     <listitem>
      <para>Shows the nodes belonging to the cluster site you are logged in to,
       including the nodes' <guimenu>Status</guimenu> and
        <guimenu>Name</guimenu>. In the <guimenu>Maintenance</guimenu> and
        <guimenu>Standby</guimenu> columns, you can set or remove the
        <literal>maintenance</literal> or <literal>standby</literal> flag for a
       node. The <guimenu>Operations</guimenu> column allows you to view further
       details, for example, if a <literal>utilization</literal>,
        <literal>standby</literal> or <literal>maintenance</literal> attribute
       is set for the respective node. </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <figure pgwide="0">
    <title>&hawk;2&mdash;Cluster Status</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%"
       format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%"
       format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.monitor.dash">
   <title>Dashboard Screen: Monitoring Multiple Clusters</title>
   <para> The cluster information displayed in the <guimenu>Dashboard</guimenu>
    is stored on the server side and synchronized between the cluster nodes (if
    passwordless SSH access between the cluster nodes has been configured). For
    details, see <xref linkend="sec.crmreport.nonroot.ssh"/>. However, the
    machine you are running &hawk;2 on does not even need to be part of any
    cluster for that purpose&mdash;it can be a separate, unrelated system. </para>
   <procedure xml:id="pro.conf.hawk2.dashboard">
    <title>Monitoring Multiple Clusters with &hawk;2</title>
    <para>In addition to the general <xref linkend="sec.conf.hawk2.req"
      xrefstyle="select:title"/>, the following prerequisites need to be
     fulfilled to monitor multiple clusters with &hawk;:</para>
    <itemizedlist>
     <title>Prerequisites</title>
     <listitem>
      <para> All clusters to be monitored from &hawk;'s
        <guimenu>Dashboard</guimenu> must be running &productname;
       &productnumber;. It is not possible to monitor clusters that are
       running earlier versions of &productname;. </para>
     </listitem>
     <listitem>
      <para>If you did not replace the self-signed certificate for &hawk;2
       on every cluster node with your own certificate (or a certificate signed
       by an official Certificate Authority), log in to &hawk;2 on
        <emphasis>every</emphasis> node in <emphasis>every</emphasis> cluster at
       least once. Verify the certificate (or add an exception in the browser to
       bypass the warning). </para>
     </listitem>
    </itemizedlist>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <guimenu>Dashboard</guimenu>.
     </para>
    </step>
    <step>
     <para>To add dashboards for multiple clusters, click <guimenu>Add
       Cluster</guimenu>.</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%"
         format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%"
         format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <substeps>
      <step>
       <para> Enter a custom <guimenu>Cluster name</guimenu> with which to
        identify the cluster in the <guimenu>Dashboard</guimenu>. </para>
      </step>
      <step>
       <para>Enter the <guimenu>Hostname of a node in the
        cluster</guimenu>.</para>
      </step>
      <step>
       <para>To specify further options like the update interval for
        &hawk;2, the port to connect to, or whether to use HTTPS (default),
        click <guimenu>Advanced</guimenu> and enter the details. </para>
      </step>
      <step>
       <para>Confirm your changes with <guimenu>Add</guimenu>.</para>

      </step>
      <step>
       <para> To add more clusters to the dashboard, click <guimenu>Add
         Cluster</guimenu> again and enter the details for the next cluster. </para>
       <figure>
        <title>&hawk;2&mdash;Dashboard</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png"  width="100%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png" width="100%"
           format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
     </substeps>
    </step>
    <step>
     <para> To remove a cluster from the dashboard, click the
       <literal>x</literal> icon next to the cluster's name. </para>
    </step>
    <step>
     <para> To view details about a cluster, enter a password and click
       <guimenu>Connect</guimenu>. </para>
     <para> &hawk;2 will show you a summary with the status of the
      respective nodes, resources, and tickets.
      <!--
        (05:20:55 PM) krig: each column is a node except the last one which is for stopped resources, 
        and each row is a resource 
        (05:21:24 PM) krig: the frame of each box is the node status: green is good, red is bad, gray is offline
        (05:21:54 PM) krig: the fill color of each box is the status of the resource on that node: 
        here green means running, blue means master and orange means slave
        (05:09:42 PM) krig: in the dashboard, pointing at each box gives more information (details)
       -->
      Clicking a cluster name will take you to the <guimenu>Status</guimenu>
      view for that cluster, from where you can administer it as usual.</para>
    </step>
   </procedure>

  </sect2>
 </sect1>
 
 <sect1 xml:id="sec.conf.hawk2.cluster.config">
  <title>Configuring Global Cluster Options</title>
  <para> Global cluster options control how the cluster behaves when confronted
   with certain situations. They are grouped into sets and can be viewed and
   modified with cluster management tools like &hawk;, and &crmsh;. The
   predefined values can usually be kept. However, to make key functions of your
   cluster work correctly, you need to adjust the following parameters after
   basic cluster setup: </para>
  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.basics.global.quorum" xrefstyle="select:title"
     />
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.basics.global.stonith"
      xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>

  <procedure xml:id="pro.conf.hawk2.global">
   <title>Modifying Global Cluster Options</title>
   <step>
    <para>Log in to &hawk;2:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>In the left navigation bar, select <menuchoice>
      <guimenu>Manage</guimenu>
      <guimenu>Configuration</guimenu>
     </menuchoice>.</para>
    <para>The <guimenu>Cluster Configuration</guimenu> screen opens. It displays the
     global cluster options and their current values. </para>
    <para>To display a short description of the parameter at the right side of
     the screen, hover your mouse over a parameter. </para>
    <figure pgwide="0">
     <title>&hawk;&mdash;Cluster Configuration</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk2-cluster-config.png" width="100%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk2-cluster-config.png" width="100%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para> Check the values for <guimenu>no-quorum-policy</guimenu> and
      <guimenu>stonith-enabled</guimenu> and adjust them, if necessary: </para>
    <substeps performance="required">
     <step>
      <para> Set <guimenu>no-quorum-policy</guimenu> to the appropriate value.
       For two-node clusters, it must be set to <literal>ignore</literal>. See
        <xref linkend="sec.ha.config.basics.global.quorum"/> for more details.
      </para>
     </step>
     <step>
      <para> If you need to disable fencing for any reasons, set
        <guimenu>stonith-enabled</guimenu> to <literal>no</literal>. By default,
       this global option is set to <literal>true</literal>, because for normal
       cluster operation it is necessary to use &stonith; devices. According
       to the default value, the cluster will refuse to start any resources if
       no &stonith; resources have been defined. </para>
      <important>
       <title>No Support Without &stonith;</title>
       <para> A cluster without &stonith; is not supported. </para>
      </important>
     </step>
     <step>
      <para> To remove a parameter from the cluster configuration, click the
       minus icon next to the parameter. If a parameter is deleted, the cluster
       will behave as if that parameter had the default value. </para>
     </step>
     <step>
      <para> To add a new parameter to the cluster configuration, choose one
       from the drop-down box and click the plus icon. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> If you need to change <guimenu>Resource Defaults</guimenu> or
      <guimenu>Operation Defaults</guimenu>, proceed as follows: </para>
    <substeps performance="required">
     <step>
      <para> To adjust a value, either select different value from the drop-down
       box or edit the value directly. </para>
     </step>
     <step>
      <para> To add a new resource default or operation default, choose one from
       the empty drop-down list, click the plus icon and enter a value. If there
       are default values, &hawk;2 proposes them automatically. </para>
     </step>
     <step>
      <para> To remove a parameter, click the minus icon next to it. If no
       values are specified for <guimenu>Resource Defaults</guimenu> and
        <guimenu>Operation Defaults</guimenu>, the cluster uses the default
       values that are documented in <xref
        linkend="sec.ha.config.basics.meta.attr"/> and <xref
        linkend="sec.ha.config.basics.operations"/>. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> Confirm your changes. </para>
   </step>
  </procedure>
 </sect1>
 <sect1 xml:id="sec.conf.hawk2.cluster.rsc">
  <title>Adding Cluster Resources</title>
  <para>
   A cluster administrator needs to create cluster resources for every
   resource or application that runs on servers in your cluster. Cluster
   resources can include Web sites, mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times.
  </para>
  
  <para>
   For an overview of the resource types you can create, refer to
   <xref linkend="sec.ha.config.basics.resources.types"/>. After you have
   specified the resource basics (ID, class, provider, and type), 
   &hawk; shows the following categories:
  </para>
  
  <variablelist>
   <varlistentry>
    <term>Parameters (Instance Attributes)</term>
    <listitem>
     <para>Determine which instance of a service the resource controls. For more
      information, refer to <xref linkend="sec.ha.config.basics.inst.attr"/>. </para>
     <para> When creating a resource, &hawk; automatically shows any
      required parameters. Edit them to get a valid resource configuration.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Operations</term>
    <listitem>
     <para>Needed for resource monitoring. For more information, refer to <xref
       linkend="sec.ha.config.basics.operations"/>.</para>
     <para> When creating a resource, &hawk; displays the most important
      resource operations (<literal>monitor</literal>, <literal>start</literal>,
      and <literal>stop</literal>). </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Meta Attributes</term>
    <listitem>
     <para>Tell the CRM how to treat a specific resource. For more information,
      refer to <xref linkend="sec.ha.config.basics.meta.attr"/>. </para>
     <para> When creating a resource, &hawk; automatically lists the
      important meta attributes for that resource (for example, the
       <literal>target-role</literal> attribute that defines the initial state
      of a resource. By default, it is set to <literal>Stopped</literal>, so the
      resource will not start immediately). </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>You can adjust the entries and values in those categories either during
   resource creation or at any time later.</para>
  
  <sect2 xml:id="sec.conf.hawk2.cluster.rsc.wizard">
   <title>Adding Resources with the Wizard</title>
   <para>The &hawk; wizard is a convenient way of setting up simple
    resources like a virtual IP address or an SDB &stonith; resource, for
    example. However, it is most useful for more complex configurations that
    include multiple resources, like the resource configuration for a DRBD block
    device or an Apache Web server. The wizard guides you through all configuration steps and
    provides information about the parameters you need to enter.</para>
   <procedure>
    <step>
    <para>Log in to &hawk;2:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
     <para>From the left navigation bar, select 
      <menuchoice>
       <guimenu>Configuration</guimenu>
       <guimenu>Choose a Wizard</guimenu>
      </menuchoice>.
     </para>
    </step>
    <step>
     <para>Expand the individual categories by clicking the arrow down icon next
      to them and select the desired wizard.</para>
    </step>
    <step>
     <para>Follow the instructions on the screen. After the last configuration
      step, <guimenu>Verify</guimenu> the values you have entered.</para>
     <para>&hawk; shows which actions it is going to perform and what the
      configuration looks like. Depending on the configuration, you might be
      prompted for the &rootuser; password before you can
      <guimenu>Apply</guimenu> the configuration.</para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;2&mdash;Wizard for Apache Web Server</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-wizard-apache.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-wizard-apache.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.primitive">
   <title>Adding Simple Resources</title>
    <para>
     To create the most basic type of resource, proceed as follows:
    </para>
   <procedure xml:id="pro.conf.hawk2.primitive.add">
    <title>Adding a Primitive Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Resources</guimenu>
       <guimenu>Add a resource</guimenu>
       <guimenu>Primitive</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
    <step>
     <para>In case a resource template exists on which you want to base the resource configuration,
      select the respective <guimenu>Template</guimenu>. For details about configuring templates,
      see <xref linkend="pro.conf.hawk2.template.add"/>. </para>
    </step>
    <step xml:id="step.ha.config.hawk2.primitive.start">
     <para>Select the resource agent <guimenu>Class</guimenu> you want to use:
      <literal>lsb</literal>, <literal>ocf</literal>,
       <literal>service</literal>, or <literal>stonith</literal> or
       <literal>systemd</literal>. For more information, see <xref
       linkend="sec.ha.config.basics.raclasses"/>. </para>
    </step>
    <step>
     <para> If you selected <literal>ocf</literal> as class, specify the
       <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
      specification allows multiple vendors to supply the same resource agent.
     </para>
    </step>
    <step>
     <para> From the <guimenu>Type</guimenu> list, select the resource agent you
      want to use (for example, <guimenu>IPaddr</guimenu> or
       <guimenu>Filesystem</guimenu>). A short description for this resource
       agent is displayed.</para>
     <note>
      <para> The selection you get in the <guimenu>Type</guimenu> list depends
       on the <guimenu>Class</guimenu> (and for OCF resources also on the
        <guimenu>Provider</guimenu>) you have chosen. </para>
     </note>
     <para>With that, you have specified the resource basics. </para>
     <figure>
      <title>&hawk;2&mdash;Primitive Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-basic.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-basic.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>If you want to keep the <guimenu>Parameters</guimenu>,
       <guimenu>Operations</guimenu>, and <guimenu>Meta Attributes</guimenu> as
      suggested by &hawk;, click <guimenu>Create</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      action has been successful. </para>
     <para>
     If you want to adjust the parameters, operations or meta attributes at any time later,
     refer to <xref linkend="sec.conf.hawk2.rsc.modify"/>.
     </para>
    </step>
   </procedure>
   <para>
    If you want to create lots of resources with similar configurations,
    defining a resource template is the easiest way. After being defined, it
    can be referenced in primitives or in certain types of constraints. For
    detailed information about function and use of resource templates, refer
    to <xref linkend="sec.ha.config.basics.constraints.templates"/>.
   </para>
   <procedure xml:id="pro.conf.hawk2.template.add">
    <title>Adding a Resource Template</title>
    <para>Resources templates are configured like primitive resources:</para>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
       <guimenu>Resources</guimenu>
       <guimenu>Add a resource</guimenu>
       <guimenu>Template</guimenu>
      </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
    <step>
     <para>Follow the instructions in <xref linkend="pro.conf.hawk2.primitive.add"/>, starting from
       <xref linkend="step.ha.config.hawk2.primitive.start" xrefstyle="select:label"/>.</para>
    </step>
   </procedure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.rsc.modify">
   <title>Modifying Resources</title>
   <para>If you have created a resource, you can edit its configuration at any
   time by adjusting parameters, operations or meta attributes as needed.</para>
   
   <procedure xml:id="pro.conf.hawk2.rsc.modify">
    <title>Modifying Parameters, Operations or Meta Attributes for a
     Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>On the &hawk; <guimenu>Status</guimenu> screen, go to the
       <guimenu>Resources</guimenu> list.</para>
    </step>
    <step>
     <para>In the <guimenu>Operations</guimenu> column, click the
       <guimenu>Edit</guimenu> icon next to the resource you want to
      modify.</para>
     <para>The resource configuration screen opens.</para>
     <figure>
      <title>&hawk;2&mdash;Editing A Primitive Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-edit.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-edit.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>To add a new parameter, operation, or meta attribute, select an entry
      from the empty drop-down box and click the <guimenu>Plus</guimenu> icon
      next to it to add the entry to the respective category.</para>
    </step>
    <step>
     <para>To edit any values in the <guimenu>Operations</guimenu> category,
      click the <guimenu>Edit</guimenu> icon of the respective entry, enter a
      different value for the operation and click <guimenu>Apply</guimenu>.
     </para>
    </step>
    <step>
     <para>When you are finished, click the <guimenu>Apply</guimenu> button in
      the resource configuration screen to confirm your changes to the
      parameters, operations or meta attributes.</para>
     <para>A message at the top of the screen shows if the action has been
      successful.</para>
    </step>
   </procedure>
   
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.rsc.stonith">
   <title>Creating &stonith; Resources</title>
   <important>
    <title>No Support Without &stonith;</title>
    <para>
     A cluster without &stonith; is not supported.
    </para>
   </important>
   <para>
    By default, the global cluster option <literal>stonith-enabled</literal>
    is set to <literal>true</literal>: If no &stonith; resources have been
    defined, the cluster will refuse to start any resources. Configure one or
    more &stonith; resources to complete the &stonith; setup. To add a &stonith;
    resource for SBD or for libvirt (&kvm;/&xen;), the easiest way is to use
    the &hawk; wizard (see <xref
     linkend="sec.conf.hawk2.cluster.rsc.wizard"/>). While
    &stonith; resources are configured similar to other resources, their behavior
    is different in some respects. For details refer
    to <xref linkend="sec.ha.fencing.config"/>.
   </para>
   <procedure xml:id="pro.conf.hawk2.stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Resources</guimenu>
      <guimenu>Add a resource</guimenu>
      <guimenu>Primitive</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Resource ID</guimenu>. </para>
    </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class <guimenu>stonith</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the &stonith;
        plug-in for controlling your &stonith; device. A short description
        for this plug-in is displayed.
       </para>
      </step>
     <step>
     <para>
      &hawk; automatically shows the required
      <guimenu>Parameters</guimenu> for the resource. Enter values for each
      parameter.
     </para>
    </step>
    <step>
     <para>
      &hawk; displays the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk; will add the proposed
      operations and their default values as soon as you confirm.
     </para>
    </step>
    <step>
     <para>
      Adopt the default <guimenu>Meta Attributes</guimenu> settings if there
      is no reason to change them.
     </para>
     <figure>
      <title>&hawk;2&mdash;&stonith; Resource</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-primitive-stonith.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-primitive-stonith.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      Confirm your changes to create the &stonith; resource.
     </para>
     <para>A message at the top of the screen shows if the
      action has been successful.</para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration, add constraints. 
    For more details, refer to <xref linkend="cha.ha.fencing"/>.
   </para>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.group">
   <title>Configuring a Cluster Resource Group</title>
   <para>
    Some cluster resources depend on other components or resources and
    require that each component or resource starts in a specific order and
    runs on the same server. To simplify this configuration we support the
    concept of groups.
   </para>
   
   
   <para>Resource groups contain a set of resources that need to be located together, be started
    sequentially and stopped in the reverse order. For an example of a resource group and more
    information about groups and their properties, refer to <xref
    linkend="sec.ha.config.basics.resources.advanced.groups"/>.
   </para>
   <note>
    <title>Empty Groups</title>
    <para>
     Groups must contain at least one resource, otherwise the configuration
     is not valid. In &hawk;, primitives cannot be created or modified
     while creating a group. Before adding a group, create primitives (or
     advanced resource types likes clones or multi-state resources, 
     if necessary), and configure them as desired. For details, refer to
     <xref linkend="sec.conf.hawk2.rsc.primitive"/>, FIXME, and FIXME.
    </para>
   </note>
   <!--taroth 2015-11-30: **missing functionality: once created, you can't rename a group or 
    change its children **-->
   <procedure xml:id="pro.conf.hawk2.group">
    <title>Adding a Resource Group</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Resources</guimenu>
      <guimenu>Add a resource</guimenu>
      <guimenu>Group</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Group ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To define the group members, select one or multiple entries in the list
      of <guimenu>Children</guimenu>. <remark>taroth 2015-11-30: krig: how does resorting group
       members work in hawk2? I did not find a way to change the sorting order...<!-- To define the order
      of the group members, you currently need to add and remove them in the
      order you desire.--></remark>
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;2&mdash;Resource Group</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-rsc-group.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-rsc-group.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  
  <sect2 xml:id="sec.conf.hawk2.rsc.clone">
   <title>Configuring a Clone Resource</title>
   <para> If you want certain resources to run simultaneously on multiple nodes in your cluster,
    configure these resources as a clones. An example of a resource that can be configured as clone
    is <literal>ocf:pacemaker:controld</literal> for cluster file systems like OCFS2. that you want
    to use as clone. Any regular resources or resource groups can be cloned. Instances of cloned
    resources may behave identically. However, they may also be configured differently, depending on
    which node they are hosted.</para>
   <para>
    For an overview of the available types of resource clones, refer to
    <xref linkend="sec.ha.config.basics.resources.advanced.clones"/>.
   </para>
   <note>
    <title>Sub-resources for Clones</title>
    <para>
     Clones can either contain a primitive or a group as sub-resources. In
     &hawk;, sub-resources cannot be created or modified while creating a
     clone. Before adding a clone, create sub-resources and configure them as
     desired. For details, refer to
     <xref linkend="sec.conf.hawk2.rsc.primitive"/> or
     <xref linkend="sec.conf.hawk2.rsc.group"/>.
    </para>
   </note>
   <procedure xml:id="pro.conf.hawk2.clone">
    <title>Adding or Modifying Clones</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Resources</guimenu>
      <guimenu>Add a resource</guimenu>
      <guimenu>Clone</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Clone ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the clone.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;2&mdash;Clone Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-clone.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-clone.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.ms">
   <title>Configuring a Multi-state Resource</title>
   <para>Multi-state resources are a specialization of clones. They allow the instances to be in one
    of two operating modes (called <literal>active/passive</literal>,
     <literal>primary/secondary</literal>, or <literal>master/slave</literal>). Multi-state
     resources must contain exactly one group or one regular resource. </para>
   <para>
    When configuring resource monitoring or constraints, multi-state
    resources have different requirements than simple resources. For
    details, see &paceex;, available from <link xlink:href="http://www.clusterlabs.org/doc/"/>. Refer to
    section <citetitle>Multi-state - Resources That Have Multiple
     Modes</citetitle>.
   </para>
  
   <note>
    <title>Sub-resources for Multi-state Resources</title>
    <para>
     Multi-state resources can either contain a primitive or a group as sub-resources. In
     &hawk;, sub-resources cannot be created or modified while creating a
     multi-state resource. Before adding a multi-state resource, create sub-resources and configure them as
     desired. For details, refer to
     <xref linkend="sec.conf.hawk2.rsc.primitive"/> or
     <xref linkend="sec.conf.hawk2.rsc.group"/>.
    </para>
   </note>
   <procedure xml:id="pro.conf.hawk2.ms">
    <title>Adding Multi-state Resources</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Resources</guimenu>
      <guimenu>Add a resource</guimenu>
      <guimenu>Multi-state</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Multi-state ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the multi-state resource.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;2&mdash;Multi-state Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-multi-state.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-multi-state.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.rsc.tag">
   <title>Grouping Resources by Using Tags</title>
   <para>Tags are a way to refer to multiple resources at once, without creating any colocation or
    ordering relationship between them. You can use tags for grouping conceptually related
    resources. For example, if you have several resources related to a database, you can add all
    related resources to a tag named <literal>database</literal>.</para>
   <para>
    All resources belonging to a tag can be started or stopped with a single
    command.</para>
  
   <procedure xml:id="pro.conf.hawk2.tag">
    <title>Creating a Tag</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <menuchoice>
      <guimenu>Resources</guimenu>
      <guimenu>Add a resource</guimenu>
      <guimenu>Tag</guimenu>
     </menuchoice>.</para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Tag ID</guimenu>.
     </para>
    </step>
    <step>
     <para> From the <guimenu>Objects</guimenu> list, select the resources you want to refer to with
      the tag. </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create</guimenu> to finish the configuration. 
      A message at the top of the screen shows if the
      action has been successful.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;2&mdash;Tag</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-tag.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-tag.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
  
 </sect1>
 <sect1 xml:id="sec.conf.hawk2.cons">
  <title>Adding Constraints</title>
  <para>
   After you have configured all resources, specify how the cluster should
   handle them correctly. Resource constraints let you specify on which
   cluster nodes resources can run, in which order resources will be loaded,
   and what other resources a specific resource depends on.
  </para>
  <para>
   For an overview of available types of constraints, refer to
   <xref linkend="sec.ha.config.basics.constraints.types"/>. When defining
   constraints, you also need to specify scores. For more information on
   scores and their implications in the cluster, see
   <xref linkend="sec.ha.config.basics.constraints.scores"/>.
  </para>
 
  <procedure xml:id="pro.hawk2.constraints.location">
   <title>Adding Location Constraints</title>
   
   <para>A location constraint defines on which node a resource may be run, is preferred to be run,
    or may not be run. An example of a location constraint is to place all resources related to a
    certain database on the same node.</para>
   <para>To create a location constraint, specify an ID, select the resource for which to define the
    constraint, a score and node. The score indicates the value you are assigning to this resource
    constraint. Constraints with higher scores are applied before those with lower scores.
    <remark>taroth 2015-12-02: todo for next release: explain advanced configuration (via rules)</remark>
   </para>
   <step>
    <para>Log in to &hawk;2:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>From the left navigation bar, select <menuchoice>
     <guimenu>Configuration</guimenu>
     <guimenu>Add a constraint</guimenu>
     <guimenu>Location</guimenu>
    </menuchoice>.</para>
   </step>
   <step>
    <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
   </step>
   <step xml:id="step.hawk2.loc.rsc">
    <para>From the list of <guimenu>Resources</guimenu> select the resource or resources for which
     to define the constraint.</para>
   </step>
   <step>
    <para> Enter a <guimenu>Score</guimenu>. The score indicates the value you are assigning to this
     resource constraint. Positive values indicate the resource can run on the
      <guimenu>Node</guimenu> you specify in the next step. Negative values mean it should not run
     on that node. Constraints with higher scores are applied before those with lower scores.</para>
    <para>Some often used values can also be set via the drop-down box:</para>
    <itemizedlist>
     <listitem>
      <para>If you want to force the resources to run on the node, click the arrow icon and select
        <literal>Always</literal>. This sets the score to <literal>INFINITY</literal>.</para>
     </listitem>
     <listitem>
      <para>If you want the resources to never run on the node, click the arrow icon and select
        <literal>Never</literal>. This sets the score to <literal>-INFINITY</literal>, meaning that
       the resources must not run on the node.</para>
     </listitem>
     <listitem>
      <para>To set the score to <literal>0</literal>, click the arrow icon and select
        <literal>Advisory</literal>. This basically disables the constraint. This is useful when you
       want to set resource discovery but do not want to constrain the resources other than
       that.</para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para>Select a <guimenu>Node</guimenu>.</para>
   </step>
   <step>
    <para>Click <guimenu>Create</guimenu> to finish the configuration. A message at the top of the
     screen shows if the action has been successful.</para>
   </step>
   </procedure>

  <figure pgwide="0">
   <title>&hawk;2&mdash;Location Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-loc-constraint.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-loc-constraint.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  
  <procedure xml:id="pro.hawk2.constraints.colocation">
   <title>Adding Colocation Constraints</title>

   <para>A colocational constraint tells the cluster which resources may or may not run together on
    a node.</para>

   <step>
    <para>Log in to &hawk;2:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>From the left navigation bar, select <menuchoice>
      <guimenu>Configuration</guimenu>
      <guimenu>Add a constraint</guimenu>
      <guimenu>Colocation</guimenu>
     </menuchoice>.</para>
   </step>
   <step>
    <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
   </step>
   <step>
    <para> Enter a <guimenu>Score</guimenu>. The score determines the location relationship between
     the resources. Positive values indicate the resources should run on the same node. Negative
     values indicate the resources should not run on the same node. The score will be combined with
     other factors to decide where to put the resource. </para>
    <para>Some often used values can also be set via the drop-down box:</para>
    <itemizedlist>
     <listitem>
      <para>If you want to force the resources to run on the same node, click the arrow icon and
       select <literal>Always</literal>. This sets the score to <literal>INFINITY</literal>.</para>
     </listitem>
     <listitem>
      <para>If you want the resources to never run on the same node, click the arrow icon and select
        <literal>Never</literal>. This sets the score to <literal>-INFINITY</literal>, meaning that
       the resources must not run on the same node.</para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para> To define the resources for the constraint: </para>
    <substeps performance="required">
     <step xml:id="step.hawk2.col.rsc">
      <para>From the drop-down box in the <guimenu>Resources</guimenu> category, select a resource
       (or a template) and click the plus icon next to the list.</para>
      <para>The resource is added and a new empty drop-down box appears beneath.</para>
     </step>
     <step>
      <para>Repeat this step to add more resources.</para>
      <para>As a colocation constraint defines a dependency between resources, you need at least two
       resources. </para>
      <para>As the topmost resource depends on the next resource and so on, the cluster will first
       decide where to put the last resource, then place the depending ones based on that decision.
       If the constraint cannot be satisﬁed, the cluster may decide not to allow the dependent
       resource to run.</para>
     </step>
     <step>
      <para>To swap the order of resources within the colocation constraint, click the arrow up icon
       next to a resource to swap it with the entry above. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> If needed, specify further parameters for each resource (like <literal>Started</literal>,
     <literal>Stopped</literal>, <literal>Master</literal>,
     <literal>Slave</literal>, <literal>Promote</literal>,
     <literal>Demote</literal>): Click the empty drop-down box
     next to the resource and select the desired entry.</para>
   </step>
   <step>
    <para>Click <guimenu>Create</guimenu> to finish the configuration. A message at the top of the
     screen shows if the action has been successful.</para>
   </step>
  </procedure>
  
  <figure pgwide="0">
   <title>&hawk;2&mdash;Colocation Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-col-constraint.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-col-constraint.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
   
   
  <procedure xml:id="pro.hawk2.constraints.order">
   <title>Adding Order Constraints</title>
   <para>
    Ordering constraints define the order in which resources are started and stopped.
   </para>
   <step>
    <para>Log in to &hawk;2:</para>
    <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
   </step>
   <step>
    <para>From the left navigation bar, select <menuchoice>
     <guimenu>Configuration</guimenu>
     <guimenu>Add a constraint</guimenu>
     <guimenu>Order</guimenu>
    </menuchoice>.</para>
   </step>
   <step>
    <para> Enter a unique <guimenu>Constraint ID</guimenu>. </para>
   </step>
   <step>
    <para> Enter a <guimenu>Score</guimenu>. If the score is greater than zero, the order constraint
    is mandatory, otherwise it is only a suggestion. </para>
    <para>Some often used values can also be set via the drop-down box:</para>
    <itemizedlist>
     <listitem>
      <para>If you want to make the ordering constraint mandatory , click the arrow icon and
       select <literal>Mandatory</literal>.</para>
     </listitem>
     <listitem>
      <para>If you want the ordering constraint to be a suggestion only, click the arrow icon and select
       <literal>Optional</literal>.</para>
     </listitem>
     <listitem>
     <para><literal>Serialize</literal>: FIXME ???.</para>
     </listitem>
    </itemizedlist>
   </step>
   <step>
    <para> For order constraints, you can usually keep the option <guimenu>Symmetrical</guimenu>
     enabled. This specifies that resources are stopped in reverse order. </para>
   </step>
   <step>
    <para> To define the resources for the constraint: </para>
    <substeps performance="required">
     <step xml:id="step.hawk2.order.rsc">
      <para>From the drop-down box in the <guimenu>Resources</guimenu> category, select a resource
       (or a template) and click the plus icon next to the list.</para>
      <para>The resource is added and a new empty drop-down box appears beneath.</para>
     </step>
     <step>
      <para>Repeat this step to add more resources.</para>
      <para>As an order constraint defines a dependency between resources, you need at least two
       resources. The topmost resource will start first, then the second etc. Usually the resources
       will be stopped in reverse order.</para>
     </step>
     <step>
      <para>To swap the order of resources within the order constraint, click the arrow up icon
       next to a resource to swap it with the entry above. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> If needed, specify further parameters for each resource (like <literal>Started</literal>,
     <literal>Stopped</literal>, <literal>Master</literal>,
     <literal>Slave</literal>, <literal>Promote</literal>,
     <literal>Demote</literal>): Click the empty drop-down box
     next to the resource and select the desired entry.</para>
   </step>
   <step>
    <para>Confirm your changes to finish the configuration. A message at the top of the
     screen shows if the action has been successful.</para>
   </step>
  </procedure>

  <figure pgwide="0">
   <title>&hawk;2&mdash;Order Constraint</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk2-order-constraint.png" width="100%" format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk2-order-constraint.png" width="100%" format="PNG"/>
    </imageobject>
   </mediaobject>
  </figure>
  <para>
   As an alternative format for defining constraints, you can use <xref linkend="sec.ha.config.basics.constraints.rscset"
    xrefstyle="select:title"/>. They have the same ordering semantics as  <xref linkend="sec.ha.config.basics.resources.advanced.groups"
     xrefstyle="select:title"/>.
   </para>
  
 
  
  <procedure xml:id="pro.hawk2.constraints.sets">
   <title>Using Resource Sets for Constraints</title>
   <step>
    <para>
     To use a resource set within a location constraint:
    </para>
    <substeps performance="required">
     <step>
      <para>
       Proceed as outlined in
       <xref linkend="pro.hawk2.constraints.location"/>, apart from
       <xref linkend="step.hawk2.loc.rsc" xrefstyle="select:label"/>: Instead of selecting
       a single resource, select multiple
       resources by pressing <keycap function="control"/> or
       <keycap function="shift"/> in addition to the mouse click. This
       creates a resource set within the location constraint.
      </para>
     </step>
      <step>
      <para>
       To remove a resource from the location constraint, press
       <keycap function="control"/> and click the resource again to deselect
       it. 
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para> To use a resource set within a colocation or order constraint: </para>
    <substeps performance="required">
     <step>
      <para> Proceed as described in <xref linkend="pro.hawk2.constraints.colocation"/> or <xref
        linkend="pro.hawk2.constraints.order"/>, apart from the step where you define the resources
       for the constraint (<xref linkend="step.hawk2.col.rsc" xrefstyle="select:label"/> or <xref
        linkend="step.hawk2.order.rsc"/>): </para>
     </step>
     <step>
      <para>Add multiple resources.</para>
     </step>
     <step>
      <para>To create a resource set, click the chain icon next to a resource to link it to the
       resource above. A resource set is visualized by a frame around the resources belonging to a
       set.</para>
     </step>
     <step>
      <para> You can combine multiple resources to a resource set or create multiple resource sets. </para>
      <figure>
       <title>&hawk;2&mdash;Two Resource Sets in a Colocation Constraint</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk2-constraint-set.png" width="100%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk2-constraint-set.png" width="100%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </step>
     <step>
      <para> To unlink a resource from the resource above, click the scissors icon next to the
       resource. </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Confirm your changes to finish the constraint configuration.
    </para>
   </step>
  </procedure>
  <para>
   For more information on configuring constraints and detailed background
   information about the basic concepts of ordering and colocation, refer to
   the documentation available at <link xlink:href="http://www.clusterlabs.org/doc/"/>:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     &paceex;, chapter <citetitle>Resource Constraints</citetitle>
    </para>
   </listitem>
   <listitem>
    <para>
     <citetitle>Colocation Explained</citetitle>
    </para>
   </listitem>
   <listitem>
    <para>
     <citetitle>Ordering Explained</citetitle>
    </para>
   </listitem>
  </itemizedlist>
 </sect1>
</chapter>