<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<!-- Converted by suse-upgrade version 1.1 -->
<sect1 xmlns="http://docbook.org/ns/docbook" 
 xmlns:xi="http://www.w3.org/2001/XInclude" 
 xmlns:xlink="http://www.w3.org/1999/xlink" 
 version="5.0" xml:id="sec.conf.hawk2.manage">
  
  <title>Managing Cluster Resources</title>
  
    <info>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:maintainer/>
    <dm:status>editing</dm:status>
    <dm:deadline/>
    <dm:priority/>
    <dm:translation>yes</dm:translation>
    <dm:languages/>
    <dm:release/>
    <dm:repository/>
   </dm:docmanager>
    </info>
 
  <para> In addition to configuring your cluster resources, &hawk; allows you to manage existing
   resources from the <guimenu>Status</guimenu> screen. For a general overview of the screen refer
   to <xref linkend="sec.conf.hawk2.manage.monitor.status"/>.</para>
  <sect2 xml:id="sec.conf.hawk2.manage.start">
   <title>Starting Resources</title>
   <para> Before you start a cluster resource, make sure it is set up correctly. For example, if you
    want to use an Apache server as a cluster resource, set up the Apache server first. Complete the
    Apache configuration before starting the respective resource in your cluster. </para>
   <note>
    <title>Do Not Touch Services Managed by the Cluster</title>
    <para> When managing a resource via the &hasi;, the same resource must not be started or
     stopped otherwise (outside of the cluster, for example manually or on boot or reboot). The
     &hasi; software is responsible for all service start or stop actions. </para>
    <para> However, if you want to check if the service is configured properly, start it manually,
     but make sure that it is stopped again before &ha; takes over. </para>
    <para> For interventions in resources that are currently managed by the cluster, set the
     resource to <literal>maintenance mode</literal> first. <remark>taroth 2015-12-04: ToDo: add
      for next revision: krig - how does that work with hawk2? does it work already? 
      I searched in the Operations column for a resource but could not find anything there...
      krig 2015-12-08: Ah! That's the "Unmanage" operation on resources.</remark>
    </para>
   </note>
   <para> When creating a resource with &hawk;, you can set its initial state with the
     <literal>target-role</literal> meta attribute. If you set its value to
     <literal>stopped</literal>, the resource does not start automatically after being created. </para>
   <procedure xml:id="pro.hawk2.rsc.start">
    <title>Starting A New Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para> Select the resource to start and in its <guimenu>Operations</guimenu> column click the
       <guimenu>Start</guimenu> icon. To continue, confirm the message that appears. </para>
     <para>As soon as the resource has started, &hawk; changes the resource's
       <guimenu>Status</guimenu> to green and shows on which node it is running. </para>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.manage.cleanup">
   <title>Cleaning Up Resources</title>
   <para> A resource will be automatically restarted if it fails, but each failure increases the
    resource's failcount. </para>
   <para> If a <literal>migration-threshold</literal> has been set for the resource, the node will
    no longer run the resource when the number of failures reaches the migration threshold. </para>
   <para> A resource's failcount can either be reset automatically (by setting a
     <literal>failure-timeout</literal> option for the resource) or you can reset it manually as
    described below. </para>
   <procedure xml:id="pro.hawk2.clean">
    <title>Cleaning Up A Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para> Go to the resource to clean up. In the <guimenu>Operations</guimenu> column click the
      arrow down button and select <guimenu>Cleanup</guimenu>. To continue, confirm the message that
      appears. </para>
     <para>This executes the
      command <command>crm resource cleanup</command> and cleans up the
      resource on all nodes. </para>
    </step>
   </procedure>
  </sect2>
  <sect2 xml:id="sec.conf.hawk2.manage.remove">
   <title>Removing Cluster Resources</title>
   <para> If you need to remove a resource from the cluster, follow the procedure below to avoid
    configuration errors: </para>
   <procedure xml:id="pro.hawk2.rsc.rm">
    <title>Removing a Cluster Resource</title>
    <step>
     <para> Clean up the resource on all nodes as described in <xref linkend="pro.hawk2.clean"/>.
     </para>
    </step>
    <step>
     <para>Stop the resource:</para>
     <substeps>
      <step>
       <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
         <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
      </step>
      <step>
       <para>In the <guimenu>Operations</guimenu> column click the <guimenu>Stop</guimenu> button
        next to the resource. </para>
      </step>
      <step>
       <para>To continue, confirm the message that appears.</para>
       <para>The <guimenu>Status</guimenu> column will reflect the change as soon as the resource is
        stopped.</para>
      </step>
     </substeps>
    </step>
    <step>
     <para>Delete the resource:</para>
     <substeps>
      <step>
       <para> In the left navigation bar, select <guimenu>Edit</guimenu>. </para>
      </step>
      <step>
       <para>In the list of <guimenu>Resources</guimenu>, go to the respective resource. From the
         <guimenu>Operations</guimenu> column click the <guimenu>Delete</guimenu> icon next to the
        resource.</para>
      </step>
      <step>
       <para>To continue, confirm the message that appears.</para>
      </step>
     </substeps>
    </step>
   </procedure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.migrate">
   <title>Migrating Cluster Resources</title>
   <para> As mentioned in <xref linkend="sec.conf.hawk2.failover"/>, the cluster will fail over
    (migrate) resources automatically in case of software or hardware failures&mdash;according
    to certain parameters you can define (for example, migration threshold or resource stickiness).
    Apart from that, you can manually migrate a resource to another node in the cluster. Or you
    decide to move it away from the current node and leave the decision about where to put it to the
    cluster. </para>
   <procedure xml:id="pro.hawk2.rsc.migrate">
    <title>Manually Migrating a Resource</title>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para>In the list of <guimenu>Resources</guimenu>, go to the respective resource.</para>
    </step>
    <step>
     <para><remark>taroth 2015-12-07: krig, is there any way to select which node to migrate the
       resource to? krig: also, Hawk1 has two options: "Move" (lets you select where to move the rsc
       to and creates a location constraint with an INFINITY score for the destination node) and
       "Away from current node" (creates a location constraint with a -INFINITY score for the
       current node) - is there anything like this with Hawk2? - taroth 2015-12-08: on behalf of
       krig, filed https://bugzilla.suse.com/show_bug.cgi?id=958386 for this </remark>In the
       <guimenu>Operations</guimenu> column click the arrow down button and select
       <guimenu>Migrate</guimenu>. To continue, confirm the message that appears.</para>
    </step>
   </procedure>
   <para> To allow a resource to move back again, proceed as follows: </para>
   <procedure xml:id="pro.hawk2.rsc.migrate.back">
    <title>Unmigrating a Resource</title>

    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Status</guimenu>. The list of
       <guimenu>Resources</guimenu> also shows the <guimenu>Status</guimenu>. </para>
    </step>
    <step>
     <para>In the list of <guimenu>Resources</guimenu>, go to the respective resource.</para>
    </step>
    <step>
     <para>In the <guimenu>Operations</guimenu> column click the arrow down button and select
       <guimenu>Unmigrate</guimenu>. To continue, confirm the message that appears.</para>
     <para>
        This uses the <command>crm_resource&nbsp;</command>
        <option>-U</option> command. The resource
       <emphasis>can</emphasis> move back to its original location or it may stay where it is
      (depending on resource stickiness).</para>
    </step>
   </procedure>

   <para> For more information, see &paceex;, available from <link
     xlink:href="http://www.clusterlabs.org/doc/"/>. Refer to section
    <citetitle>Resource Migration</citetitle>. </para>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.monitor.status">
   <title>Monitoring a Cluster</title>
   <para>After you have logged in, &hawk; displays the <guimenu>Status</guimenu> screen by
    default. An icon in the upper right corner shows the cluster status at one glance. For further
    details, have a look at the following categories:</para>
   <variablelist>
    <varlistentry>
     <term>Errors</term>
     <listitem>
      <para>Only shown if errors have occurred.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Resources</term>
     <listitem>
      <para>Shows the configured resources including their <guimenu>Status</guimenu>,
        <guimenu>Name</guimenu> (ID), Location (node on which they are running), and resource agent
        <guimenu>Type</guimenu>. From the <guimenu>Operations</guimenu> column, you can trigger
       actions, edit the resource or view resource details like <guimenu>Meta Attributes</guimenu>,
        <guimenu>Operations</guimenu>, or <guimenu>Instances.</guimenu> Actions that can be
       triggered include <literal>start</literal> / <literal>stop</literal>,
        <literal>manage</literal> / <literal>unmanage</literal>, <literal>migrate</literal> /
        <literal>unmigrate</literal> or <literal>cleanup</literal>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Nodes</term>
     <listitem>
      <para>Shows the nodes belonging to the cluster site you are logged in to, including the nodes'
        <guimenu>Status</guimenu> and <guimenu>Name</guimenu>. In the <guimenu>Maintenance</guimenu>
       and <guimenu>Standby</guimenu> columns, you can set or remove the
        <literal>maintenance</literal> or <literal>standby</literal> flag for a node. The
        <guimenu>Operations</guimenu> column allows you to view further details, for example, if a
        <literal>utilization</literal>, <literal>standby</literal> or <literal>maintenance</literal>
       attribute is set for the respective node. </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <figure pgwide="0">
    <title>&hawk;2&mdash;Cluster Status</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk2-cluster-status-main.png" width="100%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 xml:id="sec.conf.hawk2.manage.monitor.dash">
   <title>Monitoring Multiple Clusters</title>
   <para> The cluster information displayed in the <guimenu>Dashboard</guimenu> screen is stored on
    the server side and synchronized between the cluster nodes (if passwordless SSH access between
    the cluster nodes has been configured). For details, see <xref
     linkend="sec.crmreport.nonroot.ssh"/>. However, the machine you are running &hawk;2 on does
    not even need to be part of any cluster for that purpose&mdash;it can be a separate,
    unrelated system. </para>
   <procedure xml:id="pro.conf.hawk2.dashboard">
    <title>Monitoring Multiple Clusters with &hawk;2</title>
    <para>In addition to the general <xref linkend="sec.conf.hawk2.req" xrefstyle="select:title"/>,
     the following prerequisites need to be fulfilled to monitor multiple clusters with
     &hawk;:</para>
    <itemizedlist>
     <title>Prerequisites</title>
     <listitem>
      <para> All clusters to be monitored from &hawk;'s <guimenu>Dashboard</guimenu> must be
       running &productname; &productnumber;. It is not possible to monitor clusters that
       are running earlier versions of &productname;. </para>
     </listitem>
     <listitem>
      <para>If you did not replace the self-signed certificate for &hawk;2 on every cluster node
       with your own certificate (or a certificate signed by an official Certificate Authority), log
       in to &hawk;2 on <emphasis>every</emphasis> node in <emphasis>every</emphasis> cluster at
       least once. Verify the certificate (or add an exception in the browser to bypass the
       warning). </para>
     </listitem>
    </itemizedlist>
    <step>
     <para>Log in to &hawk;2:</para>
     <screen>https://<replaceable>HAWKSERVER</replaceable>:7630/</screen>
    </step>
    <step>
     <para>From the left navigation bar, select <guimenu>Dashboard</guimenu>. </para>
    </step>
    <step>
     <para>To add dashboards for multiple clusters, click <guimenu>Add Cluster</guimenu>.</para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk2-dashboard-add-cluster.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <substeps>
      <step>
       <para> Enter a custom <guimenu>Cluster name</guimenu> with which to identify the cluster in
        the <guimenu>Dashboard</guimenu>. </para>
      </step>
      <step>
       <para>Enter the <guimenu>Hostname of a node in the cluster</guimenu>.</para>
      </step>
      <step>
       <para>To specify further options like the update interval for &hawk;2, the port to
        connect to, or whether to use HTTPS (default), click <guimenu>Advanced</guimenu> and enter
        the details. </para>
      </step>
      <step>
       <para>Confirm your changes with <guimenu>Add</guimenu>.</para>

      </step>
      <step>
       <para> To add more clusters to the dashboard, click <guimenu>Add Cluster</guimenu> again and
        enter the details for the next cluster. </para>
       <figure>
        <title>&hawk;2&mdash;Dashboard</title>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png" width="100%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="hawk2-dashboard-multiple-clusters.png" width="100%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </figure>
      </step>
     </substeps>
    </step>
    <step>
     <para> To remove a cluster from the dashboard, click the <literal>x</literal> icon next to the
      cluster's name. </para>
    </step>
    <step>
     <para> To view details about a cluster, enter a password and click <guimenu>Connect</guimenu>. </para>
     <para> &hawk;2 will show you a summary with the status of the respective nodes, resources,
      and tickets.
      <!--
       (05:20:55 PM) krig: each column is a node except the last one which is for stopped resources, 
       and each row is a resource 
       (05:21:24 PM) krig: the frame of each box is the node status: green is good, red is bad, gray is offline
       (05:21:54 PM) krig: the fill color of each box is the status of the resource on that node: 
       here green means running, blue means master and orange means slave
       (05:09:42 PM) krig: in the dashboard, pointing at each box gives more information (details)
      -->
      Clicking a cluster name will take you to the <guimenu>Status</guimenu> view for that cluster,
      from where you can administer it as usual.</para>
    </step>
   </procedure>
  </sect2>
 </sect1>

  
 