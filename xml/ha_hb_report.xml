<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<!--https://fate.suse.com/314907: hb_reports without ssh root access  -->

<appendix id="app.crm_report.nonroot">
  <title>Running Cluster Reports Without &rootuser; Access</title>
  <para> All cluster nodes must be able to access each other via SSH. Tools like
    <command>hb_report</command> or <command>crm_report</command> (for
    troubleshooting) and &hawk;'s <guimenu>History Explorer</guimenu>
    require passwordless SSH access between the nodes, otherwise they can only
    collect data from the current node.</para>
  <para>If passwordless SSH &rootuser; access does not comply with
    regulatory requirements, you can use a work-around for running cluster
    reports. It consists of the following basic steps: </para>
  
  <orderedlist>
    <listitem>
      <para>Creating a dedicated local user account (for running
        <command>crm_report</command> or <command>hb_report</command>).</para>
    </listitem>
    <listitem>
      <para>Configuring a passwordless SSH access for that user account, best by
        using a non-standard SSH port.</para>
    </listitem>
    <listitem>
      <para>Configuring <command>sudo</command> for that user.</para>
    </listitem>
    <listitem>
      <para>Running <command>crm_report</command> or
        <command>hb_report</command> as that user.
      </para>
    </listitem>
  </orderedlist>
  
  <para>By default when <command>crm_report</command> or
    <command>hb_report</command> are run, they attempt to authenticate to remote
    nodes first as &rootuser;, then as user <systemitem class="username"
      >hacluster</systemitem>. However, if your local security policy prevents
    &rootuser; login using SSH, the script execution will fail on all remote
    nodes. Even attempting to run the script as user <systemitem
      class="username">hacluster</systemitem> will fail because this is a service
    account, and its shell is set to <filename>/bin/false</filename>, which
    prevents login. Creating a dedicated local user is the only option to
    successfully run the <command>crm_report</command> or
    <command>hb_report</command> script on all nodes in the &ha;
    cluster.</para>

  <sect1>
    <title>Creating a Local User Account</title>
    <para> In the following example, we will create a local user named
        <systemitem class="username">hareport</systemitem> from command
      line. The password can be anything that meets your security requirements.
      Alternatively, you can create the user account and set the password with &yast;. </para>
    
    <procedure>
      <title>Creating a Dedicated User Account for Running Cluster
        Reports</title>
      <step>
        <para>Start a shell and create a user <systemitem class="username"
            >hareport</systemitem> with a home directory
            <filename>/home/hareport </filename>:</para>
        <screen>&prompt.root;<command>useradd</command> -m -d /home/hareport -c “HA Report” hareport</screen>
      </step>
      <step>
        <para>Set a password for the user:</para>
        <screen>&prompt.root;passwd hareport</screen>
      </step>
      <step>
        <para>When prompted, enter and re-enter a password for the user.</para>
      </step>
    </procedure>

    <important>
      <title>Same User Is Required On Each Cluster Nodes</title>
      <para>To create the same user account on all nodes, repeat the steps above
        on each cluster node.</para>
    </important>
  </sect1>
  
  <sect1>
    <title>Configuring a Passwordless SSH Account</title>
    
    <para>
      <remark>taroth 2015-06-18: todo - check with DEVs if the following two
        procedures are still needed since hb_report has the -X option
        now...</remark>
    </para>
    
    <procedure>
      <title>Configuring the SSH Daemon for a Non-Standard Port</title>
      <para>By default the SSH daemon, and the SSH client, talk and listen on
        port <literal>22</literal>. If your network security guidelines require
        the default SSH port to be changed to an alternate high numbered port
        you need to modify the daemon's configuration file
          <filename>/etc/ssh/sshd_config</filename>.</para>
      <step>
        <para>To modify the default port, search the file for the 
          <literal>Port</literal> line, uncomment it and edit it according to your wishes.
          For example, set it to: </para>
        <screen>Port 5022</screen>
      </step>
      <step>
        <para>If your organization does not permit the &rootuser; user to
          access other servers, search the file for the
            <literal>PermitRootLogin</literal> entry, uncomment it and set it to
            <literal>no</literal>:</para>
        <screen>PermitRootLogin no</screen>
      </step>
      <step>
        <para>Alternatively, add the respective lines to the end of the file by
          executing the following commands:</para>
        <screen>&prompt.root;echo “PermitRootLogin no” &gt;&gt; /etc/ssh/sshd_config
        &prompt.root;echo “Port 5022” &gt;&gt; /etc/ssh/sshd_config</screen>
      </step>
      <step>
        <para>After modifying <filename>/etc/ssh/sshd_config</filename>, restart
          the SSH daemon to make the new settings take effect:</para>
        <screen>&prompt.root;systemctl restart sshd.service</screen>
      </step>
    </procedure>
    
    <important>
      <title>Same Settings Are Required On Each Cluster Node</title>
      <para>Repeat the SSH daemon configuration above on each cluster
        node.</para>
    </important>
    
    <procedure>
      <title>Configuring the SSH Client for a Non-Standard Port</title>
      <para>If the SSH port change is going to be made on all nodes in the
        cluster, it is useful to modify the SSH configuration file,
          <filename>/etc/ssh/sshd_config</filename>. This prevents you from
        specify the SSH port on the command line (with the <option>-X</option>
        option) when running <command>hb_report</command> (or to modify the
        hb_report script to use the non-standard port). At this time there is no
        command line switch for hb_report to specify the SSH port.
          <remark>taroth 2015-06-18: @DEVs, this is no longer true, we know have
          the '-X' option. BTW, does the option only work for 'hb_report' or
          also for 'crm_report'?</remark></para>
      <step>
        <para>To modify the default port, search the file for the
            <literal>Port</literal> line, uncomment it and edit it according to
          your wishes. For example, set it to: </para>
        <screen>Port 5022</screen>
      </step>
      <step>
        <para>Alternatively, add the respective line to the end of the file by
          executing the following commands:</para>
        <screen>&prompt.root;echo “Port 5022” &gt;&gt; /etc/ssh/ssh_config</screen>
      </step>
    </procedure>
    
    <note>
      <title>Settings Only Required on One Node </title>
      <para>The SSH client configuration above is only needed on the node on
        which you want to run the cluster report.</para>
    </note>
      
    <procedure>
      <title>Configuring Shared SSH Keys</title>

      <step>
        <para>
          <remark>taroth 2018-06-18: stopped here today, rest is WIP</remark></para>
      </step>
    </procedure>
    
    
    
     <!-- You can access other servers using SSH and not be requested for a password. While this may be insecure
      at first this is actually a very secure access method since the user can only access servers that their public
      key has been shared with. The shared key must be created as the user that will use the key.
      
      To generate a new key use the following command, authenticate to the server as haereport and run:
      
      ssh-keygen –t rsa
      
      This command will generate a 2048 bit key by default which should be of sufficient strength for all
      purposes. The default location for the keys is ~/.ssh/, unless you have another need for these keys they
      should not be moved from the default. You are also asked to set a passphrase on the key, this is optional
      and for the purposes of running the hb_report script there should be no passphrase on the key.
      
      Once the keys have been generated the public key needs to be copied to each of the other nodes (as
      well as to itself). Use the following command to copy the id_rsa.pub file:
      
      ssh-copy-id -i ~/.ssh/id_rsa.pub <hostname>
        
        You can use the DNS name for each server, an alias, or the IP Address in the command. During the copy
        process you will be asked to accept the host key for each node, and you will need to provide the
        password for the haereport account (this will be the only time you need to). After the key is shared to all
        the cluster nodes you should test connectivity by issuing the following command:
        
        ssh <hostname>
          
         You should be automatically connected to the remote server without being asked to accept a certificate
         or enter a password.
          
          NOTE: This process can be done on each node, or if you intend to launch hb_report from the same node
          each time it can be done on one node only.-->
    
  </sect1>
  
  <sect1>
    <title>Configuring <command>sudo</command></title>
    <para>work in progress</para>
  </sect1>
  
  <sect1>
    <title>Running A Cluster Report </title>
    <para>work in progress</para>
  </sect1>
  
</appendix>
