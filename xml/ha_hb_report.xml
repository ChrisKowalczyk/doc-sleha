<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE appendix PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
  <!ENTITY % entities SYSTEM "entity-decl.ent">
  %entities;
]>

<!--https://fate.suse.com/314907: hb_reports without ssh root access  -->

<appendix id="app.crm_report.nonroot">
  <title>Running Cluster Reports Without &rootuser; Access</title>
  <para> All cluster nodes must be able to access each other via SSH. Tools like
    <command>hb_report</command> or <command>crm_report</command> (for
    troubleshooting) and &hawk;'s <guimenu>History Explorer</guimenu>
    require passwordless SSH access between the nodes, otherwise they can only
    collect data from the current node.</para>
  <para>If passwordless SSH &rootuser; access does not comply with
    regulatory requirements, you can use a work-around for running cluster
    reports. It consists of the following basic steps: </para>
  
  <orderedlist>
    <listitem>
      <para>Creating a dedicated local user account (for running
        <command>crm_report</command> or <command>hb_report</command>).</para>
    </listitem>
    <listitem>
      <para>Configuring a passwordless SSH access for that user account, best by
        using a non-standard SSH port.</para>
    </listitem>
    <listitem>
      <para>Configuring <command>sudo</command> for that user.</para>
    </listitem>
    <listitem>
      <para>Running <command>crm_report</command> or
        <command>hb_report</command> as that user.
      </para>
    </listitem>
  </orderedlist>
  
  <para>By default when <command>crm_report</command> or
    <command>hb_report</command> are run, they attempt to authenticate to remote
    nodes first as &rootuser;, then as user <systemitem class="username"
      >hacluster</systemitem>. However, if your local security policy prevents
    &rootuser; login using SSH, the script execution will fail on all remote
    nodes. Even attempting to run the script as user <systemitem
      class="username">hacluster</systemitem> will fail because this is a service
    account, and its shell is set to <filename>/bin/false</filename>, which
    prevents login. Creating a dedicated local user is the only option to
    successfully run the <command>crm_report</command> or
    <command>hb_report</command> script on all nodes in the &ha;
    cluster.</para>

  <sect1>
    <title>Creating a Local User</title>
    <para> In the following example, we will create a local user named
        <systemitem class="username">hareport</systemitem> from command
      line. The password can be anything that meets your security requirements.
      Alternatively, you can create the user account and set the password with &yast;. </para>
    
    <procedure>
      <step>
        <para>Start a shell and create a user <systemitem class="username"
            >hareport</systemitem> with a home directory
            <filename>/home/hareport </filename>:</para>
        <screen>&prompt.root;<command>useradd</command> -m -d /home/hareport -c “HA Report” hareport</screen>
      </step>
      <step>
        <para>Set a password for the user:</para>
        <screen>&prompt.root;passwd hareport</screen>
      </step>
      <step>
        <para>When prompted, enter and re-enter a password for the user.</para>
      </step>
    </procedure>

    <important>
      <title>Same User Is Required On All Cluster Nodes</title>
      <para>Repeat the steps above on each cluster node to create the same user
        account on all nodes.</para>
    </important>
  </sect1>
  
  
</appendix>
