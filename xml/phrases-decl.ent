<!ENTITY def-existing-cluster 
'  The term <quote>existing cluster</quote> is used to refer to any
    cluster that consists of at least one node. Existing clusters have a basic
    &corosync; configuration that defines the communication channels, but
    they do not necessarily have resource configuration yet.'>
    
 <!ENTITY def-multicast
 '  A technology used for a one-to-many communication within a network that
    can be used for cluster communication. &corosync; supports both
    multicast and unicast.'>
   
<!ENTITY def-unicast
'  A technology for sending messages to a single network destination.
    &corosync; supports both multicast and unicast. In &corosync;, unicast
    is implemented as UDP-unicast (UDPU).'>
   
<!ENTITY def-mcastaddr
'  IP address to be used for multicasting by the &corosync; executive. The IP
   address can either be IPv4 or IPv6. '>   
   
<!ENTITY def-mcastport
'  The port to use for cluster communication.'>   

<!ENTITY def-bindnetaddr
'The network address the &corosync; executive should bind to. '>

<!ENTITY def-rrp 
' Allows the  use of multiple redundant local area networks for resilience against
   partial or total network faults. This way, cluster communication can
   still be kept up as long as a single network is operational.
   &corosync; supports the Totem Redundant Ring Protocol.'>
   
 <!ENTITY def-csync2 
 'A synchronization tool that can be used to replicate configuration files
    across all nodes in the cluster, and even across multi-site clusters.'>  
    
<!ENTITY def-conntrack
'Allow interaction with the in-kernel connection tracking system for
    enabling <emphasis>stateful</emphasis> packet inspection for iptables. Used
    by the &hasi; to synchronize the connection status between cluster
    nodes.'>    
    
<!ENTITY def-ay
'&ay; is a system for installing one or more &sle; systems automatically
    and without user intervention. '>    