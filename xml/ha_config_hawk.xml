<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--taroth 2011-08-22: todo fates #309100, #303620, #310135, #310186, 87, 88,
89, 90, 91, #310303, #310359-->
<!--taroth 2011-11-07: additional HAWK stuff:  simulator, history explorer,
 setup wizard, hb_report-->
<chapter id="cha.ha.configuration.hawk">
 <title>Configuring and Managing Cluster Resources (Web Interface)</title>
 <abstract>
  <para>
   In addition to the <command>crm</command> command line tool and the
   &hbgui; the &hasi; also comes with the &haweb; (&hawk;), a Web-based user interface
   for management tasks. It allows you to monitor and administer your Linux
   cluster also from non-Linux machines. Furthermore, it is an ideal
   solution in case your system does not provide or allow a graphical user
   interface.
  </para>
  <para>
   <remark>taroth 2011-11-04: check what hawk can do and adjust
    accordingly</remark> This chapter introduces &hawk; and covers basic tasks needed
   when configuring and managing cluster resources: modifying global cluster
   options, creating basic and advanced types of resources (groups and clones),
   configuring constraints, specifying failover nodes and failback nodes,
   configuring resource monitoring, starting, cleaning up or removing resources,
   and migrating resources manually. </para>

  <para> The Web interface is included in the <systemitem class="resource"
    >hawk</systemitem> package. It must be installed on all cluster nodes you
   want to connect to with &hawk;. On the machine from which you want to
   access a cluster node using &hawk;, you only need a (graphical) Web
   browser with JavaScript and cookies enabled to establish the connection.
  </para>
 </abstract>
 <note>
  <title>User Authentication</title>
  <para>
   To log in to the cluster from &hawk;, the respective user must be a
   member of the <systemitem class="groupname">haclient</systemitem> group.
   The installation creates a Linux user named
   <systemitem class="username"
    >hacluster</systemitem> which is member
   of the <systemitem class="groupname"
    >haclient</systemitem> group.
  </para>
  <para>
   Before using &hawk;, either set a password for the
   <systemitem>hacluster</systemitem> user or create a new user which is
   member of the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Do this on every node you will connect to with &hawk;.
  </para>
 </note>
 <sect1 id="sec.ha.config.hawk.intro">
  <title>&hawk;&mdash;Overview</title>
  <para><!--FIXME--></para>
  <sect2 id="sec.ha.config.hawk.intro.connect">
   <title>Starting &hawk; and Logging In</title>
   <procedure id="pro.ha.hawkstart">
    <title>Starting &hawk;</title>
    <para>To use &hawk;, the respective Web service must be started on the
     node that you want to connect to with the Web interface. For communication,
     the standard HTTP(s) protocol and port <literal>7630</literal> is used. </para>
    <step>
     <para>On the node you want to connect to, open a shell and log in as
      &rootuser;. </para>
    </step>
    <step>
     <para> Check the status of the service by entering </para>
     <screen>rchawk status</screen>
    </step>
    <step>
     <para> If the service is not running, start it with </para>
     <screen>rchawk start</screen>
     <para> If you want &hawk; to start automatically at boot time, execute
      the following command: </para>
     <screen>chkconfig hawk on</screen>
    </step>
   </procedure>
   <procedure id="pro.ha.hawk.login">
    <!-- <remark>taroth 2010-03-03: tserong, do we have any restrictions regarding
    the browsers we support (or that have been tested with hawk)? tserong: any
    modern graphical web browser with JavaScript and cookies enabled - if we
    need an explicit supported browser statement, then I'd say: Firefox 3.0+,
    IE 7.0+</remark>-->
    <step>
     <para> On any machine, start a Web browser and make sure that JavaScript
      and cookies are enabled. </para>
    </step>
    <step>
     <para> Point it at the IP address or hostname of any cluster node, or the
      address of any <literal>IPaddr(2)</literal> resource that you may have
      configured: </para>
     <screen>https://<replaceable>IPaddress</replaceable>:7630/</screen>
     <note>
      <title>Certificate Warning</title>
      <para> Depending on your browser and browser options, you may get a
       certificate warning when trying to access the URL for the first time.
       This is because &hawk; uses a self-signed certificate that is not
       considered trustworthy per default. </para>
      <para> To proceed anyway, you can add an exception in the browser to
       bypass the warning. To avoid the warning in the first place, the
       self-signed certificate can also be replaced with a certificate signed by
       an official Certificate Authority. For information on how to do so, refer
       to <xref linkend="vle.ha.hawk.certificate"/>. </para>
     </note>
    </step>
    <step>
     <para> On the &hawk; login screen, enter the
       <guimenu>Username</guimenu> and <guimenu>Password</guimenu> of the
       <systemitem class="username">hacluster</systemitem> user (or of any other
      user that is member of the <systemitem class="groupname"
       >haclient</systemitem> group) and click <guimenu>Log In</guimenu>. </para>
     <para> The <guimenu>Cluster Status</guimenu> screen appears, displaying the
      status of your cluster nodes and resources similar to the output of the
      <command>crm_mon</command>. </para>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.configuration.hawk.intro.main">
   <title>Main Screen: Cluster Status </title>

   <para>After logging in, &hawk; displays the <guimenu>Cluster
     Status</guimenu> screen. It shows a summary with the most important global
    cluster parameters and the status of your cluster nodes and resources. The
    following color code is used for status display: </para>

   <itemizedlist>
    <listitem>
     <para> Green: OK. For example, the resource is running or the node is
      online. </para>
    </listitem>
    <listitem>
     <para> Red: Bad, unclean. For example, the resource has failed or the node
      was not shut down cleanly. </para>
    </listitem>
    <listitem>
     <para> Yellow: In transition. For example, the node is currently being shut
      down. </para>
    </listitem>
    <listitem>
     <para> Grey: Not running, but the cluster expects it to be running. For
      example, nodes that the administrator has stopped or put into
       <literal>standby</literal> mode. Also nodes that are offline are
      displayed in gray (if they have been shut down cleanly). </para>
    </listitem>
   </itemizedlist>
   <para> If a resource has failed, a failure message with the details is shown
    in red at the top of the screen. </para>

   <!--screenshot needs update-->
   <figure pgwide="0">
    <title>&hawk;&mdash;Cluster Status</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-cluster-status.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-cluster-status.png" width="80%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>

   <para>The <guimenu>Cluster Status</guimenu> screen refreshes itself in near
    real-time. It lets you choose between the following views:</para>
   <variablelist>
    <varlistentry>
     <term>Summary View</term>
     <listitem>
      <para>Shows the most important global cluster parameters and the status of
       your cluster nodes and resources at one glance. To see more details for a
       certain node or resource, click the respective entries that are marked as
       links. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Tree View</term>
     <listitem>
      <para>Presents an expandable view of the most important global cluster
       parameters and the status of your cluster nodes and resources. Click the
       arrows to expand or collapse the elements belong to the respective
       category. In contrast to the <guimenu>Summary View</guimenu> this view
       not only shows the resources' ID and status but also the resources' type
       (for example, if it is a primitive, clone, or group).</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Table View</term>
     <listitem>
      <para>This view is especially useful for larger clusters, because it shows
       in a concise way which resources are currently running on which node.
       Inactive nodes or resources are also displayed. </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para> </para>
   <para>To perform basic operator tasks on nodes and resources (like starting,
    or stopping resources, bringing nodes online, or viewing details), click the
    wrench icon next to the respective node or resource to access a context
    menu.</para>
   <para>For more complex tasks like configuring resources, constraints, or
    global cluster options, use the navigation bar at the left hand side. From
    there, you can also generate a cluster report
    (<literal>hb_report</literal>), view the cluster history, or explore
    potential failure scenarios with the simulator.</para>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.global">
  <title>Configuring Global Cluster Options</title>
  
  <para>
   Global cluster options control how the cluster behaves when confronted
   with certain situations. They are grouped into sets and can be viewed and
   modified with the cluster management tools like &hbgui;, &hawk;, and
   <command>crm</command> shell. The predefined values can be kept in most
   cases. However, to make key functions of your cluster work correctly, you
   need to adjust the following parameters after basic cluster setup:
  </para>
  
  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.ha.configuration.basics.global.quorum"
      xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.ha.configuration.basics.global.stonith"
      xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>
  
  <procedure id="pro.ha.config.hawk.global">
   <title>Modifying Global Cluster Options</title>
   <step>
    <para>Log in to &hawk; as described in <xref
      linkend="sec.ha.config.hawk.intro.connect"/>. </para>
   </step>
   <step>
    <para> In the left navigation bar, select <guimenu>Cluster
      Properties</guimenu> to view the global cluster options and their current
     values. </para>
   </step>
   <step>
    <para> Depending on your cluster requirements, set
      <guimenu>no-quorum-policy</guimenu> to the appropriate value. </para>
   </step>
   <step>
    <para> If you need to disable fencing for any reasons, deselect
      <guimenu>stonith-enabled</guimenu>. </para>
   </step>
   <step>
    <para>
     <remark>taroth 2011-11-08: couldn't try yet - DEVs, does this remove the
      property as a whole or only the value?</remark>To remove a value for a
     cluster property, click the minus icon next to the property.</para>
   </step>
   <step>
    <para>To add a new property, choose one from the drop-down list and click
     the plus icon.</para>
   </step>
   <step>
    <para> Confirm your changes. 
     <remark>taroth 2011-11-11: todo: add screenshot</remark></para>
   </step>
  </procedure>
 <!-- tserong 2011-11-08:** missing functionality: this screen will eventually also have 
op_defaults and rsc_defaults **-->
  <para>
   <remark>taroth 2011-07: DEVs, can Hawk switch back to the *default* values
    like the python GUI can? probably not yet...</remark>
<!--   You can at any time switch back to the default values for all options by
   selecting <guimenu>CRM Config</guimenu> in the left pane and clicking
   <guimenu>Default</guimenu>.
-->  </para>
 </sect1>
 <sect1 id="sec.ha.config.hawk.rsc">
  <title>Configuring Cluster Resources</title>
  <para> As a cluster administrator, you need to create cluster resources for
   every resource or application you run on servers in your cluster. Cluster
   resources can include Web sites, e-mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times. </para>
  <para> For an overview of resource types you can create, refer to <xref
    linkend="sec.ha.configuration.basics.resources.types"/>. Apart from the
   basic specification of a resource (ID, class, provider, and type), you can
   add or modify the following parameters during or after creation of a
   resource: </para>
  <itemizedlist>
   <listitem>
    <para>
     <literal>Instance attributes (Parameters)</literal>&mdash;they
     determine which instance of a service the resource controls. For more
     information, refer to <xref linkend="sec.ha.configuration.basics.inst.attr"
     />. </para>
    <para>When creating a resource, &hawk; automatically shows any required
     parameters. Edit them to get a valid resource configuration.</para>
   </listitem>
   <listitem>
    <para>
     <literal>Meta attributes</literal>&mdash;they tell the CRM how to treat
     a specific resource. For more information, refer to <xref
     linkend="sec.ha.configuration.basics.meta.attr"/>. </para>
    <para>When creating a resource, &hawk; automatically lists the important
     meta attributes for that resource (for example, the
      <literal>target-role</literal> attribute that defines the initial state of
     a resource. Per default, it is set to <literal>Stopped</literal>, so the
     resource will not stat immediately). </para>
   </listitem>
   <listitem>
    <para>
     <literal>Operations</literal>&mdash;they are needed for resource
     monitoring. For more information, refer to <xref
     linkend="sec.ha.configuration.basics.operations"/>. </para>
    <para>When creating a resource, &hawk; also shows the most important
     resource operations you should care about (<literal>monitor</literal>,
      <literal>start</literal>, and <literal>stop</literal>). </para>
   </listitem>
  </itemizedlist>

  <sect2 id="sec.ha.config.hawk.create">
   <title>Creating Simple Cluster Resources</title>
   <para> To create the most basic type of a resource, proceed as follows: </para>
   <procedure id="pro.ha.config.hawk.primitives">
    <title>Adding Primitive Resources</title>
    <para>
     <remark>taroth 2011-11-11: todo: add screenshot and check monitoring stuff
      - the other chapters have a separate section for it)</remark></para>
    <step>
     <para> Log in to &hawk; as described in <xref
       linkend="sec.ha.config.hawk.intro.connect"/>. </para>
    </step>
    <step>
     <para>In the left navigation bar, select <guimenu>Resources</guimenu>. The
       <guimenu>Resources</guimenu> tab shows categories for all types of
      resources and lists any resources that are already defined.</para>
    </step>
    <step>
     <para>Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.</para>
    </step>
    <step>
     <para>Specify the resource: </para>
     <substeps>
      <step>
       <para>Enter a unique <guimenu>Resource ID</guimenu>. </para>
      </step>
      <step>
       <para> From the <guimenu>Class</guimenu> list, select the resource agent
        class you want to use for that resource: <guimenu>heartbeat</guimenu>,
         <guimenu>lsb</guimenu>, <guimenu>ocf</guimenu> or
         <guimenu>stonith</guimenu>. For more information, see <xref
         linkend="sec.ha.configuration.basics.raclasses"/>. </para>
      </step>
      <step>
       <para> If you selected <guimenu>ocf</guimenu> as class, specify also the
         <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
        specification allows multiple vendors to supply the same resource agent.
       </para>
      </step>
      <step>
       <para> From the <guimenu>Type</guimenu> list, select the resource agent
        you want to use (for example, <guimenu>IPaddr</guimenu> or
         <guimenu>Filesystem</guimenu>). A short description for this resource
        agent is displayed. </para>
       <para>The selection you get in the <guimenu>Type</guimenu> list depends
        on the <guimenu>Class</guimenu> (and for OCF resources also on the
         <guimenu>Provider</guimenu>) you have chosen. </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>&hawk; automatically shows any required parameters for the
      resource plus an empty drop-down list that you can use to specify an
      additional parameter. </para>
     <para>To define <guimenu>Parameters</guimenu> (instance attributes) for the
      resource:</para>
     <substeps>
      <step>
       <para> Enter values for each required parameter. A short help text is
        displayed as soon as you click the input field next to a parameter.
       </para>
      </step>
      <step><para>To completely remove a parameter, click the minus icon next to
      the parameter.</para></step>
      <step>
       <para>To add another parameter, click the blank drop-down list, select a
       parameter and enter a value for it.</para></step>
     </substeps>
     </step>
    <step>
     <para>&hawk; automatically shows the most important resource operations
      and proposes default values. If you do not modify any settings here,
      &hawk; will add the proposed operations and their default values as
      soon as you confirm your changes. </para>
     <para>To modify or add <guimenu>Operations</guimenu>:</para>
     <substeps>
      <step>
       <para>To change the values for an operation, click the pen icon next to
        it, enter new values and confirm your changes. </para>
      </step>
      <step>
       <para>To completely remove an operation, click the minus icon next to
        it.</para>
      </step>
      <step>
       <para>To add another operation, click the empty drop-down list and
        select an operation. The default value for the operation is displayed.
        If needed, change it as described above.
         <remark>taroth 2011-11-10: there's a small usability issue here: you
         first need to click the + icon, only then the pen icon for editing
         appears - file bug tomorrow if not fixed for beta9</remark></para>
      </step>
     </substeps>
    </step>
    <step>
     <para>&hawk; automatically lists the most important meta attributes for
      the resource, for example <literal>target-role</literal>. </para>
     <para>To modify or add <guimenu>Meta Attributes</guimenu>:</para>
     <substeps>
      <step>
       <para>To set a (different) value for an attribute, select one from the
        drop-down list next to the attribute.</para>
      </step>
      <step>
       <para>To completely remove a meta attribute, click the minus icon next to
        it.</para>
      </step>
      <step>
       <para>To add another meta attribute, click the empty drop-down list and
        select an attribute. The default value for the attribute is displayed.
        If needed, change it as described above.</para>
      </step>
     </substeps>
    </step>
     <step>
     <para>If all options are set according to your wishes, click
       <guimenu>Create Resource</guimenu> to finish the configuration of that resource.
      A message at the top of the screen shows if the resource was successfully
      created or not. 
      <remark>taroth 2011-11-10: todo - check with Beta9 what happens after
       creation of the resource - is the main screen shown again? add
       screenshot of resource screen</remark></para>
      <!--<informalfigure>
       <mediaobject>
       <imageobject role="fo">
       <imagedata fileref="crmgui-primitive-basic.png" width="70%"
       format="PNG"/>
       </imageobject>
       <imageobject role="html">
       <imagedata fileref="crmgui-primitive-basic.png" width="70%"
       format="png"/>
       </imageobject>
       </mediaobject>
       </informalfigure>-->
    </step>
   </procedure>
   </sect2>

  <sect2 id="sec.ha.confighawk.rsc.stonith">
   <title>Creating &stonith; Resources</title>
   <important>
    <title>No Support Without &stonith;</title>
    <para>
     A cluster without &stonith; is not supported.
    </para>
   </important>
   <para>To configure fencing, you need to configure one or more &stonith;
    resources. As the global cluster option <literal>stonith-enabled</literal>
    is set to <literal>true</literal> by default, the cluster will refuse to
    start any resources if no &stonith; resources have been defined. </para>
   <procedure id="pro.ha.config.hawk.stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para> Log in to &hawk; as described in <xref
       linkend="sec.ha.config.hawk.intro.connect"/>. </para>
    </step>
    <step>
     <para>In the left navigation bar, select <guimenu>Resources</guimenu>. The
       <guimenu>Resources</guimenu> tab shows categories for all types of
      resources and lists any resources that are already defined.</para>
    </step>
    <step>
     <para>Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.</para>
    </step>
    <step>
     <para>Specify the resource: </para>
     <substeps>
      <step>
       <para>Enter a unique <guimenu>Resource ID</guimenu>. </para>
      </step>
      <step>
       <para>From the <guimenu>Class</guimenu> list, select the resource agent
        class <guimenu>stonith</guimenu>.</para>
      </step>
      <step>
       <para>From the <guimenu>Type</guimenu> list, select the &stonith;
        plug-in for controlling your &stonith; device. A short description
        for this plug-in is displayed. </para>
      </step>
     </substeps>
    </step>
      <step>
       <para> Below <guimenu>Options</guimenu>, set the <guimenu>Initial state
         of resource</guimenu>. </para>
      </step>
        <step>
       <para> Activate <guimenu>Add monitor operation</guimenu> if you want the
        cluster to monitor the fencing device. For more information, refer to
         <xref linkend="sec.ha.fencing.monitor"/>. </para>
      </step>
   
    
    <step>
     <para> Click <guimenu>Forward</guimenu>. The next window shows a summary of
      the parameters that you have already defined for that resource. All
      required <guimenu>Instance Attributes</guimenu> for the selected
      &stonith; plug-in are listed. You need to edit them in order to set
      them to appropriate values. You may also need to add more attributes or
      monitor operations, depending on your deployment and settings. For details
      how to do so, refer to <xref linkend="pro.ha.config.gui.parameters"/> and
       <xref linkend="sec.ha.configuration.monitor"/>. </para>
    </step>
    <step>
     <para> If all parameters are set according to your wishes, click
       <guimenu>Apply</guimenu> to finish the configuration of that resource.
      The configuration dialog is closed and the main window shows the newly
      added resource. </para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration add constraints, or use clones or
    both. For more details, refer to <xref linkend="cha.ha.fencing"/>.</para>
   
  </sect2>
  <sect2 id="sec.ha.confighawk..constraints">
   <title>Configuring Resource Constraints</title>
   <para> Having all the resources configured is only part of the job. Even if
    the cluster knows all needed resources, it might still not be able to handle
    them correctly. Resource constraints let you specify which cluster nodes
    resources can run on, what order resources will load, and what other
    resources a specific resource is dependent on. </para>
   <para> For an overview which types of constraints are available, refer to
     <xref linkend="sec.ha.configuration.basics.constraints.types"/>. When
    defining constraints, you also need to specify scores. For more information
    about scores and their implications in the cluster, see <xref
     linkend="sec.ha.configuration.basics.constraints.scores"/>. </para>
   <para> Learn how to create the different types of the constraints in the
    following procedures. </para>
   <?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.constraints.location">
    <title>Adding or Modifying Locational Constraints</title>
    <step>
     <para/>
    </step>
   </procedure>

   <procedure id="pro.ha.config.hawk.constraints.collocation">
    <title>Adding or Modifying Collocational Constraints</title>
    <step>
     <para/>
    </step>
   </procedure>

   <procedure id="pro.ha.config.hawk.constraints.order">
    <title>Adding or Modifying Ordering Constraints</title>
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.confighawk.failover">
   <title>Specifying Resource Failover Nodes</title>
   <para> A resource will be automatically restarted if it fails. If that cannot
    be achieved on the current node, or it fails N times on the current node, it
    will try to fail over to another node. You can define a number of failures
    for resources (a <literal>migration-threshold</literal>), after which they
    will migrate to a new node. If you have more than two nodes in your cluster,
    the node a particular resource fails over to is chosen by the &ha;
    software. </para>
   <para> However, you can specify the node a resource will fail over to by
    proceeding as follows: </para>
   <procedure id="pro.ha.config.hawk.failover">
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.config.hawk.failback">
   <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
   <para> A resource might fail back to its original node when that node is back
    online and in the cluster. If you want to prevent a resource from failing
    back to the node it was running on prior to failover, or if you want to
    specify a different node for the resource to fail back to, you must change
    its resource stickiness value. You can either specify resource stickiness
    when you are creating a resource, or afterwards. </para>
   <para> For the implications of different resource stickiness values, refer to
     <xref linkend="sec.ha.configuration.basics.failback"/>. </para>
   <?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.stickiness">
    <title>Specifying Resource Stickiness</title>
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.config.hawk.utilization">
   <title>Configuring Placement of Resources Based on Load Impact</title>
   <para/>
  </sect2>
  <sect2 id="sec.ha.config.hawk.monitor">
   <title>Configuring Resource Monitoring</title>
   <para> Although the &hasi; can detect a node failure, it also has the
    ability to detect when an individual resource on a node has failed. If you
    want to ensure that a resource is running, you must configure resource
    monitoring for it. Resource monitoring consists of specifying a timeout
    and/or start delay value, and an interval. The interval tells the CRM how
    often it should check the resource status. You can also set particular
    parameters, such as <literal>Timeout</literal> for <literal>start</literal>
    or <literal>stop</literal> operations. </para>
   <procedure id="pro.ha.config.hawk.operations">
    <title>Adding or Modifying Monitor Operations</title>
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.confighawk.group">
   <title>Configuring a Cluster Resource Group</title>
   <para> Some cluster resources are dependent on other components or resources,
    and require that each component or resource starts in a specific order and
    runs together on the same server. To simplify this configuration we support
    the concept of groups. </para>
   <para> For an example of a resource group and more information about groups
    and their properties, refer to <xref
     linkend="sec.ha.configuration.basics.resources.advanced.groups"/>. </para>
   <note>
    <title>Empty Groups</title>
    <para> Groups must contain at least one resource, otherwise the
     configuration is not valid. </para>
   </note>
   <procedure id="pro.ha.config.hawk.group">
    <title>Adding a Resource Group</title>
    <step>
     <para/>
    </step>
   </procedure>
   <procedure id="pro.ha.config.hawk.group.modify">
    <title>Adding Resources to an Existing Group</title>
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.confighawk.clone">
   <title>Configuring a Clone Resource</title>
   <para> You may want certain resources to run simultaneously on multiple nodes
    in your cluster. To do this you must configure a resource as a clone.
    Examples of resources that might be configured as clones include
    &stonith; and cluster file systems like OCFS2. You can clone any
    resource provided. This is supported by the resource’s Resource Agent. Clone
    resources may even be configured differently depending on which nodes they
    are hosted. </para>
   <para> For an overview which types of resource clones are available, refer to
     <xref linkend="sec.ha.configuration.basics.resources.advanced.clones"/>. </para>
   <procedure id="pro.ha.config.hawk.clone">
    <title>Adding or Modifying Clones</title>
    <step>
     <para/>
    </step>
   </procedure>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.manage">
  <title>Managing Cluster Resources</title>
  <para></para>
  <sect2 id="sec.ha.confighawk.start">
   <title>Starting Resources</title>
   <para></para>
   </sect2>
   <sect2 id="sec.ha.config.hawk.cleanup">
    <title>Cleaning Up Resources</title>
    <para>
    A resource will be automatically restarted if it fails, but each failure
    raises the resource's failcount. View a resource's failcount with the
    &hbgui; my clicking <guimenu>Management</guimenu> in the left pane, then
    selecting the resource in the right pane. If a resource has failed, its
    <guimenu>Fail Count</guimenu> is shown in the middle of the right pane
    (below the <guimenu>Migration Threshold</guimenu> entry).
   </para>
   <para>
    If a <literal>migration-threshold</literal> has been set for that
    resource, the node will no longer be allowed to run the resource as soon
    as the number of failures has reached the migration threshold.
   </para>
   <para>
    A resource's failcount can either be reset automatically (by setting a
    <literal>failure-timeout</literal> option for the resource) or you can
    reset it manually as described below.
   </para>
   <procedure id="pro.ha.config.hawk.clean">
    <title>Cleaning Up A Resource</title>
    <step><para></para></step>
    </procedure>
   
   </sect2>
  <sect2 id="sec.ha.config.hawk.remove">
   <title>Removing Cluster Resources</title>
   <para>
    If you need to remove a resource from the cluster, follow the procedure
    below to avoid configuration errors:
   </para>
   <!--https://bugzilla.novell.com/show_bug.cgi?id=520718-->
   <note>
    <title>Removing Referenced Resources</title>
    <para>
     Cluster resources cannot be removed if their ID is referenced by any
     constraint. If you cannot delete a resource, check where the resource
     ID is referenced and remove the resource from the constraint first.
    </para>
   </note>
   <procedure id="pro.ha.config.hawk.rm">
    <title>Removing a Cluster Resource</title>
    <step><para></para></step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.confighawk.migrate">
   <title>Migrating Cluster Resources</title>
   <para>
    As mentioned in <xref linkend="sec.ha.configuration.failover"/>, the
    cluster will fail over (migrate) resources automatically in case of
    software or hardware failures&mdash;according to certain parameters you
    can define (for example, migration threshold or resource stickiness).
    Apart from that, you can also manually migrate a resource to another
    node in the cluster resources manually.
   </para>
   <procedure id="pro.ha.config.hawk.migrate">
    <title>Manually Migrating a Resource</title>
    <step><para></para></step>
   </procedure>
   <para>
    To allow a resource to move back again, proceed as follows:
   </para>
   <procedure id="pro.ha.config.hawk.migrate.back">
    <title>Clearing a Migration Constraint</title>
    <step><para></para></step>
   </procedure>
  </sect2>
  <sect2 id="sec.ha.config.hawk.mgmt.mode">
   <title>Changing Management Mode of Resources</title>
   <para>
    When a resource is being managed by the cluster, it must not be touched
    otherwise (outside of the cluster). For maintenance of individual
    resources, you can set the respective resources to an <literal>unmanaged
     mode</literal> that allows you to modify the resource outside of the
     cluster.</para></sect2>
  </sect1>
 <!--<sect1>
  <title>Using &hawk;</title>

  
  <para>
   Click the arrow symbols in the <guimenu>Nodes</guimenu> and
   <guimenu>Resources</guimenu> groups to expand and collapse the tree view.
  </para>

 
  <para>
   Click the wrench icon at the right side of a node or resource to access a
   context menu that allows some actions, like starting, stopping or
   cleaning up a resource (or putting a node into <literal>online</literal>
   or <literal>standby</literal> mode or to fence a node).
  </para>

  <para>
   Currently, &hawk; only allows basic operator tasks but more functions
   will be added in the future, for example, the ability to configure
   resources and nodes.
  </para>
  </sect1>-->
 <sect1 id="sec.ha.config.hawk.trouble">
  <title>Troubleshooting</title>

  <variablelist>
   <varlistentry>
    <term>&hawk; Log Files</term>
    <listitem>
     <para>
      Find the &hawk; log files in <filename>/srv/www/hawk/log</filename>.
      It is useful to check them in case you cannot access &hawk; at all
      for some reason.
     </para>
     <para>
      If you have trouble starting or stopping a resource with &hawk;,
      check the Pacemaker log messages. By default, Pacemaker logs to 
      <filename>/var/log/messages</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Authentication Fails</term>
    <listitem>
     <para>
      If you cannot log in to &hawk; with a new user that is member of the
      <systemitem class="groupname">haclient</systemitem> group (or if you
      experience delays until &hawk; accepts logins from this user), stop
      the <systemitem class="daemon">rcnscd</systemitem> daemon with
      <command>rcnscd&nbsp;stop</command> and try again.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="vle.ha.hawk.certificate">
    <term>Replacing the Self-Signed Certificate</term>
    <listitem>
     <para>
      To avoid the warning about the self-signed certificate on first
      &hawk; startup, replace the automatically created certificate
      with your own certificate or a certificate that was signed by an
      official Certificate Authority (CA).
     </para>
     <para>
      The certificate is stored in
      <filename>/etc/lighttpd/certs/hawk-combined.pem</filename> and
      contains both key and certificate. After you have created or received
      your new key and certificate, combine them by executing the following
      command:
     </para>
<screen>cat <replaceable>keyfile</replaceable> <replaceable>certificatefile</replaceable> > /etc/lighttpd/certs/hawk-combined.pem</screen>
     <para>
      Change the permissions to make the file only accessible by &rootuser;:
     </para>
<screen>chown root.root /etc/lighttpd/certs/hawk-combined.pem
chmod 600 /etc/lighttpd/certs/hawk-combined.pem</screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
