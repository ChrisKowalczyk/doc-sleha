<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<chapter id="cha.ha.configuration.hawk">
 <title>Managing Cluster Resources with the Web Interface</title>
 <abstract>
  <para>In addition to the <command>crm</command> command line tool and the
   &hbgui; the &hasi; also comes with the &hawk;, a Web-based user
   interface for management tasks. It allows you to monitor and administer your
   Linux cluster also from non-Linux machines. It is also an ideal solution in
   case your system does not provide or allow a graphical user interface.</para>
  <para>
   <remark>taroth 2010-03-04: tserong, I guess the hawk package needs to be
    installed on each node I want to access via the Web-browser? when accessing
    any of the cluster nodes via hawk from another machine (outside the cluster), it is
    enough to have a web browser installed?</remark>The Web interface is included in the <systemitem class="resource"
    >hawk</systemitem> package. For successful access, </para>
 </abstract>
 <note>
  <title>User Authentication</title>
  <para>To log in to the cluster from the &hawk;, the respective user must
   be a member of the <systemitem class="groupname">haclient</systemitem> group.
   The installation creates a linux user named
    <systemitem class="username">hacluster</systemitem> which is member of the <systemitem
    class="groupname">haclient</systemitem> group.</para>
  <para>Before using the &hawk;, either set a password for the
   <systemitem>hacluster</systemitem> user or create a new user which is
   member of the <systemitem class="groupname">haclient</systemitem>
   group.</para>
  <para>Do this on every node you will connect to with the &hawk;. </para>
 </note>
 <sect1 id="sec.ha.config.hawk.intro">
  <title>&hawk;&mdash;Overview</title>
  <para>&hawk; is intended to run on each node in your cluster. </para>

  <procedure id="pro.ha.start.hawk">
   <title>Starting the &hawk;</title>
   <para>To use &hawk;, the respective Web service must be started on the
    node that you want to connect to with the Web interface. For communication,
    the standard HTTP(s) protocol and port <literal>4444</literal> is
    used.</para>
   
   <step>
    <para>On the node you want to connect to, open a shell and log in as
     &rootuser;.</para>
   </step>
   <step>
    <para>Check the status of the service by entering</para>
    <screen>rchawk status</screen>
   </step>
   <step>
    <para>If the service is not running, start it with </para>
    <screen>rchawk start</screen>
   </step>
   <step>
    <para>
     <remark>taroth 2010-03-03: tserong, do we have any restrictions regarding
      the browsers we support (or that have been tested with hawk): Firefox,
      Opera, Internet Explorer, whatever?</remark>On any machine, start a Web
     browser and make sure that cookies are enabled.</para>
   </step>
   <step>
    <para>Point it at the IP address or hostname of any cluster node, or the
     address of any <literal>IPaddr(2)</literal> resource that you may have
     configured:</para>
    <screen>https://<replaceable>IPaddress</replaceable>:4444/main/status</screen>
   </step>
   <step>
    <para>
     <remark>taroth 2010-03-04: tserong, what about the self-signed certificate
      leading to warnings with firefox - will that issue be resolved until
      GM?</remark>On the &hawk; login screen, enter the <guimenu>Username</guimenu>
     and <guimenu>Password</guimenu> of the <systemitem class="username"
      >hacluster</systemitem> user (or of any other user that is member of the
      <systemitem class="groupname">haclient</systemitem> group) and click
      <guimenu>Log In</guimenu>.</para>
    <para>The <guimenu>Cluster Status</guimenu> screen appears, displaying the
     status of your cluster nodes and resources similar to the output of
     the <command>crm_mon</command> </para>
   </step>
  </procedure>
 </sect1>
 <sect1 id="sec.ha.config.hawk.trouble">
  <title>Troubleshooting</title>
  <variablelist>
   <varlistentry>
    <term>&hawk; Log Files</term>
    <listitem>
     <para>
      <remark>taroth 2010-03-04: tserong, is that correct? any other logs that
       might be interesting to check in case something goes wrong?</remark>Find the &hawk; log files in
       <filename>/srv/www/hawk/log</filename>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Authentication Fails</term>
    <listitem>
     <para>If you cannot log in to &hawk; with a new user you added to the
       <systemitem class="groupname">haclient</systemitem> group (or if you
      experience delays until &hawk; accepts logins from this user), stop
      the <systemitem class="daemon">rcnscd</systemitem> daemon with
      <command>rcnscd stop</command> and try again.</para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
 
 
 <!--(green == good and running, red ==
bad, yellow == transition, grey == intentionally out of the picture)-->
 <!--Greetings All,
 
 
 This will give you a web-based GUI with a display roughly
 analagous to crm_mon, in terms of status of cluster resources.
 It will show you running/dead/standby nodes, and the resources
 (clones, groups and primitives) running on those nodes.
 
 It does not yet provide information about failed resources or
 nodes, other than the fact that they are not running.
 
 Display of nodes and resources is collapsible (collapsed by
 default), but if something breaks while you are looking at it,
 the display will expand to show the broken nodes and/or
 resources.
 
 Hawk is intended to run on each node in your cluster. You
 can then access it by pointing your web browser at the IP
 address of any cluster node, or the address of any IPaddr(2)
 resource you may have configured.
 
 Minimally, to see it in action, you will need the following
 packages and their dependencies (names per openSUSE/SLES):
 
 - ruby
 - rubygem-rails-2_3
 - rubygem-gettext_rails
 
 Once you've got those installed, run the following command:
 
 # hawk/script/server
 
 Then, point your browser at http://your-server:3000/ to see
 the status of your cluster.
 
 Ultimately, hawk is intended to be installed and run as a
 regular system service via /etc/init.d/hawk. To do this,
 you will need the following additional packages:
 
 - lighttpd
 - lighttpd-mod_magnet
 - ruby-fcgi
 - rubygem-rake
 
 Then, try the following, but READ THE MAKEFILE FIRST!
 "make install" (and the rest of the build system for that
 matter) is frightfully primitive at the moment:
 
 # make
 # sudo make install
 # /etc/init.d/hawk start
 
 Then, point your browser at http://your-server:4444/ to see
 the status of your cluster.
 
 Assuming you've read this far, what next?
 
 - In the very near future (but probably not next week,
 because I'll be busy at linux.conf.au) you can expect to
 see further documentation and roadmap info up on the
 clusterlabs.org wiki.
 
 - Immediate goal is to obtain feature parity with crm_mon
 (completing status display, adding error/failure messages).
 
 - Various pieces of scaffolding need to be put in place (login
 page, access via HTTPS, clean up build/packaging, theming,
 etc.)
 
 - After status display, the following major areas of
 funcionality are:
 - Basic operator tasks (stop/start/migrate resource,
 standby/online node, etc.)
 - Explore failure scenarios (shadow CIB magic to see
 what would happen if a node/resource failed).
 - Ability to actually configure resources and nodes.
 
 Please direct comments, feedback, questions, etc. to
 tserong [at] novell and/or the Pacemaker mailing list.
 
 Thank you for your attention.
 
 Regards,
 
 Tim -->
</chapter>
