<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--taroth 2012-01-11: todo for next revision: how to define constraints via
    rule editor-->
<chapter id="cha.ha.configuration.hawk">
 <title>Configuring and Managing Cluster Resources (Web Interface)</title>
 <abstract>
  <para>
   In addition to the <command>crm</command> command line tool and the
   &hbgui;, the &hasi; also comes with the &haweb; (&hawk;), a Web-based
   user interface for management tasks. It allows you to monitor and
   administer your Linux cluster from non-Linux machines as well.
   Furthermore, it is the ideal solution in case your system only provides a
   minimal graphical user interface.
  </para>

  <para>
   This chapter introduces &hawk; and covers basic tasks for configuring and
   managing cluster resources: modifying global cluster options, creating
   basic and advanced types of resources (groups and clones), configuring
   constraints, specifying failover nodes and failback nodes, configuring
   resource monitoring, starting, cleaning up or removing resources, and
   migrating resources manually. For detailed analysis of the cluster
   status, &hawk; generates a cluster report (<literal>hb_report</literal>).
   You can view the cluster history or explore potential failure scenarios
   with the simulator.
  </para>

  <para>
   The Web interface is included in the
   <systemitem class="resource">hawk</systemitem> package. It must be
   installed on all cluster nodes you want to connect to with &hawk;. On the
   machine from which you want to access a cluster node using &hawk;, you
   only need a (graphical) Web browser with JavaScript and cookies enabled
   to establish the connection.
  </para>
 </abstract>
 <note>
  <title>User Authentication</title>
  <para>
   To log in to the cluster from &hawk;, the respective user must be a
   member of the <systemitem class="groupname">haclient</systemitem> group.
   The installation creates a Linux user named
   <systemitem class="username">hacluster</systemitem> and adds the user to
   the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Before using &hawk;, either set a password for the
   <systemitem>hacluster</systemitem> user or create a new user which is a
   member of the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Do this on every node you will connect to with &hawk;.
  </para>
 </note>
 <sect1 id="sec.ha.config.hawk.intro">
  <title>&hawk;&mdash;Overview</title>

  <para>
   Learn how to start &hawk;, how to log in to the cluster and get to know
   the &hawk; basics.
  </para>

  <sect2 id="sec.ha.config.hawk.intro.connect">
   <title>Starting &hawk; and Logging In</title>
   <procedure id="pro.ha.hawkstart">
    <title>Starting &hawk;</title>
    <para>
     To use &hawk;, the respective Web service must be started on the node
     that you want to connect to via the Web interface. For communication,
     the standard HTTPS protocol and port <literal>7630</literal> is used.
    </para>
    <step>
     <para>
      On the node you want to connect to, open a shell and log in as
      &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Check the status of the service by entering
     </para>
     <screen>rchawk status</screen>
    </step>
    <step>
     <para>
      If the service is not running, start it with
     </para>
     <screen>rchawk start</screen>
     <para>
      If you want &hawk; to start automatically at boot time, execute the
      following command:
     </para>
     <screen>chkconfig hawk on</screen>
    </step>
   </procedure>
   <procedure id="pro.ha.hawk.login">
<!-- <remark>taroth 2010-03-03: tserong, do we have any restrictions regarding
    the browsers we support (or that have been tested with hawk)? tserong: any
    modern graphical web browser with JavaScript and cookies enabled - if we
    need an explicit supported browser statement, then I'd say: Firefox 3.0+,
    IE 7.0+</remark>-->
    <step>
     <para>
      On any machine, start a Web browser and make sure that JavaScript and
      cookies are enabled.
     </para>
    </step>
    <step>
     <para>
      Point it at the IP address or hostname of any cluster node running the
      &hawk; Web service, or the address of any <literal>IPaddr(2)</literal>
      resource that you may have configured:
     </para>
     <screen>https://<replaceable>IPaddress</replaceable>:7630/</screen>
     <note>
      <title>Certificate Warning</title>
      <para>
       Depending on your browser and browser options, you may get a
       certificate warning when trying to access the URL for the first time.
       This is because &hawk; uses a self-signed certificate that is not
       considered trustworthy per default.
      </para>
      <para>
       To proceed anyway, you can add an exception in the browser to bypass
       the warning. To avoid the warning in the first place, the self-signed
       certificate can also be replaced with a certificate signed by an
       official Certificate Authority. For information on how to do so,
       refer to <xref linkend="vle.ha.hawk.certificate"/>.
      </para>
     </note>
    </step>
    <step>
     <para>
      On the &hawk; login screen, enter the <guimenu>Username</guimenu> and
      <guimenu>Password</guimenu> of the
      <systemitem class="username">hacluster</systemitem> user (or of any
      other user that is a member of the
      <systemitem class="groupname">haclient</systemitem> group) and click
      <guimenu>Log In</guimenu>.
     </para>
     <para>
      The <guimenu>Cluster Status</guimenu> screen appears, displaying the
      status of your cluster nodes and resources similar to the output of
      the <command>crm_mon</command>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.configuration.hawk.intro.main">
   <title>Main Screen: Cluster Status</title>
   <para>
    After logging in, &hawk; displays the <guimenu>Cluster Status</guimenu>
    screen. It shows a summary with the most important global cluster
    parameters and the status of your cluster nodes and resources. The
    following color code is used for status display of nodes and resources:
   </para>
   <itemizedlist id="il.ha.config.hawk.colors">
    <title>&hawk; Color Code</title>
    <listitem>
     <para>
      Green: OK. For example, the resource is running or the node is online.
     </para>
    </listitem>
    <listitem>
     <para>
      Red: Bad, unclean. For example, the resource has failed or the node
      was not shut down cleanly.
     </para>
    </listitem>
    <listitem>
     <para>
      Yellow: In transition. For example, the node is currently being shut
      down.
     </para>
    </listitem>
    <listitem>
     <para>
      Gray: Not running, but the cluster expects it to be running. For
      example, nodes that the administrator has stopped or put into
      <literal>standby</literal> mode. Also nodes that are offline are
      displayed in gray (if they have been shut down cleanly).
     </para>
    </listitem>
   </itemizedlist>
   <para>
    If a resource has failed, a failure message with the details is shown in
    red at the top of the screen.
   </para>
   <figure pgwide="0">
    <title>&hawk;&mdash;Cluster Status (Summary View)</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-cluster-status-main.png" width="90%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-cluster-status-main.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    The <guimenu>Cluster Status</guimenu> screen refreshes itself in near
    real-time. Choose between the following views:
   </para>
<!--fate#309100-->
   <variablelist>
    <varlistentry>
     <term>Summary View</term>
     <listitem>
      <para>
       Shows the most important global cluster parameters and the status of
       your cluster nodes and resources at the same time. To see more
       details for a certain node or resource, click the respective entries
       that are marked as links.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Tree View</term>
     <listitem>
      <para>
       Presents an expandable view of the most important global cluster
       parameters and the status of your cluster nodes and resources. Click
       the arrows to expand or collapse the elements belonging to the
       respective category. In contrast to the <guimenu>Summary
       View</guimenu> this view not only shows the IDs and status of
       resources but also the type (for example, primitive, clone, or
       group).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Table View</term>
     <listitem>
      <para>
       This view is especially useful for larger clusters, because it shows
       in a concise way which resources are currently running on which node.
       Inactive nodes or resources are also displayed.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    To perform basic operator tasks on nodes and resources (like starting or
    stopping resources, bringing nodes online, or viewing details), click
    the wrench icon next to the respective node or resource to access a
    context menu.
   </para>
   <para>
    For more complex tasks like configuring resources, constraints, or
    global cluster options, use the navigation bar at the left hand side.
    From there, you can also generate a cluster report
    (<literal>hb_report</literal>), view the cluster history, or explore
    potential failure scenarios with the simulator.
   </para>
   <note>
    <title>Available Functions in &hawk;</title>
    <para>
     By default, users logged in as &rootuser; or
     <systemitem class="username">hacluster</systemitem> have full
     read-write access to all cluster configuration tasks. However,
     <xref linkend="cha.ha.acl" xrefstyle="select:title"/> can be used to
     define fine-grained access permissions.
    </para>
    <para>
     If ACLs are enabled in the CRM, the available functions in &hawk;
     depend on the user role and access permissions assigned to you. In
     addition, the following functions in &hawk; can only be executed by the
     user <systemitem class="username">hacluster</systemitem>:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Generating a <literal>hb_report</literal>.
      </para>
     </listitem>
     <listitem>
      <para>
       Using the history explorer.
      </para>
     </listitem>
     <listitem>
      <para>
       Viewing recent events for nodes or resources.
      </para>
     </listitem>
    </itemizedlist>
   </note>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.global">
  <title>Configuring Global Cluster Options</title>

  <para>
   Global cluster options control how the cluster behaves when confronted
   with certain situations. They are grouped into sets and can be viewed and
   modified with cluster management tools like &hbgui;, &hawk;, and
   <command>crm</command> shell. The predefined values can be kept in most
   cases. However, to make key functions of your cluster work correctly, you
   need to adjust the following parameters after basic cluster setup:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.ha.configuration.basics.global.quorum" xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.ha.configuration.basics.global.stonith" xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>

  <procedure id="pro.ha.config.hawk.global">
   <title>Modifying Global Cluster Options</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref linkend="sec.ha.config.hawk.intro.connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Properties</guimenu> to view the global cluster options and their
     current values.
    </para>
   </step>
   <step>
    <para>
     Depending on your cluster requirements, set
     <guimenu>no-quorum-policy</guimenu> to the appropriate value.
    </para>
   </step>
   <step>
    <para>
     If you need to disable fencing for any reasons, deselect
     <guimenu>stonith-enabled</guimenu>.
    </para>
    <important>
     <title>No Support Without &stonith;</title>
     <para>
      A cluster without &stonith; enabled is not supported.
     </para>
    </important>
   </step>
   <step>
    <para>
     To remove a cluster property, click the minus icon next to the
     property.
    </para>
   </step>
   <step>
    <para>
     To add a new property, choose one from the drop-down list and click the
     plus icon.
    </para>
   </step>
   <step>
    <para>
     Confirm your changes.
    </para>
   </step>
  </procedure>

  <figure pgwide="0">
   <title>&hawk;&mdash;Global Cluster Properties</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-cluster-props.png" width="80%" format="PNG" />
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-cluster-props.png" width="80%" format="PNG" />
    </imageobject>
   </mediaobject>
  </figure>

<!-- tserong 2011-11-08:** missing functionality: this screen will eventually also have 
op_defaults and rsc_defaults **-->

<!-- taroth 2012-01-09: switching back to *default* options is not possible with
Hawk , the Revert button will switch back to the former config as long as you
haven't applied the changes yet
-->
 </sect1>
 <sect1 id="sec.ha.config.hawk.rsc">
  <title>Configuring Cluster Resources</title>

<!--fate#310188, fate#310191-->

  <para>
   As a cluster administrator, you need to create cluster resources for
   every resource or application you run on servers in your cluster. Cluster
   resources can include Web sites, mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times.
  </para>

  <para>
   For an overview of resource types you can create, refer to
   <xref linkend="sec.ha.configuration.basics.resources.types"/>. Apart from
   the basic specification of a resource (ID, class, provider, and type),
   you can add or modify the following parameters during or after creation
   of a resource:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <literal>Instance attributes (parameters)</literal> determine which
     instance of a service the resource controls. For more information,
     refer to <xref linkend="sec.ha.configuration.basics.inst.attr" />.
    </para>
    <para>
     When creating a resource, &hawk; automatically shows any required
     parameters. Edit them to get a valid resource configuration.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>Meta attributes</literal> tell the CRM how to treat a specific
     resource. For more information, refer to
     <xref linkend="sec.ha.configuration.basics.meta.attr"/>.
    </para>
    <para>
     When creating a resource, &hawk; automatically lists the important meta
     attributes for that resource (for example, the
     <literal>target-role</literal> attribute that defines the initial state
     of a resource. By default, it is set to <literal>Stopped</literal>, so
     the resource will not start immediately).
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>Operations</literal> are needed for resource monitoring. For
     more information, refer to
     <xref linkend="sec.ha.configuration.basics.operations"/>.
    </para>
    <para>
     When creating a resource, &hawk; displays the most important resource
     operations (<literal>monitor</literal>, <literal>start</literal>, and
     <literal>stop</literal>).
    </para>
   </listitem>
  </itemizedlist>

<?dbfo-need height="20em"?>

  <sect2 id="sec.ha.config.hawk.wizard">
   <title>Configuring Resources with the Setup Wizard</title>
<!--fate#310190-->
   <para>
    The &hasi; comes with a predefined set of resources for some frequently
    used cluster scenarios, for example, setting up a highly available Web
    server. Find the predefined sets in the
    <systemitem class="resource">hawk-templates</systemitem> package. You
    can also define your own wizard templates. For detailed information,
    refer to
    <ulink url="http://hg.clusterlabs.org/pacemaker/hawk/file/tip/doc/wizard.txt"/>.
    &hawk; provides a wizard that guides you through all configuration
    steps.
   </para>
   <procedure id="pro.ha.config.hawk.wizard">
    <title>Using the Setup Wizard</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Setup Wizard</guimenu>.
      The <guimenu>Cluster Setup Wizard</guimenu> shows a list of available
      resource sets. If you click an entry, &hawk; displays a short help
      text about the resource set.
     </para>
    </step>
    <step>
     <para>
      Select the resource set you want to configure and click
      <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Follow the instructions on the screen. If you need information about
      an option, click it to display a short help text in &hawk;.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Setup Wizard</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-wizard.png" width="80%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-wizard.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.primitives">
   <title>Creating Simple Cluster Resources</title>
   <para>
    To create the most basic type of a resource, proceed as follows:
   </para>
   <procedure id="pro.ha.config.hawk.primitives">
    <title>Adding Primitive Resources</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources. It lists any resources that are already defined.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Specify the resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step id="step.ha.config.hawk.primitives.start">
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class you want to use for the resource:
        <guimenu>heartbeat</guimenu>, <guimenu>lsb</guimenu>,
        <guimenu>ocf</guimenu> or <guimenu>stonith</guimenu>. For more
        information, see
        <xref linkend="sec.ha.configuration.basics.raclasses"/>.
       </para>
      </step>
      <step>
       <para>
        If you selected <guimenu>ocf</guimenu> as class, specify the
        <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
        specification allows multiple vendors to supply the same resource
        agent.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the resource agent you
        want to use (for example, <guimenu>IPaddr</guimenu> or
        <guimenu>Filesystem</guimenu>). A short description for this
        resource agent is displayed.
       </para>
       <para>
        The selection you get in the <guimenu>Type</guimenu> list depends on
        the <guimenu>Class</guimenu> (and for OCF resources also on the
        <guimenu>Provider</guimenu>) you have chosen.
       </para>
      </step>
     </substeps>
    </step>
    <step id="step.ha.config.hawk.parameters">
     <para>
      &hawk; automatically shows any required parameters for the resource
      plus an empty drop-down list that you can use to specify an additional
      parameter.
     </para>
     <para>
      To define <guimenu>Parameters</guimenu> (instance attributes) for the
      resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter values for each required parameter. A short help text is
        displayed as soon as you click the input field next to a parameter.
       </para>
      </step>
      <step>
       <para>
        To completely remove a parameter, click the minus icon next to the
        parameter.
       </para>
      </step>
      <step>
       <para>
        To add another parameter, click the blank drop-down list, select a
        parameter and enter a value for it.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      &hawk; automatically shows the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk; will add the proposed operations
      and their default values as soon as you confirm your changes.
     </para>
     <para>
      For details on how to modify, add or remove operations, refer to
      <xref linkend="pro.ha.config.hawk.operations"/>.
     </para>
    </step>
    <step id="step.ha.config.hawk.meta-attr">
     <para>
      &hawk; automatically lists the most important meta attributes for the
      resource, for example <literal>target-role</literal>.
     </para>
     <para>
      To modify or add <guimenu>Meta Attributes</guimenu>:
     </para>
     <substeps>
      <step>
       <para>
        To set a (different) value for an attribute, select one from the
        drop-down list next to the attribute.
       </para>
      </step>
      <step>
       <para>
        To completely remove a meta attribute, click the minus icon next to
        it.
       </para>
      </step>
      <step>
       <para>
        To add another meta attribute, click the empty drop-down list and
        select an attribute. The default value for the attribute is
        displayed. If needed, change it as described above.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Create Resource</guimenu> to finish the configuration.
      A message at the top of the screen shows if the resource was
      successfully created or not.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Primitive Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-primitive-basic.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-primitive-basic.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
<!--tserong 2011-11-08:** missing functionality: one created, you can go back and 
   edit resource params, but can't rename them or change their class:provider:type (will 
   be added in future) **-->
  </sect2>

  <sect2 id="sec.ha.config.hawk.stonith">
   <title>Creating &stonith; Resources</title>
   <important>
    <title>No Support Without &stonith;</title>
    <para>
     A cluster without &stonith; is not supported.
    </para>
   </important>
   <para>
    By default, the global cluster option <literal>stonith-enabled</literal>
    is set to <literal>true</literal>: If no &stonith; resources have been
    defined, the cluster will refuse to start any resources. Configure one
    or more &stonith; resources to complete the &stonith; setup. While they
    are configured similar to other resources, the behavior of &stonith;
    resources is different in some respects. For details refer to
    <xref linkend="sec.ha.fencing.config"/>.
   </para>
   <procedure id="pro.ha.config.hawk.stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Specify the resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class <guimenu>stonith</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the &stonith; plug-in
        for controlling your &stonith; device. A short description for this
        plug-in is displayed.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      &hawk; automatically shows the required <guimenu>Parameters</guimenu>
      for the resource. Enter values for each parameter.
     </para>
    </step>
    <step>
     <para>
      &hawk; displays the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk; will add the proposed operations
      and their default values as soon as you confirm.
     </para>
    </step>
    <step>
     <para>
      Adopt the default <guimenu>Meta Attributes</guimenu> settings if there
      is no reason to change them.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes to create the &stonith; resource.
     </para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration, add constraints, use clones or
    both. For more details, refer to <xref linkend="cha.ha.fencing"/>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.templates">
   <title>Using Resource Templates</title>
   <para>
    If you want to create lots of resources with similar configurations,
    defining a resource template is the easiest way. Once defined, it can be
    referenced in primitives or in certain types of constraints. For
    detailed information about function and use of resource templates, refer
    to <xref linkend="sec.ha.configuration.basics.constraints.templates"/>.
   </para>
   <procedure id="pro.ha.config.hawk.templates.create">
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources plus a <guimenu>Template</guimenu> category.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Template</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Enter a <guimenu>Template ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Specify the resource template as you would specify a primitive. Follow
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      starting with
      <xref linkend="step.ha.config.hawk.primitives.start" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Resource</guimenu> to finish the configuration.
      A message at the top of the screen shows if the resource template was
      successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Resource Template</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-rsc-template.png" width="100%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-rsc-template.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <procedure id="pro.ha.config.hawk.templates.use">
    <title>Referencing Resource Templates</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      To reference the newly created resource template in a primitive,
      follow these steps:
     </para>
     <substeps>
      <step>
       <para>
        In the left navigation bar, select <guimenu>Resources</guimenu>. The
        <guimenu>Resources</guimenu> screen shows categories for all types
        of resources. It lists all defined resources.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Primitive</guimenu> category and click the plus
        icon.
       </para>
      </step>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Activate <guimenu>Use Template</guimenu> and, from the drop-down
        list, select the template to reference.
       </para>
      </step>
      <step>
       <para>
        If needed, specify further <guimenu>Parameters</guimenu>,
        <guimenu>Operations</guimenu>, or <guimenu>Meta Attributes</guimenu>
        as described in <xref linkend="pro.ha.config.hawk.primitives"/>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To reference the newly created resource template in colocational or
      order constraints, proceed as described in
      <xref linkend="pro.ha.config.hawk.constraints.collocation.order"/>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.constraints">
   <title>Configuring Resource Constraints</title>
<!--fate#310189-->
   <para>
    After you have configured all resources, specify how the cluster should
    handle them correctly. Resource constraints let you specify on which
    cluster nodes resources can run, in which order resources will be
    loaded, and what other resources a specific resource depends on.
   </para>
   <para>
    For an overview of available types of constraints, refer to
    <xref linkend="sec.ha.configuration.basics.constraints.types"/>. When
    defining constraints, you also need to specify scores. For more
    information on scores and their implications in the cluster, see
    <xref linkend="sec.ha.configuration.basics.constraints.scores"/>.
   </para>
   <para>
    Learn how to create the different types of constraints in the following
    procedures.
   </para>
<!-- tserong 2011-11-08: ** missing functionality: in future I want to autogenerate constraint 
   IDs.  They're mostly uninteresting to humans anyway **-->
<?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.constraints.location">
    <title>Adding or Modifying Location Constraints</title>
    <para>
     For location constraints, specify a constraint ID, resource, score and
     node:
    </para>
<!--taroth 2011-11-14: todo: find out which constraints can also be defined
     via rules (Show Rule Editor) and explain how to do so-->
    <step id="step.ha.config.hawk.constraints.start">
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints. It lists all defined constraints.
     </para>
    </step>
    <step id="step.ha.config.hawk.constraints.stop">
     <para>
      To add a new <guimenu>Location</guimenu> constraint, click the plus
      icon in the respective category.
     </para>
     <para>
      To modify an existing constraint, click the wrench icon next to the
      constraint and select <guimenu>Edit Constraint</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Constraint ID</guimenu>. When modifying
      existing constraints, the ID is already defined.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Resource</guimenu> for which to define the
      constraint. The list shows the IDs of all resources that have been
      configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      Set the <guimenu>Score</guimenu> for the constraint. Positive values
      indicate the resource can run on the <guimenu>Node</guimenu> you
      specify in the next step. Negative values mean it should not run on
      that node. Setting the score to <literal>INFINITY</literal> forces the
      resource to run on the node. Setting it to
      <literal>-INFINITY</literal> means the resources must not run on the
      node.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Node</guimenu> for the constraint.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Constraint</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      constraint was successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Location Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <procedure id="pro.ha.config.hawk.constraints.collocation.order">
    <title>Adding or Modifying Colocational or Order Constraints</title>
    <para>
     For both types of constraints specify a constraint ID and a score, then
     add resources to a dependency chain:
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints and lists all defined constraints.
     </para>
    </step>
    <step>
     <para>
      To add a new <guimenu>Colocation</guimenu> or <guimenu>Order</guimenu>
      constraint, click the plus icon in the respective category.
     </para>
     <para>
      To modify an existing constraint, click the wrench icon next to the
      constraint and select <guimenu>Edit Constraint</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Constraint ID</guimenu>. When modifying
      existing constraints, the ID is already defined.
     </para>
    </step>
    <step>
     <para>
      Define a <guimenu>Score</guimenu>.
     </para>
     <para>
      For colocation constraints, the score determines the location
      relationship between the resources. Positive values indicate the
      resources should run on the same node. Negative values indicate the
      resources should not run on the same node. Setting the score to
      <literal>INFINITY</literal> forces the resources to run on the same
      node. Setting it to <literal>-INFINITY</literal> means the resources
      must not run on the same node. The score will be combined with other
      factors to decide where to put the resource.
     </para>
     <para>
      For order constraints, the constraint is mandatory if the score is
      greater than zero, otherwise it is only a suggestion. The default
      value is <literal>INFINITY</literal>.
     </para>
    </step>
    <step>
     <para>
      For order constraints, you can usually keep the option
      <guimenu>Symmetrical</guimenu> enabled. This specifies that resources
      are stopped in reverse order.
     </para>
    </step>
    <step>
     <para>
      To define the resources for the constraint, follow these steps:
     </para>
     <substeps>
      <step>
       <para>
        Select a resource from the list <guimenu>Add resource to
        constraint</guimenu>. The list shows the IDs of all resources and
        all resource templates configured for the cluster.
       </para>
      </step>
      <step>
       <para>
        To add the selected resource, click the plus icon next to the list.
        A new list appears beneath. Select the next resource from the list.
        As both colocation and order constraints define a dependency between
        resources, you need at least two resources.
       </para>
      </step>
      <step>
       <para>
        Select one of the remaining resources from the list <guimenu>Add
        resource to constraint</guimenu>. Click the plus icon to add the
        resource.
       </para>
       <para>
        Now you have two resources in a dependency chain.
       </para>
       <para>
        If you have defined an order constraint, the topmost resource will
        start first, then the second etc. Usually the resources will be
        stopped in reverse order.
       </para>
       <para>
        However, if you have defined a colocation constraint, the arrow
        icons between the resources reflect their dependency, but
        <emphasis>not</emphasis> their start order. As the topmost resource
        depends on the next resource and so on, the cluster will first
        decide where to put the last resource, then place the depending ones
        based on that decision. If the constraint cannot be satisﬁed, the
        cluster may decide not to allow the resource to run at all.
        <remark>taroth 2011-11-16: DEVs, which ones: both? or only the
         second one?</remark>
       </para>
      </step>
      <step>
       <para>
        Add as many resources as needed for your colocation or order
        constraint.
       </para>
      </step>
      <step>
       <para>
        If you want to swap the order of two resources, click the double
        arrow at the right hand side of the resources to swap the resources
        in the dependency chain.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      If needed, specify further parameters for each resource, like the role
      (<literal>Master</literal>, <literal>Slave</literal>,
      <literal>Started</literal>, or <literal>Stopped</literal>).
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Constraint</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      constraint was successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Colocation Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-colloc-constraint.png" width="90%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-colloc-constraint.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    As an alternative format for defining colocation or ordering
    constraints, you can use resource sets. They have the same ordering
    semantics as groups.
   </para>
   <procedure id="pro.ha.config.hawk.constraints.sets">
    <title>Using Resource Sets for Colocation or Order Constraints</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Define colocation or order constraints as described in
      <xref linkend="pro.ha.config.hawk.constraints.collocation.order"/>.
     </para>
    </step>
    <step>
     <para>
      When you have added the resources to the dependency chain, you can put
      them into a resource set by clicking the chain icon at the right hand
      side. A resource set is visualized by a frame around the resources
      belonging to a set.
     </para>
    </step>
    <step>
     <para>
      You can also add multiple resources to a resource set or create
      multiple resource sets.
     </para>
    </step>
    <step>
     <para>
      To extract a resource from a resource set, click the scissors icon
      above the respective resource. The resource will be removed from the
      set and put back into the dependency chain at its original place.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-constraint-set.png" width="70%" format="png"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
    <step>
     <para>
      Confirm your changes to finish the constraint configuration.
     </para>
    </step>
   </procedure>
   <para>
    For more information on configuring constraints and detailed background
    information about the basic concepts of ordering and colocation, refer
    to the documentation available at
    <xref linkend="vle.ha.configuration.basics.more.clusterlabs.doc"/> and
    <xref linkend="vle.ha.configuration.basics.more.clusterlabs.wiki"/>,
    respectively:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <citetitle>Pacemaker Explained</citetitle> , chapter
      <citetitle>Resource Constraints</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Collocation Explained</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Ordering Explained</citetitle>
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="pro.ha.config.hawk.constraints.remove">
    <title>Removing Constraints</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints and lists all defined constraints.
     </para>
    </step>
    <step>
     <para>
      Click the wrench icon next to a constraint and select <guimenu>Remove
      Constraint</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.failover">
   <title>Specifying Resource Failover Nodes</title>
   <para>
    A resource will be automatically restarted if it fails. If that cannot
    be achieved on the current node, or it fails N times on the current
    node, it will try to fail over to another node. You can define a number
    of failures for resources (a <literal>migration-threshold</literal>),
    after which they will migrate to a new node. If you have more than two
    nodes in your cluster, the node to which a particular resource fails
    over is chosen by the &ha; software.
   </para>
   <para>
    You can specify a specific node to which a resource will fail over by
    proceeding as follows:
   </para>
   <procedure id="pro.ha.config.hawk.failover">
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Configure a location constraint for the resource as described in
      <xref linkend="pro.ha.config.hawk.constraints.location"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>migration-threshold</literal> meta attribute to the
      resource as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>
      and enter a <guimenu>Value</guimenu> for the migration-threshold. The
      value should be positive and less than INFINITY.
     </para>
<!-- <informalfigure>
       <mediaobject>
       <imageobject role="fo">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="PNG"/>
       </imageobject>
       <imageobject role="html">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="png"/>
       </imageobject>
       </mediaobject>
       </informalfigure>-->
    </step>
    <step>
     <para>
      If you want to automatically expire the failcount for a resource, add
      the <literal>failure-timeout</literal> meta attribute to the resource
      as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>
      and enter a <guimenu>Value</guimenu> for the failure-timeout.
     </para>
    </step>
    <step>
     <para>
      If you want to specify additional failover nodes with preferences for
      a resource, create additional location constraints.
     </para>
    </step>
   </procedure>
   <para>
    The process flow regarding migration thresholds and failcounts is
    demonstrated in <xref linkend="ex.ha.config.basics.failover" />.
   </para>
   <para>
    Instead of letting the failcount for a resource expire automatically,
    you can also clean up failcounts for a resource manually at any time.
    Refer to <xref linkend="sec.ha.config.hawk.cleanup"/> for details.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.failback">
   <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
   <para>
    A resource may fail back to its original node when that node is back
    online and in the cluster. To prevent this or to specify a different
    node for the resource to fail back to, change the stickiness value of
    the resource. You can either specify the resource stickiness when
    creating it or afterwards.
   </para>
   <para>
    For the implications of different resource stickiness values, refer to
    <xref linkend="sec.ha.configuration.basics.failback"/>.
   </para>
<?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.stickiness">
    <title>Specifying Resource Stickiness</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>resource-stickiness</literal> meta attribute to the
      resource as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>.
     </para>
<!--<informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="png"/>
       </imageobject>
      </mediaobject>
     </informalfigure>-->
    </step>
    <step>
     <para>
      Specify a value between <literal>-INFINITY</literal> and
      <literal>INFINITY</literal> for the resource-stickiness.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.utilization">
   <title>Configuring Placement of Resources Based on Load Impact</title>
   <para>
    Not all resources are equal. Some, such as &xen; guests, require that
    the node hosting them meets their capacity requirements. If resources
    are placed so that their combined needs exceed the provided capacity,
    the performance of the resources diminishes or they fail.
   </para>
   <para>
    To take this into account, the &hasi; allows you to specify the
    following parameters:
   </para>
   <orderedlist>
    <listitem>
     <para>
      The capacity a certain node <emphasis>provides</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      The capacity a certain resource <emphasis>requires</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      An overall strategy for placement of resources.
     </para>
    </listitem>
   </orderedlist>
   <para>
    Utilization attributes are used to configure both the resource's
    requirements and the capacity a node provides. The &hasi; now also
    provides means to detect and configure both node capacity and resource
    requirements automatically. For more details and a configuration
    example, refer to
    <xref linkend="sec.ha.configuration.basics.utilization"/>.
   </para>
<!--fate##310135-->
   <para>
    To display a node's capacity values (defined via utilization attributes)
    as well as the capacity currently consumed by resources running on the
    node, switch to the <guimenu>Cluster Status</guimenu> screen in &hawk;
    and select the node you are interested in. Click the wrench icon next to
    the node and select <guimenu>Show Details</guimenu>.
   </para>
   <figure>
    <title>&hawk;&mdash;Viewing a Node's Capacity Values</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-node-utilization.png" width="60%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-node-utilization.png" width="55%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    After you have configured the capacities your nodes provide and the
    capacities your resources require, you need to set the placement
    strategy in the global cluster options, otherwise the capacity
    configurations have no effect. Several strategies are available to
    schedule the load: for example, you can concentrate it on as few nodes
    as possible, or balance it evenly over all available nodes. For more
    information, refer to
    <xref linkend="sec.ha.configuration.basics.utilization"/>.
   </para>
   <procedure id="pro.ha.config.hawk.placement">
    <title>Setting the Placement Strategy</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster
      Properties</guimenu> to view the global cluster options and their
      current values.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Add new property</guimenu> drop-down list, choose
      <literal>placement-strategy</literal>.
     </para>
    </step>
    <step>
     <para>
      Depending on your requirements, set <guimenu>Placement
      Strategy</guimenu> to the appropriate value.
     </para>
    </step>
    <step>
     <para>
      Click the plus icon to add the new cluster property including its
      value.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.monitor">
   <title>Configuring Resource Monitoring</title>
   <para>
    The &hasi; can not only detect a node failure, but also when an
    individual resource on a node has failed. If you want to ensure that a
    resource is running, configure resource monitoring for it. For resource
    monitoring, specify a timeout and/or start delay value, and an interval.
    The interval tells the CRM how often it should check the resource
    status. You can also set particular parameters, such as
    <literal>Timeout</literal> for <literal>start</literal> or
    <literal>stop</literal> operations.
   </para>
   <procedure id="pro.ha.config.hawk.operations">
    <title>Adding or Modifying Monitor Operations</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the resource to modify, click the wrench icon next to it and
      select <guimenu>Edit Resource</guimenu>. The resource definition is
      displayed. &hawk; automatically shows the most important resource
      operations (<literal>monitor</literal>, <literal>start</literal>,
      <literal>stop</literal>) and proposes default values.
     </para>
    </step>
    <step>
     <para>
      To change the values for an operation:
     </para>
     <substeps>
      <step>
       <para>
        Click the pen icon next to the operation.
       </para>
      </step>
      <step>
       <para>
        In the dialog that opens, specify the following values:
       </para>
       <itemizedlist>
        <listitem>
         <para>
          Enter a <literal>timeout</literal> value in seconds. After the
          specified timeout period, the operation will be treated as
          <literal>failed</literal>. The PE will decide what to do or
          execute what you specified in the <guimenu>On Fail</guimenu> field
          of the monitor operation.
         </para>
        </listitem>
        <listitem>
         <para>
          For monitoring operations, define the monitoring
          <literal>interval</literal> in seconds.
         </para>
        </listitem>
       </itemizedlist>
       <para>
        If needed, use the empty drop-down list at the bottom of the
        <guimenu>monitor</guimenu> dialog to add more parameters, like
        <guimenu>On Fail</guimenu> (what to do if this action fails?) or
        <guimenu>Requires</guimenu> (what conditions need to be fulfilled
        before this action occurs?).
       </para>
       <informalfigure>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="hawk-monitor-op.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="hawk-monitor-op.png" width="70%" format="png"/>
         </imageobject>
        </mediaobject>
       </informalfigure>
      </step>
      <step>
       <para>
        Confirm your changes to close the dialog and to return to the
        <guimenu>Edit Resource</guimenu> screen.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To completely remove an operation, click the minus icon next to it.
     </para>
    </step>
    <step>
     <para>
      To add another operation, click the empty drop-down list and select an
      operation. A default value for the operation is displayed. If needed,
      change it as described above.
<!--<remark>taroth 2012-01-10: filed bnc#740539 for small usability issue</remark>-->
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Apply Changes</guimenu> to finish the configuration. A
      message at the top of the screen shows if the resource was
      successfully updated or not.
     </para>
    </step>
   </procedure>
   <para>
    For the processes which take place if the resource monitor detects a
    failure, refer to
    <xref linkend="sec.ha.configuration.basics.monitoring"/>.
   </para>
   <para>
<!--taroth 2012-01-10: Hawk does not show the failcount of a resource
    yet, filed bnc#740541-->
   </para>
<!--<para>
     To view resource failures in the &hbgui;, click
     <guimenu>Management</guimenu> in the left pane, then select the resource
     whose details you want to see in the right pane. For a resource that has
     failed, the <guimenu>Fail Count</guimenu> and last failure of the
     resource is shown in the middle of the right pane (below the
     <guimenu>Migration threshold</guimenu> entry).
     </para>
     <figure>
     <title>Viewing a Resource's Failcount</title>
     <mediaobject>
     <imageobject role="fo">
     <imagedata fileref="crmgui-mgmt-failcount.png" width="80%"
     format="PNG"/>
     </imageobject>
     <imageobject role="html">
     <imagedata fileref="crmgui-mgmt-failcount.png" width="55%"
     format="png"/>
     </imageobject>
     </mediaobject>
     </figure>-->
  </sect2>

  <sect2 id="sec.ha.confighawk.group">
   <title>Configuring a Cluster Resource Group</title>
   <para>
    Some cluster resources depend on other components or resources and
    require that each component or resource starts in a specific order and
    runs on the same server. To simplify this configuration we support the
    concept of groups.
   </para>
   <para>
    For an example of a resource group and more information about groups and
    their properties, refer to
    <xref linkend="sec.ha.configuration.basics.resources.advanced.groups"/>.
   </para>
   <note>
    <title>Empty Groups</title>
    <para>
     Groups must contain at least one resource, otherwise the configuration
     is not valid. In &hawk;, primitives cannot be created or modified while
     creating a group. Before adding a group, create primitives and
     configure them as desired. For details, refer to
     <xref linkend="pro.ha.config.hawk.primitives"/>.
    </para>
   </note>
<!-- tserong 2011-11-08:** missing functionality: once created, you can't rename a group or 
    change its children **-->
   <procedure id="pro.ha.config.hawk.group">
    <title>Adding a Resource Group</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Group</guimenu> category and click the plus icon.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Group ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To define the group members, select one or multiple entries in the
      list of <guimenu>Available Primitives</guimenu> and click the &lt;
      icon to add them to the <guimenu>Group Children</guimenu> list. Any
      new group members are added to the bottom of the list. To define the
      order of the group members, you currently need to add and remove them
      in the order you desire.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu> as
      described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select: lable title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Group</guimenu> to finish the configuration. A
      message at the top of the screen shows if the group was successfully
      created.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Resource Group</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-rsc-group.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-rsc-group.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.confighawk.clone">
   <title>Configuring a Clone Resource</title>
   <para>
    If you want certain resources to run simultaneously on multiple nodes in
    your cluster, configure these resources as a clones. For example,
    cloning makes sense for resources like &stonith; and cluster file
    systems like OCFS2. You can clone any resource provided. Cloning is
    supported by the resource’s Resource Agent. Clone resources may be
    configured differently depending on which nodes they are running on.
   </para>
   <para>
    For an overview of the available types of resource clones, refer to
    <xref linkend="sec.ha.configuration.basics.resources.advanced.clones"/>.
   </para>
   <note>
    <title>Sub-resources for Clones</title>
    <para>
     Clones can either contain a primitive or a group as sub-resources. In
     &hawk;, sub-resources cannot be created or modified while creating a
     clone. Before adding a clone, create sub-resources and configure them
     as desired. For details, refer to
     <xref linkend="pro.ha.config.hawk.primitives"/> or
     <xref linkend="pro.ha.config.hawk.group"/>.
    </para>
   </note>
   <procedure id="pro.ha.config.hawk.clone">
    <title>Adding or Modifying Clones</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Clone</guimenu> category and click the plus icon.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Clone ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the clone.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu> as
      described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Clone</guimenu> to finish the configuration. A
      message at the top of the screen shows if the clone was successfully
      created.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Clone Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-clone.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-clone.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.manage">
  <title>Managing Cluster Resources</title>

  <para>
   In addition to configuring your cluster resources, &hawk; allows you to
   manage existing resources from the <guimenu>Cluster Status</guimenu>
   screen. For a general overview of the screen, its different views and the
   color code used for status information, refer to
   <xref linkend="sec.ha.configuration.hawk.intro.main"/>.
  </para>

  <para>
   Basic resource operations can be executed from any cluster status view.
   Both <guimenu>Tree View</guimenu> and <guimenu>Table View</guimenu> let
   you access the individual resources directly. However, in the
   <guimenu>Summary View</guimenu> you need to click the links in the
   resources category first to display the resource details.
  </para>

  <sect2 id="sec.ha.config.hawk.start">
   <title>Starting Resources</title>
   <para>
    Before you start a cluster resource, make sure it is set up correctly.
    For example, if you want to use an Apache server as a cluster resource,
    set up the Apache server first and complete the Apache configuration
    before starting the respective resource in your cluster.
   </para>
   <note>
    <title>Do Not Touch Services Managed by the Cluster</title>
    <para>
     When managing a resource via the &hasi;, the same resource must not be
     started or stopped otherwise (outside of the cluster, for example
     manually or on boot or reboot). The &hasi; software is responsible for
     all service start or stop actions.
    </para>
    <para>
     However, if you want to check if the service is configured properly,
     start it manually, but make sure that it is stopped again before &ha;
     takes over.
    </para>
    <para>
     For interventions in resources that are currently managed by the
     cluster, set the resource to <literal>unmanaged mode</literal> first as
     described in <xref linkend="pro.ha.config.hawk.mgmt.mode"/>.
    </para>
   </note>
   <para>
    When creating a resource with &hawk;, you can set its initial state with
    the <literal>target-role</literal> meta attribute. If you set its value
    to <literal>stopped</literal>, the resource does not start automatically
    after being created.
   </para>
   <procedure id="pro.ha.config.hawk.start">
    <title>Starting A New Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Start</guimenu>. To continue, confirm
      the message that appears. As soon as the resource has started, &hawk;
      changes the resource's color to green and shows on which node it is
      running.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.cleanup">
   <title>Cleaning Up Resources</title>
   <para>
    A resource will be automatically restarted if it fails, but each failure
    increases the resource's failcount.
<!--View a resource's failcount with the
    &hbgui; my clicking <guimenu>Management</guimenu> in the left pane, then
    selecting the resource in the right pane. If a resource has failed, its
    <guimenu>Fail Count</guimenu> is shown in the middle of the right pane
    (below the <guimenu>Migration Threshold</guimenu> entry).-->
   </para>
   <para>
    If a <literal>migration-threshold</literal> has been set for the
    resource, the node will no longer run the resource when the number of
    failures reaches the migration threshold.
   </para>
   <para>
    A resource's failcount can either be reset automatically (by setting a
    <literal>failure-timeout</literal> option for the resource) or you can
    reset it manually as described below.
   </para>
   <procedure id="pro.ha.config.hawk.clean">
    <title>Cleaning Up A Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the failed resource and select <guimenu>Clean Up</guimenu>. To
      continue, confirm the message that appears.
     </para>
<!--tserong 2011-11-25: actually, it executes "crm resource cleanup" but
     that's probably ultimately about the same as what you've listed :)-->
     <para>
      This executes the commands
      <command>crm_resource&nbsp;<option>-C</option> </command> and
      <command>crm_failcount&nbsp;<option>-D</option> </command> for the
      specified resource on the specified node.
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the man pages of
    <command>crm_resource</command> and <command>crm_failcount</command>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.remove">
   <title>Removing Cluster Resources</title>
   <para>
    If you need to remove a resource from the cluster, follow the procedure
    below to avoid configuration errors:
   </para>
<!--https://bugzilla.novell.com/show_bug.cgi?id=520718-->
   <note>
    <title>Removing Referenced Resources</title>
    <para>
     A cluster resource cannot be removed if its ID is referenced by any
     constraint. If you cannot delete a resource, check where the resource
     ID is referenced and remove the resource from the constraint first.
    </para>
   </note>
   <procedure id="pro.ha.config.hawk.rm">
    <title>Removing a Cluster Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Clean up the resource on all nodes as described in
      <xref linkend="pro.ha.config.hawk.clean"/>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Stop</guimenu>. To continue, confirm
      the message that appears.
     </para>
    </step>
    <step>
     <para>
      Remove all constraints that relate to the resource, otherwise removing
      the resource will not be possible. For details, refer to
      <xref linkend="pro.ha.config.hawk.constraints.remove"/>.
     </para>
    </step>
    <step>
     <para>
      If the resource is stopped, click the wrench icon next to it and
      select <guimenu>Delete Resource</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.migrate">
   <title>Migrating Cluster Resources</title>
   <para>
    As mentioned in <xref linkend="sec.ha.config.hawk.failover"/>, the
    cluster will fail over (migrate) resources automatically in case of
    software or hardware failures&mdash;according to certain parameters you
    can define (for example, migration threshold or resource stickiness).
    Apart from that, you can also manually migrate a resource to another
    node in the cluster (or decide to just move it away from the current
    node and leave the decision where to put it to the cluster).
   </para>
   <procedure id="pro.ha.config.hawk.migrate">
    <title>Manually Migrating a Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Move</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the new window, select the node to which to move the resource.
     </para>
     <para>
      This creates a location constraint with an <literal>INFINITY</literal>
      score for the destination node.
     </para>
    </step>
    <step>
     <para>
      Alternatively, select to move the resource <guimenu>Away from current
      node</guimenu>. This creates a location constraint with a
      <literal>-INFINITY</literal> score for the current node.
<!--taroth 2011-11-15: the GUI also offers temporary migration (setting a
       duration) or forced migration (if the resource's stickiness and
       constraint scores total more than <literal>INFINITY</literal> on the
       current node) - tserong 2011-11-25: Hawk does not offer temporary 
       migration -->
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-move-rsc.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-move-rsc.png" width="70%" format="png"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
    </step>
<!-- <step>
     <para>
      If you want to migrate the resource only temporarily, activate
      <guimenu>Duration</guimenu> and enter the time frame for which the
      resource should migrate to the new node. After the expiration of the
      duration, the resource <emphasis>can</emphasis> move back to its
      original location or it may stay where it is (depending on resource
      stickiness).
     </para>
    </step>
    <step>
     <para>
      In cases where the resource cannot be migrated (if the resource's
      stickiness and constraint scores total more than
      <literal>INFINITY</literal> on the current node), activate the
      <guimenu>Force</guimenu> option. This forces the resource to move by
      creating a rule for the current location and a score of
      <literal>-INFINITY</literal>.
     </para>
     <note>
      <para>
       This prevents the resource from running on this node until the
       constraint is removed with <guimenu>Clear Migrate
        Constraints</guimenu> or the duration expires.
      </para>
     </note>
    </step>-->
    <step>
     <para>
      Click <guimenu>OK</guimenu> to confirm the migration.
     </para>
    </step>
   </procedure>
   <para>
    To allow a resource to move back again, proceed as follows:
   </para>
   <procedure id="pro.ha.config.hawk.migrate.back">
    <title>Clearing a Migration Constraint</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Drop Relocation Rule</guimenu>. To
      continue, confirm the message that appears.
     </para>
     <para>
      This uses the <command>crm_resource&nbsp;<option>-U</option>
      </command> command. The resource <emphasis>can</emphasis> move back to
      its original location or it may stay where it is (depending on
      resource stickiness).
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the <command>crm_resource</command> man page
    or <citetitle>Pacemaker Explained</citetitle>, available from
    <xref linkend="vle.ha.configuration.basics.more.clusterlabs.doc" xrefstyle="select: title nopage"/>.
    Refer to section <citetitle>Resource Migration</citetitle>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.mgmt.mode">
   <title>Changing Management Mode of Resources</title>
   <para>
    When a resource is being managed by the cluster, it must not be touched
    otherwise (outside of the cluster). For maintenance of individual
    resources, you can set the respective resources to an <literal>unmanaged
    mode</literal> that allows you to modify the resource outside of the
    cluster.
   </para>
   <procedure id="pro.ha.config.hawk.mgmt.mode">
    <title>Changing Management Mode of Resources</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>.
      Select the resource you want to put in unmanaged mode, click the
      wrench icon next to the resource and select <guimenu>Edit
      Resource</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Open the <guimenu>Meta Attributes</guimenu> category.
     </para>
    </step>
    <step>
     <para>
      From the empty drop-down list, select the
      <guimenu>is-managed</guimenu> attribute and click the plus icon to add
      it.
     </para>
    </step>
    <step>
     <para>
      Deactivate the checkbox next to <literal>is-managed</literal> to put
      the resource in unmanaged mode and confirm your changes.
     </para>
    </step>
    <step>
     <para>
      After you have finished the maintenance task for that resource,
      reactivate the checkbox next to the <literal>is-managed</literal>
      attribute for that resource.
     </para>
     <para>
      From this point on, the resource will be managed by the &hasi;
      software again.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.history">
   <title>Viewing the Cluster History</title>
<!--fate#303620-->
   <para>
    &hawk; provides the following possibilities to view past events on the
    cluster (on different levels and in varying detail).
   </para>
   <procedure id="pro.ha.config.hawk.recent">
    <title>Viewing Recent Events of Nodes or Resources</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the <guimenu>Tree View</guimenu> or <guimenu>Table View</guimenu>,
      click the wrench icon next to the resource or node you are interested
      in and select <guimenu>View Recent Events</guimenu>.
     </para>
     <para>
      The dialog that opens shows the events of the last hour.
     </para>
    </step>
   </procedure>
   <procedure id="pro.ha.config.hawk.history.explorer">
    <title>Viewing Transitions with the History Explorer</title>
    <para>
     The <guimenu>History Explorer</guimenu> provides transition information
     for a time frame that you can define:
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>History
      Explorer</guimenu>.
     </para>
    </step>
    <step>
     <para>
      By default, the period to explore is set to the last 24 hours. To
      modify this, set another <guimenu>Start Time</guimenu> and
      <guimenu>End Time</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Display</guimenu> to start collecting transition data.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;History Report</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-history-report.png" width="90%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-history-report.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    The following information is displayed:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      The time line of all past transitions in the cluster.
     </para>
    </listitem>
    <listitem>
     <para>
      The <filename>pe-input</filename> files for each transition. For each
      transition, the cluster saves a copy of the state which is provided to
      the policy engine as input. The path to this archive is logged. The
      files are only generated on the Designated Coordinator (DC), but as
      the DC can change, there may be <filename>pe-input</filename> files
      from several nodes listed in the <guimenu>History Explorer</guimenu>.
      The files show what the Policy Engine (PE)
      <emphasis>planned</emphasis> to do.
     </para>
    </listitem>
    <listitem>
     <para>
      Graph, XML representation and details of each transition.
     </para>
     <para>
      If you choose to show the <guimenu>Graph</guimenu>, the PE is
      reinvoked (using the <filename>pe-input</filename> files), and
      generates a graphical visualization of the transition. Alternatively,
      you can view the XML representation of the graph. Clicking
      <guimenu>Details</guimenu> shows snippets of
      <filename>var/log/messages</filename> that belong to that particular
      transition.
<!--taroth 2011-11-18: in my case, I got messages like those: 
       ERROR: 2: f191/pengine/pe-input-24.bz2: path not
       found - according to tserong this could be a bug in crm history,
       check again next time and file bug-->
     </para>
    </listitem>
   </itemizedlist>
   <figure>
    <title>&hawk; History Report&mdash;Transition Graph</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-history-graph.png" width="70%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-history-graph.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.simulator">
   <title>Exploring Potential Failure Scenarios</title>
<!--fate#310186-->
   <para>
    &hawk; provides a <guimenu>Simulator </guimenu> that allows you to
    explore failure scenarios before they happen. After switching to the
    simulator mode, change the status of nodes or execute multiple resource
    operations to see how the cluster would behave should these events
    occur.
   </para>
   <procedure id="pro.ha.config.hawk.simulator">
    <title>Switching to Simulator Mode</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Simulator</guimenu>.
     </para>
     <para>
      &hawk;'s background changes color to indicate the simulator is active.
      A simulator dialog opens in the bottom right hand corner of the
      screen. Its title <guimenu>Simulator (initial state)</guimenu>
      indicates that <guimenu>Cluster Status</guimenu> screen still reflects
      the current state of the cluster.
     </para>
    </step>
    <step>
     <para>
      To simulate status change of a node:
     </para>
     <substeps>
      <step>
       <para>
        Click <guimenu>+Node</guimenu> in the simulator control dialog.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Node</guimenu> you want to manipulate and select
        its target <guimenu>State</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Confirm your changes to add them to the queue of events listed in
        the controller dialog below <guimenu>Injected State</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To simulate a resource operation:
     </para>
     <substeps>
      <step>
       <para>
        Click <guimenu>+Op</guimenu> in the simulator control dialog.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Resource</guimenu> to manipulate and the
        <guimenu>Operation</guimenu> to simulate. If necessary, define an
        <guimenu>Interval</guimenu>. Select the <guimenu>Node</guimenu> on
        which to run the operation and the targeted
        <guimenu>Result</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Confirm your changes to add them to the queue of events listed in
        the controller dialog below <guimenu>Injected State</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Repeat the previous steps for any other events you wish to simulate.
     </para>
    </step>
    <step>
     <para>
      To remove any of the events listed in <guimenu>Injected
      State</guimenu>, select the entry and click the minus icon beneath the
      list.
     </para>
    </step>
    <step>
     <para>
      To start the simulation, click <guimenu>Run</guimenu> in the simulator
      control dialog. The <guimenu>Cluster Status</guimenu> screen displays
      the simulated events. For example, if you marked a node as unclean, it
      will now be shown offline, and all its resources will be stopped. The
      simulator control dialog changes to <guimenu>Simulator (final
      state)</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To view more detailed information:
     </para>
     <substeps>
      <step>
       <para>
        To see log snippets of what occurred, click the
        <guimenu>Details</guimenu> link in the simulator dialog.
       </para>
      </step>
      <step>
       <para>
        To see the transition graph, click the <guimenu>Graph </guimenu>
        link.
       </para>
      </step>
      <step>
       <para>
        To display the initial CIB state, click <guimenu>CIB (in)</guimenu>.
       </para>
      </step>
      <step>
       <para>
        To see what the CIB would look like after the transition, click
        <guimenu>CIB (out)</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To start from scratch with a new simulation, use the
      <guimenu>Reset</guimenu> button.
     </para>
    </step>
    <step>
     <para>
      To exit the simulation mode, close the simulator control dialog. The
      <guimenu>Cluster Status</guimenu> screen switches back to its normal
      color and displays the current cluster state.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Simulator</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-simulator.png" width="90%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-simulator.png" width="70%" format="png"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.hb_report">
   <title>Generating a Cluster Report</title>
<!--fate##310187-->
   <para>
    For analysis and diagnosis of problems occurring on the cluster, &hawk;
    can generate a cluster report that collects information from all nodes
    in the cluster.
   </para>
   <procedure id="pro.ha.config.hawk.hb_report">
    <title>Generating a <literal>hb_report</literal></title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Generate
      hb_report</guimenu>.
     </para>
    </step>
    <step>
     <para>
      By default, the period to examine is the last hour. To modify this,
      set another <guimenu>Start Time</guimenu> and <guimenu>End
      Time</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Generate</guimenu>.
     </para>
    </step>
    <step>
     <para>
      After the report has been created, download the
      <filename>*.tar.bz2</filename> file by clicking the respective link.
     </para>
    </step>
   </procedure>
   <para>
    <remark>taroth 2011-11-18: todo - add link to troubleshooting chapter for
     more info as soon as Toms has enabled the section and filled with some
     life</remark>
   </para>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.geo">
  <title>Multi-Site Clusters (Geo Clusters)</title>
  <para>Support for multi-site clusters (geo clusters) is available as a
   separate option to &productname;. For an introduction and detailed
   information on how to set up multi-site clusters, refer to <xref
    linkend="cha.ha.geo"/>. </para>
  <para>Some of the required steps need to be executed within the individual
   clusters (that are then combined to a multi-site cluster), while other steps
   take place on an <quote>inter-cluster</quote> layer. Therefore not all setup
   steps can alternatively be executed with &hawk;. But &hawk; offers
   the following features related to multi-site clusters: </para>
  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.hawk.geo.ticket" xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.hawk.geo.rsc" xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>
  <sect2 id="sec.ha.config.hawk.geo.ticket">
   <title>Viewing Tickets</title>
   <procedure id="pro.ha.config.hawk.viewtickets">
    <title>Viewing Tickets with &hawk;</title>
    <para>Viewing tickets with &hawk; is only possible if at least one
     ticket has ever been granted or revoked to the cluster site that you are
     accessing with &hawk;. The Web interface takes the respective
     information from the &lt;tickets&gt; section in the CIB where the
     presence or absence of tickets for a site is stored as a cluster status. </para>
    <step>
     <para>Start a Web browser and log in to the cluster as described in <xref
       linkend="sec.ha.config.hawk.intro.connect"/>. </para>
    </step>
    <step>
     <para>In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>If the <guimenu>Summary View</guimenu> is not already active, click
      the respective view icon on the upper right-hand side.</para>
     <figure>
      <title>&hawk; Cluster Status (Summary View)&mdash;Tickets</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-summary-tickets.png" width="60%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-summary-tickets.png" width="50%" format="png"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>To see more details about individual tickets (for example, the ticket
      name), click the respective entries that are marked as links.</para>
    </step>
   </procedure>
   <note>
    <title>Managing Tickets</title>
    <para>To grant or revoke tickets, use the <command>booth client</command>
     command as described in <xref linkend="sec.ha.geo.manage"/>. As managing
     tickets takes place on an <quote>inter-cluster</quote> layer, you cannot do
     so with &hawk;.</para>
   </note>
  </sect2>
  <sect2 id="sec.ha.config.hawk.geo.rsc">
   <title>Configuring Additional Cluster Resources and Constraints</title>
   <para>Apart from the resources and constraints that you need to define for
    your specific cluster setup, multi-site clusters require additional
    resources and constraints as outlined in <xref
     linkend="sec.ha.geo.setup.resources"/>. All of those can be configured with
    the CRM shell, but alternatively also with &hawk;.</para>
   <para>This section focuses on ticket dependencies only as they are specific
    to multi-site clusters. For general instructions on how to configure
    resource groups and order constraints with &hawk;, refer to <xref
     linkend="sec.ha.confighawk.group"/> and <xref
     linkend="pro.ha.config.hawk.constraints.collocation.order"/>, respectively. </para>
   <procedure>
    <title>Configuring Ticket Dependencies</title>
    <para>For multi-site clusters, you can specify which resources depend on a
     certain ticket. Together with this special type of constraint, you can set
     a <literal>loss-policy</literal> that defines what should happen to the
     respective resources if the ticket is revoked. The attribute
      <literal>loss-policy</literal> can have the following values: </para>
    <itemizedlist>
     <listitem>
      <para>
       <literal>fence</literal>: Fence the nodes that are running the relevant
       resources. </para>
     </listitem>
     <listitem>
      <para>
       <literal>stop</literal>: Stop the relevant resources. </para>
     </listitem>
     <listitem>
      <para>
       <literal>freeze</literal>: Do nothing to the relevant resources. </para>
     </listitem>
     <listitem>
      <para>
       <literal>demote</literal>: Demote relevant resources that are running in
        <literal>master</literal> mode to <literal>slave</literal> mode. </para>
     </listitem>
    </itemizedlist>
    <step>
     <para> Start a Web browser and log in to the cluster as described in <xref
       linkend="sec.ha.config.hawk.intro.connect"/>. </para>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Constraints</guimenu>.
      The <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints and lists all defined constraints. </para>
    </step>
    <step>
     <para>To add a new ticket dependency, click the plus icon in the
       <guimenu>Ticket</guimenu> category. </para>
     <para> To modify an existing constraint, click the wrench icon next to the
      constraint and select <guimenu>Edit Constraint</guimenu>. </para>
    </step>
    <step>
     <para> Enter a unique <guimenu>Constraint ID</guimenu>. When modifying
      existing constraints, the ID is already defined. </para>
    </step>
    <step>
     <para>Enter the ID of the ticket that the resources should depend
      on.</para>
    </step>
    <step>
     <para> Set a <guimenu>Loss Policy</guimenu>. </para>
    </step>
    <step>
     <para>Select a resource from the list <guimenu>Add resource to
       constraint</guimenu>. The list shows the IDs of all resources and all
      resource templates configured for the cluster. </para>
    </step>
    <step>
     <para>To add the selected resource, click the plus icon next to the list. A
      new list appears beneath, showing the remaining resources. Add as many
      resources to the constraint as you would like to depend on the
      ticket.</para>
     <figure id="fig.hawk.ticket.dep.simple">
      <title>Example Ticket Dependency</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-ticket-dependency1.png" width="60%"
         format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-ticket-dependency1.png" width="50%"
         format="png"/>
       </imageobject>
      </mediaobject>
     </figure>
     <para>
      <xref linkend="fig.hawk.ticket.dep.simple"/> shows a constraint with the
      ID <literal>rsc1-req-ticketA</literal>. It defines that the resource
       <literal>rsc1</literal> depends on <literal>ticketA</literal> and that
      the node running the resource should be fenced in case
       <literal>ticketA</literal> is revoked. </para>
    </step>
    <step>
     <para> Click <guimenu>Create Constraint</guimenu> to finish the
      configuration. A message at the top of the screen shows if the constraint
      was successfully created. </para>
    </step>
   </procedure>
  
   
  <!-- <para> If resource <literal>rsc1</literal> was not a primitive, but a special
    clone resource that can run in <literal>master</literal> or
     <literal>slave</literal> mode, you may want to configure that only
     <literal>rsc1</literal>'s master mode depends on
    <literal>ticketA</literal>. With the configuration shown in <xref
     linkend="fig.hawk.ticket.dep.adv"/>, <literal>rsc1</literal> is
    automatically demoted to <literal>slave</literal> mode if
     <literal>ticketA</literal> is revoked: </para>-->
  <!--taroth 2012-03-13: for some strange reasons, did not manage to create a 
     master-slave resource with Hawk, always got: sorry, but s.th. went wrong-->   
   <!--<figure id="fig.hawk.ticket.dep.adv">
    <title>Example Ticket Dependency</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-ticket-dependency1.png" width="60%" format="PNG"
      />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-ticket-dependency1.png" width="50%" format="png"
      />
     </imageobject>
    </mediaobject>
   </figure>-->
  </sect2>
 </sect1>
 
 <sect1 id="sec.ha.config.hawk.trouble">
  <title>Troubleshooting</title>

  <variablelist>
   <varlistentry>
    <term>&hawk; Log Files</term>
    <listitem>
     <para>
      Find the &hawk; log files in <filename>/srv/www/hawk/log</filename>.
      Check these files in case you cannot access &hawk;.
     </para>
     <para>
      If you have trouble starting or stopping a resource with &hawk;, check
      the Pacemaker log messages. By default, Pacemaker logs to
      <filename>/var/log/messages</filename>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Authentication Fails</term>
    <listitem>
     <para>
      If you cannot log in to &hawk; with a new user that is a member of the
      <systemitem class="groupname">haclient</systemitem> group (or if you
      experience delays until &hawk; accepts logins from this user), stop
      the <systemitem class="daemon">nscd</systemitem> daemon with
      <command>rcnscd&nbsp;stop</command> and try again.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="vle.ha.hawk.certificate">
    <term>Replacing the Self-Signed Certificate</term>
    <listitem>
     <para>
      To avoid the warning about the self-signed certificate on first &hawk;
      startup, replace the automatically created certificate with your own
      certificate or a certificate that was signed by an official
      Certificate Authority (CA).
     </para>
     <para>
      The certificate is stored in
      <filename>/etc/lighttpd/certs/hawk-combined.pem</filename> and
      contains both key and certificate. After you have created or received
      your new key and certificate, combine them by executing the following
      command:
     </para>
     <screen>cat <replaceable>keyfile</replaceable>&nbsp;<replaceable>certificatefile</replaceable> > /etc/lighttpd/certs/hawk-combined.pem</screen>
     <para>
      Change the permissions to make the file only accessible by &rootuser;:
     </para>
     <screen>chown root.root /etc/lighttpd/certs/hawk-combined.pem
chmod 600 /etc/lighttpd/certs/hawk-combined.pem</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Login to &hawk; Fails After Using History Explorer/hb_report </term>
    <listitem>
     <para>
<!--taroth 2011-11-18: filed https://bugzilla.novell.com/show_bug.cgi?
      id=731282 - if that can be fixed in the software, remove this 
      troubleshooting topic - taroth 2012-01-11: some progress with the bug
      but maybe still too early to remove the topic completely-->
      Depending on the period of time you defined in the <guimenu>History
      Explorer</guimenu> or <guimenu>hb_report</guimenu> and the events that
      took place in the cluster during this time, &hawk; might collect an
      extensive amount of information stored in log files in the
      <filename>/tmp</filename> directory. This might consume the remaining
      free disk space on your node. In case &hawk; should not respond after
      using the <guimenu>History Explorer</guimenu> or
      <guimenu>hb_report</guimenu>, check the hard disk of your cluster node
      and remove the respective log files.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
