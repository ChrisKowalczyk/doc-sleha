<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd" [
 <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
 <!ENTITY % entities SYSTEM "entity-decl.ent">
 %entities;
]>
<!--taroth 2013-11-07: open issues to complete transfer for fate#316120 and #316121
 - remove geocluster chapter from HA Guide
 - add link to new QS in HA Guide
 - fix Hawk chapter with regards to any remaining GEO stuff
 - check overview chapter and fix link
-->
<!--taroth 2012-01-11: todo for next revision: how to define constraints via
rule editor-->
<!--taroth 2013-03-25: for SLE 12 at the latest, split sec.ha.config.hawk.intro in two separate
 sections and briefly explain main Hawk screens/tools, also split into smaller XIncludes-->
<chapter id="cha.ha.config.hawk">
 <title>Configuring and Managing Cluster Resources (Web Interface)</title>
 <abstract>
  <para>
   <remark>toms 2014-02-27: Compare with ha_config_cli.xml, id=cha.ha.manual_config;
    Probably it would be a good idea to use a consistent introducery para.
   </remark>
   In addition to the <command>crm</command> command line tool, 
   the &hasi; also comes with the &haweb; (&hawk;), a Web-based
   user interface for management tasks. It allows you to monitor and
   administer your Linux cluster from non-Linux machines as well.
   Furthermore, it is the ideal solution in case your system only provides a
   minimal graphical user interface.
  </para>

  <para>
   This chapter introduces &hawk; and covers basic tasks for configuring and
   managing cluster resources: modifying global cluster options, creating
   basic and advanced types of resources (groups and clones), configuring
   constraints, specifying failover nodes and failback nodes, configuring
   resource monitoring, starting, cleaning up or removing resources, and
   migrating resources manually. For detailed analysis of the cluster
   status, &hawk; generates a cluster report (<literal>crm_report</literal>).
   You can view the cluster history or explore potential failure scenarios
   with the simulator.
  </para>

  <para>
   The Web interface is included in the
   <systemitem class="resource">hawk</systemitem> package. It must be
   installed on all cluster nodes you want to connect to with &hawk;. On the
   machine from which you want to access a cluster node using &hawk;, you
   only need a (graphical) Web browser with JavaScript and cookies enabled
   to establish the connection.
  </para>
 </abstract>
 <note>
  <title>User Authentication</title>
  <para>
   To log in to the cluster from &hawk;, the respective user must be a
   member of the <systemitem class="groupname">haclient</systemitem> group.
   The installation creates a Linux user named
   <systemitem class="username">hacluster</systemitem> and adds the user to
   the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Before using &hawk;, either set a password for the
   <systemitem>hacluster</systemitem> user or create a new user which is a
   member of the <systemitem class="groupname">haclient</systemitem> group.
  </para>
  <para>
   Do this on every node you will connect to with &hawk;.
  </para>
 </note>
 <sect1 id="sec.ha.config.hawk.intro">
  <title>&hawk;&mdash;Overview</title>

  <para>
   Learn how to start &hawk;, how to log in to the cluster and get to know
   the &hawk; basics.
  </para>

  <sect2 id="sec.ha.config.hawk.intro.connect">
   <title>Starting &hawk; and Logging In</title>
   <procedure id="pro.ha.hawkstart">
    <title>Starting &hawk;</title>
    <para>
     To use &hawk;, the respective Web service must be started on the node
     that you want to connect to via the Web interface. For communication,
     the standard HTTPS protocol and port <literal>7630</literal> is used.
    </para>
    <step>
     <para>
      On the node you want to connect to, open a shell and log in as
      &rootuser;.
     </para>
    </step>
    <step>
     <para>
      Check the status of the service by entering
     </para>
<screen>rchawk status</screen>
    </step>
    <step>
     <para>
      If the service is not running, start it with
     </para>
<screen>rchawk start</screen>
     <para>
      If you want &hawk; to start automatically at boot time, execute the
      following command:
     </para>
<screen>&prompt.root;<command>systemctl</command> enable hawk.service</screen>
    </step>
   </procedure>
   <procedure id="pro.ha.hawk.login">
<!-- <remark>taroth 2010-03-03: tserong, do we have any restrictions regarding
    the browsers we support (or that have been tested with hawk)? tserong: any
    modern graphical web browser with JavaScript and cookies enabled - if we
    need an explicit supported browser statement, then I'd say: Firefox 3.0+,
    IE 7.0+</remark>-->
    <step>
     <para>
      On any machine, start a Web browser and make sure that JavaScript and
      cookies are enabled.
     </para>
    </step>
    <step>
     <para>
      Point it at the IP address or hostname of any cluster node running the
      &hawk; Web service, or the address of any <literal>IPaddr(2)</literal>
      resource that you may have configured:
     </para>
<screen>https://<replaceable>IPaddress</replaceable>:7630/</screen>
     <note>
      <title>Certificate Warning</title>
      <para>
       Depending on your browser and browser options, you may get a
       certificate warning when trying to access the URL for the first time.
       This is because &hawk; uses a self-signed certificate that is not
       considered trustworthy per default.
      </para>
      <para>
       In this case, verify the certificate. To proceed anyway, you can add
       an exception in the browser to bypass the warning.
      </para>
      <para>
       To avoid the warning in the first place, the self-signed certificate
       can also be replaced with a certificate signed by an official
       Certificate Authority. For information on how to do so, refer to
       <xref
        linkend="vle.ha.hawk.certificate"/>.
      </para>
     </note>
    </step>
    <step>
     <para>
      On the &hawk; login screen, enter the <guimenu>Username</guimenu> and
      <guimenu>Password</guimenu> of the
      <systemitem class="username">hacluster</systemitem> user (or of any
      other user that is a member of the
      <systemitem class="groupname"
       >haclient</systemitem> group) and
      click <guimenu>Log In</guimenu>.
     </para>
     <para>
      The <guimenu>Cluster Status</guimenu> screen appears, displaying the
      status of your cluster nodes and resources, similar to the output of
      the <command>crm_mon</command> command.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.intro.main">
   <title>Main Screen: Cluster Status</title>
   <para>
    After logging in, &hawk; displays the <guimenu>Cluster Status</guimenu>
    screen. It shows a summary with the most important global cluster
    parameters and the status of your cluster nodes and resources. The
    following color code is used for status display of nodes and resources:
   </para>
   <itemizedlist id="il.ha.config.hawk.colors">
    <title>&hawk; Color Code</title>
    <listitem>
     <para>
      Green: OK. For example, the resource is running or the node is online.
     </para>
    </listitem>
    <listitem>
     <para>
      Red: Bad, unclean. For example, the resource has failed or the node
      was not shut down cleanly.
     </para>
    </listitem>
    <listitem>
     <para>
      Yellow: In transition. For example, the node is currently being shut
      down. If you click a pending resource to view its details, &hawk; also
      displays the state to which the resource is currently changing
      (<literal>Starting</literal>, <literal>Stopping</literal>,
      <literal>Moving</literal>, <literal>Promoting</literal>, or
      <literal>Demoting</literal>).
     </para>
    </listitem>
    <listitem>
     <para>
      Gray: Not running, but the cluster expects it to be running. For
      example, nodes that the administrator has stopped or put into
      <literal>standby</literal> mode. Also nodes that are offline are
      displayed in gray (if they have been shut down cleanly).
     </para>
    </listitem>
   </itemizedlist>
   <para>
    In addition to the color code, &hawk; also displays self-explanatory
    icons for the state of nodes, resources, tickets and for error messages
    in all views of the <guimenu>Cluster Status</guimenu> screen.
   </para>
   <para>
    If a resource has failed, an error message with the details is shown in
    red at the top of the screen. To analyze the causes for the failure,
    click the error message. This automatically takes you to &hawk;'s
    <guimenu>History Explorer</guimenu> and triggers the collection of data
    for a time span of 20 minutes (10 minutes before and 10 minutes after
    the failure occurred). For more details, refer to
    <xref
     linkend="pro.ha.config.hawk.history.explorer"/>.
   </para>
   <figure pgwide="0">
    <title>&hawk;&mdash;Cluster Status (Summary View)</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-cluster-status-main.png" width="90%" format="PNG"
      />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-cluster-status-main.png" width="80%" format="PNG"
      />
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    The <guimenu>Cluster Status</guimenu> screen refreshes itself in near
    real-time. Choose between the following views, which you can access with
    the three icons in the upper right corner:
   </para>
<!--fate#309100-->
   <variablelist>
    <title>&hawk; Cluster Status Views</title>
    <varlistentry>
     <term>Summary View</term>
     <listitem>
      <para>
       Shows the most important global cluster parameters and the status of
       your cluster nodes and resources at the same time. If your setup
       includes &geo; clusters (multi-site clusters), the summary view also shows tickets. 
       To view details about all elements belonging to a certain category (tickets, nodes, or
       resources), click the category title, which is marked as a link.
       Otherwise click the individual elements for details.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Tree View</term>
     <listitem>
      <para>
<!--taroth 2013-04-29: todo - bnc#809988: Tickets are only displayed in default view-->
       Presents an expandable view of the most important global cluster
       parameters and the status of your cluster nodes and resources. Click
       the arrows to expand or collapse the elements belonging to the
       respective category. In contrast to the <guimenu>Summary
       View</guimenu> this view not only shows the IDs and status of
       resources but also the type (for example, primitive, clone, or
       group).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Table View</term>
     <listitem>
      <para>
       This view is especially useful for larger clusters, because it shows
       in a concise way which resources are currently running on which node.
       Inactive nodes or resources are also displayed.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    The top-level row of the main screen shows the username with which you
    are logged in. It also allows you to <guimenu>Log Out</guimenu> of the
    Web interface, and to access the following <guimenu>Tools</guimenu> from
    the wrench icon next to the username:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <guimenu>Simulator</guimenu>. For details, refer to
      <xref
       linkend="sec.ha.config.hawk.simulator"/>.
     </para>
    </listitem>
<!--fate#313718 (SP3)-->
    <listitem>
     <para>
      <guimenu>Cluster Diagram</guimenu>. Select this entry for a graphical
      representation of the nodes and the resources configured in the CIB.
      The diagram also shows the ordering and colocation between resources
      and node assignments (scores).
     </para>
     <figure id="fig.ha.cluster.diagram" pgwide="0">
      <title>&hawk;&mdash;Cluster Diagram</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-cluster-diagram.png" width="100%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-cluster-diagram.png" width="100%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </listitem>
    <listitem>
     <para>
      <guimenu>Cluster Report</guimenu> (<command>crm_report</command>). For
      details, refer to
      <xref
       linkend="sec.ha.config.hawk.crm_report"/>.
     </para>
    </listitem>
   </itemizedlist>
   <para>
    To perform basic operator tasks on nodes and resources (like starting or
    stopping resources, bringing nodes online, or viewing details), click
    the wrench icon next to the respective node or resource to access a
    context menu.
<!--fate#314388 (SP3)-->
    For any clone, group or master/slave child resource on any of the status
    screens, select the <guimenu>Parent</guimenu> menu item from the context
    menu. Clicking this will let you start, stop, etc. the top-level clone
    or group to which that primitive belongs.
   </para>
   <para>
    For more complex tasks like configuring resources, constraints, or
    global cluster options, use the navigation bar on the left hand side.
    From there, you can also view the cluster history.
   </para>
   <note>
    <title>Available Functions in &hawk;</title>
    <para>
     By default, users logged in as &rootuser; or
     <systemitem
      class="username">hacluster</systemitem> have full
     read-write access to all cluster configuration tasks. However,
     <xref linkend="cha.ha.acl"
      xrefstyle="select:title"/> can be used
     to define fine-grained access permissions.
    </para>
    <para>
     If ACLs are enabled in the CRM, the available functions in &hawk;
     depend on the user role and access permissions assigned to you. In
     addition, the following functions in &hawk; can only be executed by the
     user <systemitem class="username">hacluster</systemitem>:
    </para>
    <itemizedlist>
     <listitem>
      <para>
       Generating a <literal>crm_report</literal>.
      </para>
     </listitem>
     <listitem>
      <para>
       Using the history explorer.
      </para>
     </listitem>
     <listitem>
      <para>
       Viewing recent events for nodes or resources.
      </para>
     </listitem>
    </itemizedlist>
   </note>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.global">
  <title>Configuring Global Cluster Options</title>

  <para>
   Global cluster options control how the cluster behaves when confronted
   with certain situations. They are grouped into sets and can be viewed and
   modified with cluster management tools like &hawk;, and
   <command>crm</command> shell. The predefined values can be kept in most
   cases. However, to make key functions of your cluster work correctly, you
   need to adjust the following parameters after basic cluster setup:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.basics.global.quorum" xrefstyle="select:title"/>
    </para>
   </listitem>
   <listitem>
    <para>
     <xref linkend="sec.ha.config.basics.global.stonith" xrefstyle="select:title"/>
    </para>
   </listitem>
  </itemizedlist>

  <procedure id="pro.ha.config.hawk.global">
   <title>Modifying Global Cluster Options</title>
   <step>
    <para>
     Start a Web browser and log in to the cluster as described in
     <xref
      linkend="sec.ha.config.hawk.intro.connect"/>.
    </para>
   </step>
   <step>
    <para>
     In the left navigation bar, select <guimenu>Cluster
     Properties</guimenu> to view the global cluster options and their
     current values. &hawk; displays the most important parameters with
     regards to <guimenu>CRM Configuration</guimenu>, <guimenu>Resource
     Defaults</guimenu>, and <guimenu>Operation Defaults</guimenu>.
     <remark>taroth 2013-03-12: I'm also wondering if it would make sense to simply display the
      default values as a text to the right of the field? this would help to reset the values to the
      defaults in case I misconfigured them... if the input fields only reflect the current value, I
      will never now that the default value has been after I changed the value once... tserong
      2013-04-15: Good idea, I've made a note to do that (although I don't know if I'll get it in
      for this release or not, maybe don't mention it, it'll be obvious anyway...) The main crm
      config properties, we have online help for, because I can extract it from pacemaker somehow
      (by querying the PE, or whatever). Unfortunately this metadata isn't exposed anywhere for
      rsc_defaults and op_defaults (or, if it is, I'm not aware of it).</remark>
    </para>
    <figure pgwide="0">
     <title>&hawk;&mdash;Cluster Configuration</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-cluster-props.png" width="80%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-cluster-props.png" width="80%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     Depending on your cluster requirements, adjust the <guimenu>CRM
     Configuration</guimenu>:
    </para>
    <substeps>
     <step>
      <para>
       Set <guimenu>no-quorum-policy</guimenu> to the appropriate value.
      </para>
     </step>
     <step>
      <para>
       If you need to disable fencing for any reasons, deselect
       <guimenu>stonith-enabled</guimenu>.
      </para>
      <important>
       <title>No Support Without &stonith;</title>
       <para>
        A cluster without &stonith; is not supported.
       </para>
      </important>
     </step>
     <step>
      <para>
       To remove a property from the CRM configuration, click the minus icon
       next to the property. If a property is deleted, the cluster will
       behave as if that property had the default value. For details of the
       default values, refer to
       <ulink
        url="http://clusterlabs.org/doc/en-US/Pacemaker/1.1/html/Pacemaker_Explained/s-resource-options.html"
       />.
      </para>
     </step>
     <step>
      <para>
       To add a new property for the CRM configuration, choose one from the
       drop-down list and click the plus icon.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     If you need to change <guimenu>Resource Defaults</guimenu> or
     <guimenu>Operation Defaults</guimenu>, proceed as follows:
    </para>
    <substeps>
     <step>
      <para>
       To change the value of defaults that are already displayed, just edit
       the value in the respective input field.
      </para>
     </step>
     <step>
      <para>
       To add a new resource default or operation default, choose one from
       the empty drop-down list, click the plus icon and enter a value. If
       there are default values defined, &hawk; proposes them automatically.
      </para>
     </step>
     <step>
      <para>
       To remove a resource or operation default, click the minus icon next
       to the parameter. If no values are specified for <guimenu>Resource
       Defaults</guimenu> and <guimenu>Operation Defaults</guimenu>, the
       cluster uses the default values that are documented in
       <xref
        linkend="sec.ha.config.basics.meta.attr"/> and
       <xref
        linkend="sec.ha.config.basics.operations"/>.
      </para>
     </step>
    </substeps>
   </step>
   <step>
    <para>
     Confirm your changes.
    </para>
   </step>
  </procedure>

<!-- taroth 2012-01-09: switching back to *default* options is not possible with
Hawk, the Revert button will switch back to the former config as long as you
haven't applied the changes yet
-->
 </sect1>
 <sect1 id="sec.ha.config.hawk.rsc">
  <title>Configuring Cluster Resources</title>

<!--fate#310188, fate#310191-->

  <para>
   As a cluster administrator, you need to create cluster resources for
   every resource or application you run on servers in your cluster. Cluster
   resources can include Web sites, mail servers, databases, file systems,
   virtual machines, and any other server-based applications or services you
   want to make available to users at all times.
  </para>

  <para>
   For an overview of the resource types you can create, refer to
   <xref linkend="sec.ha.config.basics.resources.types"/>. Apart from
   the basic specification of a resource (ID, class, provider, and type),
   you can add or modify the following parameters during or after creation
   of a resource:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     <literal>Instance attributes (parameters)</literal> determine which
     instance of a service the resource controls. For more information,
     refer to <xref linkend="sec.ha.config.basics.inst.attr" />.
    </para>
    <para>
     When creating a resource, &hawk; automatically shows any required
     parameters. Edit them to get a valid resource configuration.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>Meta attributes</literal> tell the CRM how to treat a specific
     resource. For more information, refer to
     <xref linkend="sec.ha.config.basics.meta.attr"/>.
    </para>
    <para>
     When creating a resource, &hawk; automatically lists the important meta
     attributes for that resource (for example, the
     <literal>target-role</literal> attribute that defines the initial state
     of a resource. By default, it is set to <literal>Stopped</literal>, so
     the resource will not start immediately).
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>Operations</literal> are needed for resource monitoring. For
     more information, refer to
     <xref linkend="sec.ha.config.basics.operations"/>.
    </para>
    <para>
     When creating a resource, &hawk; displays the most important resource
     operations (<literal>monitor</literal>, <literal>start</literal>, and
     <literal>stop</literal>).
    </para>
   </listitem>
  </itemizedlist>

<?dbfo-need height="20em"?>

  <sect2 id="sec.ha.config.hawk.wizard">
   <title>Configuring Resources with the Setup Wizard</title>
<!--fate#310190-->
   <para>
    The &hasi; comes with a predefined set of resources for some frequently
    used cluster scenarios, for example, setting up a highly available Web
    server. Find the predefined sets in the
    <systemitem class="resource">hawk-templates</systemitem> package. You
    can also define your own wizard templates. For detailed information,
    refer to
    <ulink url="https://github.com/ClusterLabs/hawk/blob/master/doc/wizard.txt"/>.
<!--taroth 2013-05-24: old URL no longer valid: 
     http://hg.clusterlabs.org/pacemaker/hawk/file/tip/doc/wizard.txt-->
    &hawk; provides a wizard that guides you through all configuration
    steps.
   </para>
   <procedure id="pro.ha.config.hawk.wizard">
    <title>Using the Setup Wizard</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Setup Wizard</guimenu>.
      The <guimenu>Cluster Setup Wizard</guimenu> shows a list of available
      resource sets. If you click an entry, &hawk; displays a short help
      text about the resource set.
     </para>
    </step>
    <step>
     <para>
      Select the resource set you want to configure and click
      <guimenu>Next</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Follow the instructions on the screen. If you need information about
      an option, click it to display a short help text in &hawk;.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Setup Wizard</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-wizard.png" width="80%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-wizard.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.primitives">
   <title>Creating Simple Cluster Resources</title>
   <para>
    To create the most basic type of a resource, proceed as follows:
   </para>
   <procedure id="pro.ha.config.hawk.primitives">
    <title>Adding Primitive Resources</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources. It lists any resources that are already defined.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Specify the resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step id="step.ha.config.hawk.primitives.start">
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class you want to use for the resource: <guimenu>lsb</guimenu>,
        <guimenu>ocf</guimenu>, <guimenu>service</guimenu>, or
        <guimenu>stonith</guimenu>. For more information, see
        <xref
         linkend="sec.ha.config.basics.raclasses"/>.
       </para>
      </step>
      <step>
       <para>
        If you selected <guimenu>ocf</guimenu> as class, specify the
        <guimenu>Provider</guimenu> of your OCF resource agent. The OCF
        specification allows multiple vendors to supply the same resource
        agent.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the resource agent you
        want to use (for example, <guimenu>IPaddr</guimenu> or
        <guimenu>Filesystem</guimenu>). A short description for this
        resource agent is displayed.
       </para>
       <para>
        The selection you get in the <guimenu>Type</guimenu> list depends on
        the <guimenu>Class</guimenu> (and for OCF resources also on the
        <guimenu>Provider</guimenu>) you have chosen.
       </para>
      </step>
     </substeps>
    </step>
    <step id="step.ha.config.hawk.parameters">
     <para>
      &hawk; automatically shows any required parameters for the resource
      plus an empty drop-down list that you can use to specify an additional
      parameter.
     </para>
     <para>
      To define <guimenu>Parameters</guimenu> (instance attributes) for the
      resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter values for each required parameter. A short help text is
        displayed as soon as you click the input field next to a parameter.
       </para>
      </step>
      <step>
       <para>
        To completely remove a parameter, click the minus icon next to the
        parameter.
       </para>
      </step>
      <step>
       <para>
        To add another parameter, click the empty drop-down list, select a
        parameter and enter a value for it.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      &hawk; automatically shows the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk; will add the proposed operations
      and their default values as soon as you confirm your changes.
     </para>
     <para>
      For details on how to modify, add or remove operations, refer to
      <xref linkend="pro.ha.config.hawk.operations"/>.
     </para>
    </step>
    <step id="step.ha.config.hawk.meta-attr">
     <para>
      &hawk; automatically lists the most important meta attributes for the
      resource, for example <literal>target-role</literal>.
     </para>
     <para>
      To modify or add <guimenu>Meta Attributes</guimenu>:
     </para>
     <substeps>
      <step>
       <para>
        To set a (different) value for an attribute, select one from the
        drop-down list next to the attribute or edit the value in the input
        field.
       </para>
      </step>
      <step>
       <para>
        To completely remove a meta attribute, click the minus icon next to
        it.
       </para>
      </step>
      <step>
       <para>
        To add another meta attribute, click the empty drop-down list and
        select an attribute. The default value for the attribute is
        displayed. If needed, change it as described above.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Click <guimenu>Create Resource</guimenu> to finish the configuration.
      A message at the top of the screen shows if the resource was
      successfully created or not.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Primitive Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-primitive-basic.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-primitive-basic.png" width="70%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
<!--tserong 2011-11-08:** missing functionality: one created, you can go back and 
   edit resource params, but can't rename them or change their class:provider:type (will 
   be added in future) ** taroth 2013-03-21: still not possible-->
  </sect2>

  <sect2 id="sec.ha.config.hawk.stonith">
   <title>Creating &stonith; Resources</title>
   <important>
    <title>No Support Without &stonith;</title>
    <para>
     A cluster without &stonith; is not supported.
    </para>
   </important>
   <para>
    By default, the global cluster option <literal>stonith-enabled</literal>
    is set to <literal>true</literal>: If no &stonith; resources have been
    defined, the cluster will refuse to start any resources. Configure one
    or more &stonith; resources to complete the &stonith; setup. While they
    are configured similar to other resources, the behavior of &stonith;
    resources is different in some respects. For details refer to
    <xref linkend="sec.ha.fencing.config"/>.
   </para>
   <procedure id="pro.ha.config.hawk.stonith">
    <title>Adding a &stonith; Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Primitive</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Specify the resource:
     </para>
     <substeps>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Class</guimenu> list, select the resource agent
        class <guimenu>stonith</guimenu>.
       </para>
      </step>
      <step>
       <para>
        From the <guimenu>Type</guimenu> list, select the &stonith; plug-in
        for controlling your &stonith; device. A short description for this
        plug-in is displayed.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      &hawk; automatically shows the required <guimenu>Parameters</guimenu>
      for the resource. Enter values for each parameter.
     </para>
    </step>
    <step>
     <para>
      &hawk; displays the most important resource
      <guimenu>Operations</guimenu> and proposes default values. If you do
      not modify any settings here, &hawk; will add the proposed operations
      and their default values as soon as you confirm.
     </para>
    </step>
    <step>
     <para>
      Adopt the default <guimenu>Meta Attributes</guimenu> settings if there
      is no reason to change them.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes to create the &stonith; resource.
     </para>
    </step>
   </procedure>
   <para>
    To complete your fencing configuration, add constraints, use clones or
    both. For more details, refer to <xref linkend="cha.ha.fencing"/>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.templates">
   <title>Using Resource Templates</title>
   <para>
    If you want to create lots of resources with similar configurations,
    defining a resource template is the easiest way. Once defined, it can be
    referenced in primitives or in certain types of constraints. For
    detailed information about function and use of resource templates, refer
    to <xref linkend="sec.ha.config.basics.constraints.templates"/>.
   </para>
   <procedure id="pro.ha.config.hawk.templates.create">
    <title>Creating Resource Templates</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources plus a <guimenu>Template</guimenu> category.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Template</guimenu> category and click the plus
      icon.
     </para>
    </step>
    <step>
     <para>
      Enter a <guimenu>Template ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Specify the resource template as you would specify a primitive. Follow
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      starting with
      <xref linkend="step.ha.config.hawk.primitives.start" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Resource</guimenu> to finish the configuration.
      A message at the top of the screen shows if the resource template was
      successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Resource Template</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-rsc-template.png" width="100%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-rsc-template.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <procedure id="pro.ha.config.hawk.templates.use">
    <title>Referencing Resource Templates</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      To reference the newly created resource template in a primitive,
      follow these steps:
     </para>
     <substeps>
      <step>
       <para>
        In the left navigation bar, select <guimenu>Resources</guimenu>. The
        <guimenu>Resources</guimenu> screen shows categories for all types
        of resources. It lists all defined resources.
       </para>
      </step>
      <step>
       <para>
        Select the <guimenu>Primitive</guimenu> category and click the plus
        icon.
       </para>
      </step>
      <step>
       <para>
        Enter a unique <guimenu>Resource ID</guimenu>.
       </para>
      </step>
      <step>
       <para>
        Activate <guimenu>Use Template</guimenu> and, from the drop-down
        list, select the template to reference.
       </para>
      </step>
      <step>
       <para>
        If needed, specify further <guimenu>Parameters</guimenu>,
        <guimenu>Operations</guimenu>, or <guimenu>Meta Attributes</guimenu>
        as described in <xref linkend="pro.ha.config.hawk.primitives"/>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To reference the newly created resource template in colocational or
      order constraints, proceed as described in
      <xref linkend="pro.ha.config.hawk.constraints.collocation.order"/>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.constraints">
   <title>Configuring Resource Constraints</title>
<!--fate#310189-->
   <para>
    After you have configured all resources, specify how the cluster should
    handle them correctly. Resource constraints let you specify on which
    cluster nodes resources can run, in which order resources will be
    loaded, and what other resources a specific resource depends on.
   </para>
   <para>
    For an overview of available types of constraints, refer to
    <xref linkend="sec.ha.config.basics.constraints.types"/>. When
    defining constraints, you also need to specify scores. For more
    information on scores and their implications in the cluster, see
    <xref linkend="sec.ha.config.basics.constraints.scores"/>.
   </para>
   <para>
    Learn how to create the different types of constraints in the following
    procedures.
   </para>
<!-- tserong 2011-11-08: ** missing functionality: in future I want to autogenerate constraint 
   IDs.  They're mostly uninteresting to humans anyway **-->
<?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.constraints.location">
    <title>Adding or Modifying Location Constraints</title>
    <para>
     For location constraints, specify a constraint ID, resource, score and
     node:
    </para>
<!--taroth 2011-11-14: todo: find out which constraints can also be defined
     via rules (Show Rule Editor) and explain how to do so-->
    <step id="step.ha.config.hawk.constraints.start">
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints. It lists all defined constraints.
     </para>
    </step>
    <step id="step.ha.config.hawk.constraints.stop">
     <para>
      To add a new <guimenu>Location</guimenu> constraint, click the plus
      icon in the respective category.
     </para>
     <para>
      To modify an existing constraint, click the wrench icon next to the
      constraint and select <guimenu>Edit Constraint</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Constraint ID</guimenu>. When modifying
      existing constraints, the ID is already defined.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Resource</guimenu> for which to define the
      constraint. The list shows the IDs of all resources that have been
      configured for the cluster.
     </para>
    </step>
    <step>
     <para>
      Set the <guimenu>Score</guimenu> for the constraint. Positive values
      indicate the resource can run on the <guimenu>Node</guimenu> you
      specify in the next step. Negative values mean it should not run on
      that node. Setting the score to <literal>INFINITY</literal> forces the
      resource to run on the node. Setting it to
      <literal>-INFINITY</literal> means the resources must not run on the
      node.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Node</guimenu> for the constraint.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Constraint</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      constraint was successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Location Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-loc-constraint.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <procedure id="pro.ha.config.hawk.constraints.collocation.order">
    <title>Adding or Modifying Colocational or Order Constraints</title>
    <para>
     For both types of constraints specify a constraint ID and a score, then
     add resources to a dependency chain:
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints and lists all defined constraints.
     </para>
    </step>
    <step>
     <para>
      To add a new <guimenu>Colocation</guimenu> or <guimenu>Order</guimenu>
      constraint, click the plus icon in the respective category.
     </para>
     <para>
      To modify an existing constraint, click the wrench icon next to the
      constraint and select <guimenu>Edit Constraint</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Constraint ID</guimenu>. When modifying
      existing constraints, the ID is already defined.
     </para>
    </step>
    <step>
     <para>
      Define a <guimenu>Score</guimenu>.
     </para>
     <para>
      For colocation constraints, the score determines the location
      relationship between the resources. Positive values indicate the
      resources should run on the same node. Negative values indicate the
      resources should not run on the same node. Setting the score to
      <literal>INFINITY</literal> forces the resources to run on the same
      node. Setting it to <literal>-INFINITY</literal> means the resources
      must not run on the same node. The score will be combined with other
      factors to decide where to put the resource.
     </para>
     <para>
      For order constraints, the constraint is mandatory if the score is
      greater than zero, otherwise it is only a suggestion. The default
      value is <literal>INFINITY</literal>.
     </para>
    </step>
    <step>
     <para>
      For order constraints, you can usually keep the option
      <guimenu>Symmetrical</guimenu> enabled. This specifies that resources
      are stopped in reverse order.
     </para>
    </step>
    <step>
     <para>
      To define the resources for the constraint, follow these steps:
     </para>
     <substeps>
      <step>
       <para>
        Select a resource from the list <guimenu>Add resource to
        constraint</guimenu>. The list shows the IDs of all resources and
        all resource templates configured for the cluster.
       </para>
      </step>
      <step>
       <para>
        To add the selected resource, click the plus icon next to the list.
        A new list appears beneath. Select the next resource from the list.
        As both colocation and order constraints define a dependency between
        resources, you need at least two resources.
       </para>
      </step>
      <step>
       <para>
        Select one of the remaining resources from the list <guimenu>Add
        resource to constraint</guimenu>. Click the plus icon to add the
        resource.
       </para>
       <para>
        Now you have two resources in a dependency chain.
       </para>
       <para>
        If you have defined an order constraint, the topmost resource will
        start first, then the second etc. Usually the resources will be
        stopped in reverse order.
       </para>
       <para>
        However, if you have defined a colocation constraint, the arrow
        icons between the resources reflect their dependency, but
        <emphasis>not</emphasis> their start order. As the topmost resource
        depends on the next resource and so on, the cluster will first
        decide where to put the last resource, then place the depending ones
        based on that decision. If the constraint cannot be satisﬁed, the
        cluster may decide not to allow the resource to run at all.
        <remark>taroth 2011-11-16: DEVs, which ones: both? or only the
         second one?</remark>
       </para>
      </step>
      <step>
       <para>
        Add as many resources as needed for your colocation or order
        constraint.
       </para>
      </step>
      <step>
       <para>
        If you want to swap the order of two resources, click the double
        arrow at the right hand side of the resources to swap the resources
        in the dependency chain.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      If needed, specify further parameters for each resource, like the role
      (<literal>Master</literal>, <literal>Slave</literal>,
      <literal>Started</literal>, or <literal>Stopped</literal>).
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Constraint</guimenu> to finish the
      configuration. A message at the top of the screen shows if the
      constraint was successfully created.
     </para>
    </step>
   </procedure>
   <figure pgwide="0">
    <title>&hawk;&mdash;Colocation Constraint</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-colloc-constraint.png" width="90%" format="PNG" />
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-colloc-constraint.png" width="80%" format="PNG" />
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    As an alternative format for defining colocation or ordering
    constraints, you can use resource sets. They have the same ordering
    semantics as groups.
   </para>
   <procedure id="pro.ha.config.hawk.constraints.sets">
    <title>Using Resource Sets for Colocation or Order Constraints</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Define colocation or order constraints as described in
      <xref linkend="pro.ha.config.hawk.constraints.collocation.order"/>.
     </para>
    </step>
    <step>
     <para>
      When you have added the resources to the dependency chain, you can put
      them into a resource set by clicking the chain icon at the right hand
      side. A resource set is visualized by a frame around the resources
      belonging to a set.
     </para>
    </step>
    <step>
     <para>
      You can also add multiple resources to a resource set or create
      multiple resource sets.
     </para>
    </step>
    <step>
     <para>
      To extract a resource from a resource set, click the scissors icon
      above the respective resource.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-constraint-set.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      The resource will be removed from the set and put back into the
      dependency chain at its original place.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes to finish the constraint configuration.
     </para>
    </step>
   </procedure>
   <para>
    For more information on configuring constraints and detailed background
    information about the basic concepts of ordering and colocation, refer
    to the documentation available at
    <xref linkend="vle.ha.config.basics.more.clusterlabs.doc"/>:
   </para>
   <itemizedlist>
    <listitem>
     <para>
      <citetitle>Pacemaker Explained</citetitle>, chapter
      <citetitle>Resource Constraints</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Colocation Explained</citetitle>
     </para>
    </listitem>
    <listitem>
     <para>
      <citetitle>Ordering Explained</citetitle>
     </para>
    </listitem>
   </itemizedlist>
   <procedure id="pro.ha.config.hawk.constraints.remove">
    <title>Removing Constraints</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Constraints</guimenu>. The
      <guimenu>Constraints</guimenu> screen shows categories for all types
      of constraints and lists all defined constraints.
     </para>
    </step>
    <step>
     <para>
      Click the wrench icon next to a constraint and select <guimenu>Remove
      Constraint</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.failover">
   <title>Specifying Resource Failover Nodes</title>
   <para>
    A resource will be automatically restarted if it fails. If that cannot
    be achieved on the current node, or it fails N times on the current
    node, it will try to fail over to another node. You can define a number
    of failures for resources (a <literal>migration-threshold</literal>),
    after which they will migrate to a new node. If you have more than two
    nodes in your cluster, the node to which a particular resource fails
    over is chosen by the &ha; software.
   </para>
   <para>
    You can specify a specific node to which a resource will fail over by
    proceeding as follows:
   </para>
   <procedure id="pro.ha.config.hawk.failover">
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Configure a location constraint for the resource as described in
      <xref linkend="pro.ha.config.hawk.constraints.location"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>migration-threshold</literal> meta attribute to the
      resource as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>
      and enter a <guimenu>Value</guimenu> for the migration-threshold. The
      value should be positive and less than INFINITY.
     </para>
<!-- <informalfigure>
       <mediaobject>
       <imageobject role="fo">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="PNG"/>
       </imageobject>
       <imageobject role="html">
       <imagedata fileref="crmgui-primitive-migr-threshold.png" width="45%"
       format="PNG"/>
       </imageobject>
       </mediaobject>
       </informalfigure>-->
    </step>
    <step>
     <para>
      If you want to automatically expire the failcount for a resource, add
      the <literal>failure-timeout</literal> meta attribute to the resource
      as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>
      and enter a <guimenu>Value</guimenu> for the failure-timeout.
     </para>
    </step>
    <step>
     <para>
      If you want to specify additional failover nodes with preferences for
      a resource, create additional location constraints.
     </para>
    </step>
   </procedure>
   <para>
    The process flow regarding migration thresholds and failcounts is
    demonstrated in <xref linkend="ex.ha.config.basics.failover" />.
   </para>
   <para>
    Instead of letting the failcount for a resource expire automatically,
    you can also clean up failcounts for a resource manually at any time.
    Refer to <xref linkend="sec.ha.config.hawk.cleanup"/> for details.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.failback">
   <title>Specifying Resource Failback Nodes (Resource Stickiness)</title>
   <para>
    A resource may fail back to its original node when that node is back
    online and in the cluster. To prevent this or to specify a different
    node for the resource to fail back to, change the stickiness value of
    the resource. You can either specify the resource stickiness when
    creating it or afterwards.
   </para>
   <para>
    For the implications of different resource stickiness values, refer to
    <xref linkend="sec.ha.config.basics.failback"/>.
   </para>
<?dbfo-need height="20em"?>
   <procedure id="pro.ha.config.hawk.stickiness">
    <title>Specifying Resource Stickiness</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Add the <literal>resource-stickiness</literal> meta attribute to the
      resource as described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label"/>.
     </para>
<!--<informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="crmgui-primitive-stickiness.png" width="55%"
         format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>-->
    </step>
    <step>
     <para>
      Specify a value between <literal>-INFINITY</literal> and
      <literal>INFINITY</literal> for the resource-stickiness.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.utilization">
   <title>Configuring Placement of Resources Based on Load Impact</title>
   <para>
    Not all resources are equal. Some, such as &xen; guests, require that
    the node hosting them meets their capacity requirements. If resources
    are placed so that their combined needs exceed the provided capacity,
    the performance of the resources diminishes or they fail.
   </para>
   <para>
    To take this into account, the &hasi; allows you to specify the
    following parameters:
   </para>
   <orderedlist>
    <listitem>
     <para>
      The capacity a certain node <emphasis>provides</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      The capacity a certain resource <emphasis>requires</emphasis>.
     </para>
    </listitem>
    <listitem>
     <para>
      An overall strategy for placement of resources.
     </para>
    </listitem>
   </orderedlist>
   <para>
    Utilization attributes are used to configure both the resource's
    requirements and the capacity a node provides. The &hasi; now also
    provides means to detect and configure both node capacity and resource
    requirements automatically. For more details and a configuration
    example, refer to
    <xref linkend="sec.ha.config.basics.utilization"/>.
   </para>
<!--fate##310135-->
   <para>
    To display a node's capacity values (defined via utilization attributes)
    as well as the capacity currently consumed by resources running on the
    node, switch to the <guimenu>Cluster Status</guimenu> screen in &hawk;
    and select the node you are interested in. Click the wrench icon next to
    the node and select <guimenu>Show Details</guimenu>.
   </para>
   <figure>
    <title>&hawk;&mdash;Viewing a Node's Capacity Values</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-node-utilization.png" width="60%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-node-utilization.png" width="45%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
<!--taroth 2013-03-21: setting utilization attributes for nodes or resources is
    still not possible-->
   <para>
    After you have configured the capacities your nodes provide and the
    capacities your resources require, you need to set the placement
    strategy in the global cluster options, otherwise the capacity
    configurations have no effect. Several strategies are available to
    schedule the load: for example, you can concentrate it on as few nodes
    as possible, or balance it evenly over all available nodes. For more
    information, refer to
    <xref linkend="sec.ha.config.basics.utilization"/>.
   </para>
   <procedure id="pro.ha.config.hawk.placement">
    <title>Setting the Placement Strategy</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster
      Properties</guimenu> to view the global cluster options and their
      current values.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Add new property</guimenu> drop-down list, choose
      <literal>placement-strategy</literal>.
     </para>
    </step>
    <step>
     <para>
      Depending on your requirements, set <guimenu>Placement
      Strategy</guimenu> to the appropriate value.
     </para>
    </step>
    <step>
     <para>
      Click the plus icon to add the new cluster property including its
      value.
     </para>
    </step>
    <step>
     <para>
      Confirm your changes.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.monitor">
   <title>Configuring Resource Monitoring</title>
   <para>
    The &hasi; can not only detect a node failure, but also when an
    individual resource on a node has failed. If you want to ensure that a
    resource is running, configure resource monitoring for it. For resource
    monitoring, specify a timeout and/or start delay value, and an interval.
    The interval tells the CRM how often it should check the resource
    status. You can also set particular parameters, such as
    <literal>Timeout</literal> for <literal>start</literal> or
    <literal>stop</literal> operations.
   </para>
   <procedure id="pro.ha.config.hawk.operations">
    <title>Adding or Modifying Monitor Operations</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the resource to modify, click the wrench icon next to it and
      select <guimenu>Edit Resource</guimenu>. The resource definition is
      displayed. &hawk; automatically shows the most important resource
      operations (<literal>monitor</literal>, <literal>start</literal>,
      <literal>stop</literal>) and proposes default values.
     </para>
    </step>
    <step>
     <para>
      To change the values for an operation:
     </para>
     <substeps>
      <step>
       <para>
        Click the pen icon next to the operation.
       </para>
      </step>
      <step>
       <para>
        In the dialog that opens, specify the following values:
       </para>
       <itemizedlist>
        <listitem>
         <para>
          Enter a <literal>timeout</literal> value in seconds. After the
          specified timeout period, the operation will be treated as
          <literal>failed</literal>. The PE will decide what to do or
          execute what you specified in the <guimenu>On Fail</guimenu> field
          of the monitor operation.
         </para>
        </listitem>
        <listitem>
         <para>
          For monitoring operations, define the monitoring
          <literal>interval</literal> in seconds.
         </para>
        </listitem>
       </itemizedlist>
       <para>
        If needed, use the empty drop-down list at the bottom of the
        <guimenu>monitor</guimenu> dialog to add more parameters, like
        <guimenu>On Fail</guimenu> (what to do if this action fails?) or
        <guimenu>Requires</guimenu> (what conditions need to be fulfilled
        before this action occurs?).
       </para>
       <informalfigure>
        <mediaobject>
         <imageobject role="fo">
          <imagedata fileref="hawk-monitor-op.png" width="70%" format="PNG"/>
         </imageobject>
         <imageobject role="html">
          <imagedata fileref="hawk-monitor-op.png" width="60%" format="PNG"/>
         </imageobject>
        </mediaobject>
       </informalfigure>
      </step>
      <step>
       <para>
        Confirm your changes to close the dialog and to return to the
        <guimenu>Edit Resource</guimenu> screen.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To completely remove an operation, click the minus icon next to it.
     </para>
    </step>
    <step>
     <para>
      To add another operation, click the empty drop-down list and select an
      operation. A default value for the operation is displayed. If needed,
      change it by clicking the pen icon.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Apply Changes</guimenu> to finish the configuration. A
      message at the top of the screen shows if the resource was
      successfully updated or not.
     </para>
    </step>
   </procedure>
   <para>
    For the processes which take place if the resource monitor detects a
    failure, refer to
    <xref linkend="sec.ha.config.basics.monitoring"/>.
   </para>
<!--fate#314391 (SP3)-->
   <para>
    To view resource failures, switch to the <guimenu>Cluster
    Status</guimenu> screen in &hawk; and select the resource you are
    interested in. Click the wrench icon next to the resource and select
    <guimenu>Show Details</guimenu>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.group">
   <title>Configuring a Cluster Resource Group</title>
   <para>
    Some cluster resources depend on other components or resources and
    require that each component or resource starts in a specific order and
    runs on the same server. To simplify this configuration we support the
    concept of groups.
   </para>
   <para>
    For an example of a resource group and more information about groups and
    their properties, refer to
    <xref linkend="sec.ha.config.basics.resources.advanced.groups"/>.
   </para>
   <note>
    <title>Empty Groups</title>
    <para>
     Groups must contain at least one resource, otherwise the configuration
     is not valid. In &hawk;, primitives cannot be created or modified while
     creating a group. Before adding a group, create primitives and
     configure them as desired. For details, refer to
     <xref linkend="pro.ha.config.hawk.primitives"/>.
    </para>
   </note>
<!-- tserong 2011-11-08:** missing functionality: once created, you can't rename a group or 
    change its children **-->
   <procedure id="pro.ha.config.hawk.group">
    <title>Adding a Resource Group</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Group</guimenu> category and click the plus icon.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Group ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      To define the group members, select one or multiple entries in the
      list of <guimenu>Available Primitives</guimenu> and click the &lt;
      icon to add them to the <guimenu>Group Children</guimenu> list. Any
      new group members are added to the bottom of the list. To define the
      order of the group members, you currently need to add and remove them
      in the order you desire.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu> as
      described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select: lable title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Group</guimenu> to finish the configuration. A
      message at the top of the screen shows if the group was successfully
      created.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Resource Group</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-rsc-group.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-rsc-group.png" width="70%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>

  <sect2 id="sec.ha.confighawk.clone">
   <title>Configuring a Clone Resource</title>
   <para>
    If you want certain resources to run simultaneously on multiple nodes in
    your cluster, configure these resources as a clones. For example,
    cloning makes sense for resources like &stonith; and cluster file
    systems like OCFS2. You can clone any resource provided. Cloning is
    supported by the resource’s Resource Agent. Clone resources may be
    configured differently depending on which nodes they are running on.
   </para>
   <para>
    For an overview of the available types of resource clones, refer to
    <xref linkend="sec.ha.config.basics.resources.advanced.clones"/>.
   </para>
   <note>
    <title>Sub-resources for Clones</title>
    <para>
     Clones can either contain a primitive or a group as sub-resources. In
     &hawk;, sub-resources cannot be created or modified while creating a
     clone. Before adding a clone, create sub-resources and configure them
     as desired. For details, refer to
     <xref linkend="pro.ha.config.hawk.primitives"/> or
     <xref linkend="pro.ha.config.hawk.group"/>.
    </para>
   </note>
   <procedure id="pro.ha.config.hawk.clone">
    <title>Adding or Modifying Clones</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>. The
      <guimenu>Resources</guimenu> screen shows categories for all types of
      resources and lists all defined resources.
     </para>
    </step>
    <step>
     <para>
      Select the <guimenu>Clone</guimenu> category and click the plus icon.
     </para>
    </step>
    <step>
     <para>
      Enter a unique <guimenu>Clone ID</guimenu>.
     </para>
    </step>
    <step>
     <para>
      From the <guimenu>Child Resource</guimenu> list, select the primitive
      or group to use as a sub-resource for the clone.
     </para>
    </step>
    <step>
     <para>
      If needed, modify or add <guimenu>Meta Attributes</guimenu> as
      described in
      <xref linkend="pro.ha.config.hawk.primitives" xrefstyle="select:label title nopage"/>,
      <xref linkend="step.ha.config.hawk.meta-attr" xrefstyle="select:label" />.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Create Clone</guimenu> to finish the configuration. A
      message at the top of the screen shows if the clone was successfully
      created.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;Clone Resource</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-clone.png" width="80%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-clone.png" width="70%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
  </sect2>
 </sect1>
 <sect1 id="sec.ha.config.hawk.manage">
  <title>Managing Cluster Resources</title>

  <para>
   In addition to configuring your cluster resources, &hawk; allows you to
   manage existing resources from the <guimenu>Cluster Status</guimenu>
   screen. For a general overview of the screen, its different views and the
   color code used for status information, refer to
   <xref linkend="sec.ha.config.hawk.intro.main"/>.
  </para>

<!--fate#314387 (SP3)-->

  <para>
   Basic resource operations can be executed from any cluster status view.
   Both <guimenu>Tree View</guimenu> and <guimenu>Table View</guimenu> let
   you access the individual resources directly. However, in the
   <guimenu>Summary View</guimenu> you need to click the links in the
   resources category first to display the resource details. The detailed
   view also shows any attributes set for that resource. For primitive
   resources (regular primitives, children of groups, clones, or
   master/slave resources), the following information will be shown
   additionally:
  </para>

  <itemizedlist>
   <listitem>
    <para>
     the resource's failcount
    </para>
    <para>
     the last failure timestamp (if the failcount is &gt; 0)
    </para>
   </listitem>
   <listitem>
    <para>
     operation history and timings (call id, operation, last run timestamp,
     execution time, queue time, return code and last rc change timestamp)
     <remark>taroth 2013-03-15: todo - check if the stuff in parenthesis needs to get literal tags</remark>
    </para>
   </listitem>
  </itemizedlist>

  <figure>
   <title>Viewing a Resource's Details</title>
   <mediaobject>
    <imageobject role="fo">
     <imagedata fileref="hawk-resource-details.png" width="60%"
      format="PNG"/>
    </imageobject>
    <imageobject role="html">
     <imagedata fileref="hawk-resource-details.png" width="55%" />
    </imageobject>
   </mediaobject>
  </figure>

  <sect2 id="sec.ha.config.hawk.start">
   <title>Starting Resources</title>
   <para>
    Before you start a cluster resource, make sure it is set up correctly.
    For example, if you want to use an Apache server as a cluster resource,
    set up the Apache server first and complete the Apache configuration
    before starting the respective resource in your cluster.
   </para>
   <note>
    <title>Do Not Touch Services Managed by the Cluster</title>
    <para>
     When managing a resource via the &hasi;, the same resource must not be
     started or stopped otherwise (outside of the cluster, for example
     manually or on boot or reboot). The &hasi; software is responsible for
     all service start or stop actions.
    </para>
    <para>
     However, if you want to check if the service is configured properly,
     start it manually, but make sure that it is stopped again before &ha;
     takes over.
    </para>
    <para> For interventions in resources that are currently managed by the cluster, set the
     resource to <literal>maintenance mode</literal> first as
     described in <xref linkend="pro.ha.config.hawk.maint.mode.rsc"/>. </para>
   </note>
   <para>
    When creating a resource with &hawk;, you can set its initial state with
    the <literal>target-role</literal> meta attribute. If you set its value
    to <literal>stopped</literal>, the resource does not start automatically
    after being created.
   </para>
   <procedure id="pro.ha.config.hawk.start">
    <title>Starting A New Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Start</guimenu>. To continue, confirm
      the message that appears. As soon as the resource has started, &hawk;
      changes the resource's color to green and shows on which node it is
      running.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.cleanup">
   <title>Cleaning Up Resources</title>
   <para>
    A resource will be automatically restarted if it fails, but each failure
    increases the resource's failcount.
   </para>
   <para>
    If a <literal>migration-threshold</literal> has been set for the
    resource, the node will no longer run the resource when the number of
    failures reaches the migration threshold.
   </para>
   <para>
    A resource's failcount can either be reset automatically (by setting a
    <literal>failure-timeout</literal> option for the resource) or you can
    reset it manually as described below.
   </para>
   <procedure id="pro.ha.config.hawk.clean">
    <title>Cleaning Up A Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the failed resource and select <guimenu>Clean Up</guimenu>. To
      continue, confirm the message that appears.
     </para>
<!--tserong 2011-11-25: actually, it executes "crm resource cleanup" but
     that's probably ultimately about the same as what you've listed :)-->
     <para>
      This executes the commands
      <command>crm_resource&nbsp;<option>-C</option> </command> and
      <command>crm_failcount&nbsp;<option>-D</option> </command> for the
      specified resource on the specified node.
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the man pages of
    <command>crm_resource</command> and <command>crm_failcount</command>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.remove">
   <title>Removing Cluster Resources</title>
   <para>
    If you need to remove a resource from the cluster, follow the procedure
    below to avoid configuration errors:
   </para>
<!--https://bugzilla.novell.com/show_bug.cgi?id=520718-->
   <note>
    <title>Removing Referenced Resources</title>
    <para>
     A cluster resource cannot be removed if its ID is referenced by any
     constraint. If you cannot delete a resource, check where the resource
     ID is referenced and remove the resource from the constraint first.
    </para>
   </note>
   <procedure id="pro.ha.config.hawk.rm">
    <title>Removing a Cluster Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Clean up the resource on all nodes as described in
      <xref linkend="pro.ha.config.hawk.clean"/>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Stop</guimenu>. To continue, confirm
      the message that appears.
     </para>
    </step>
    <step>
     <para>
      Remove all constraints that relate to the resource, otherwise removing
      the resource will not be possible. For details, refer to
      <xref linkend="pro.ha.config.hawk.constraints.remove"/>.
     </para>
    </step>
    <step>
     <para>
      If the resource is stopped, click the wrench icon next to it and
      select <guimenu>Delete Resource</guimenu>.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.migrate">
   <title>Migrating Cluster Resources</title>
   <para>
    As mentioned in <xref linkend="sec.ha.config.hawk.failover"/>, the
    cluster will fail over (migrate) resources automatically in case of
    software or hardware failures&mdash;according to certain parameters you
    can define (for example, migration threshold or resource stickiness).
    Apart from that, you can also manually migrate a resource to another
    node in the cluster (or decide to just move it away from the current
    node and leave the decision where to put it to the cluster).
   </para>
   <procedure id="pro.ha.config.hawk.migrate">
    <title>Manually Migrating a Resource</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Move</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the new window, select the node to which to move the resource.
     </para>
     <para>
      This creates a location constraint with an <literal>INFINITY</literal>
      score for the destination node.
     </para>
    </step>
    <step>
     <para>
      Alternatively, select to move the resource <guimenu>Away from current
      node</guimenu>.
     </para>
     <informalfigure>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-move-rsc.png" width="70%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-move-rsc.png" width="60%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </informalfigure>
     <para>
      This creates a location constraint with a <literal>-INFINITY</literal>
      score for the current node.
     </para>
<!--taroth 2011-11-15: the GUI also offers temporary migration (setting a
      duration) or forced migration (if the resource's stickiness and
      constraint scores total more than <literal>INFINITY</literal> on the
      current node) - tserong 2011-11-25: Hawk does not offer temporary 
      migration -->
    </step>
<!-- <step>
     <para>
      If you want to migrate the resource only temporarily, activate
      <guimenu>Duration</guimenu> and enter the time frame for which the
      resource should migrate to the new node. After the expiration of the
      duration, the resource <emphasis>can</emphasis> move back to its
      original location or it may stay where it is (depending on resource
      stickiness).
     </para>
    </step>
    <step>
     <para>
      In cases where the resource cannot be migrated (if the resource's
      stickiness and constraint scores total more than
      <literal>INFINITY</literal> on the current node), activate the
      <guimenu>Force</guimenu> option. This forces the resource to move by
      creating a rule for the current location and a score of
      <literal>-INFINITY</literal>.
     </para>
     <note>
      <para>
       This prevents the resource from running on this node until the
       constraint is removed with <guimenu>Clear Migrate
        Constraints</guimenu> or the duration expires.
      </para>
     </note>
    </step>-->
    <step>
     <para>
      Click <guimenu>OK</guimenu> to confirm the migration.
     </para>
    </step>
   </procedure>
   <para>
    To allow a resource to move back again, proceed as follows:
   </para>
   <procedure id="pro.ha.config.hawk.migrate.back">
    <title>Clearing a Migration Constraint</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual resource views, click the wrench icon next to
      the resource and select <guimenu>Drop Relocation Rule</guimenu>. To
      continue, confirm the message that appears.
     </para>
     <para>
      This uses the <command>crm_resource&nbsp;<option>-U</option>
      </command> command. The resource <emphasis>can</emphasis> move back to
      its original location or it may stay where it is (depending on
      resource stickiness).
     </para>
    </step>
   </procedure>
   <para>
    For more information, see the <command>crm_resource</command> man page
    or <citetitle>Pacemaker Explained</citetitle>, available from
    <xref linkend="vle.ha.config.basics.more.clusterlabs.doc" xrefstyle="select: title nopage"/>.
    Refer to section <citetitle>Resource Migration</citetitle>.
   </para>
  </sect2>

  <sect2 id="sec.ha.config.hawk.maint.mode">
   <title>Using Maintenance Mode</title>
   &maint-mode-basics;
    <para>With regards to that, &hasi; provides <literal>maintenance</literal> options on
    several levels: </para>
   <itemizedlist>
    <listitem>
     <para><xref linkend="pro.ha.config.hawk.maint.mode.rsc" xrefstyle="select:title"/></para>
    </listitem>
    <listitem>
     <para><xref linkend="pro.ha.config.hawk.maint.mode.nodes" xrefstyle="select:title"/></para>
    </listitem>
    <listitem>
     <para><xref linkend="pro.ha.config.hawk.maint.mode.cluster" xrefstyle="select:title"/></para>
    </listitem>
   </itemizedlist>
   
   &warning-maint-mode;
   
   <para>For more details on what happens to the resources and the cluster while being in
    maintenance mode, see <xref linkend="sec.ha.config.basics.maint.mode"/>.</para>
  
   <procedure id="pro.ha.config.hawk.maint.mode.rsc">
    <title>Applying Maintenance Mode to Resources</title>
   
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Resources</guimenu>.
      Select the resource you want to put in maintenance mode or unmanaged mode, click the
      wrench icon next to the resource and select <guimenu>Edit Resource</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Open the <guimenu>Meta Attributes</guimenu> category.
     </para>
    </step>
      <step>
       <para> From the empty drop-down list, select the <guimenu>maintenance</guimenu> attribute and
        click the plus icon to add it. </para>
      </step>
      <step>
       <para> Activate the checkbox next to <literal>maintenance</literal> to set the maintenance
        attribute to <literal>yes</literal>.
       </para>
      </step>
      <step><para>Confirm your changes.</para></step>
      <step>
       <para> After you have finished the maintenance task for that resource, deactivate the
        checkbox next to the <literal>maintenance</literal> attribute for that resource. </para>
       <para> From this point on, the resource will be managed by the &hasi; software again.
       </para>
      </step>
   </procedure>
 
   <!--taroth 2013-03-27: fate#313381 (SP3)-->
   <procedure id="pro.ha.config.hawk.maint.mode.nodes">
    <title>Applying Maintenance Mode to Nodes</title>
    <para>
     Sometimes it is necessary to put single nodes into maintenance mode. If
     your cluster consists of more than 3 nodes, you can easily set one node
     to maintenance mode, while the other nodes continue their normal
     operation.
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref
       linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In one of the individual nodes' views, click the wrench icon next to
      the node and select <guimenu>Maintenance</guimenu>.
     </para>
     <para>
      This will add the following instance attribute to the node:
      <literal>maintenance="true"</literal>. The resources previously
      running on the maintenance-mode node will become
      <literal>unmanaged</literal>. No new resources will be allocated to
      the node until it leaves the maintenance mode.
     </para>
    </step>
    <step>
     <para>
      To deactivate the maintenance mode, click the wrench icon next to the
      node and select <guimenu>Ready</guimenu>.
     </para>
    </step>
   </procedure>
   
   <procedure id="pro.ha.config.hawk.maint.mode.cluster">
    <title>Applying Maintenance Mode to the Cluster</title>
    <para>For setting or unsetting the maintenance mode for the whole cluster, proceed as follows: </para>
    <step>
     <para> Start a Web browser and log in to the cluster as described in <xref
      linkend="sec.ha.config.hawk.intro.connect"/>. </para>
    </step>
    <step>
     <para> In the left navigation bar, select <guimenu>Cluster Configuration</guimenu>. </para>
    </step>
    <step>
     <para>In the <guimenu>CRM Configuration group, </guimenu>, select the
      <guimenu>maintenance-mode</guimenu> attribute from the empty drop-down box and click the plus
      icon to add it. </para>
    </step>
    <step>
     <para> To set <literal>maintenance-mode=true</literal>, active the checkbox next to
      <literal>maintenance-mode</literal> and confirm your changes. <remark>taroth 2014-07-28: todo
       - check with devs what happens exactly</remark>
     </para>
    </step>
    <step>
     <para> After you have finished the maintenance task for the whole cluster, deactivate the
      checkbox next to the <literal>maintenance-mode</literal> attribute. </para>
     <para> From this point on, &hasi; will take over cluster management again. </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.history">
   <title>Viewing the Cluster History</title>
<!--fate#303620-->
   <para>
    &hawk; provides the following possibilities to view past events on the
    cluster (on different levels and in varying detail).
   </para>
   <procedure id="pro.ha.config.hawk.recent">
    <title>Viewing Recent Events of Nodes or Resources</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref
       linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>Cluster Status</guimenu>.
     </para>
    </step>
    <step>
     <para>
      In the <guimenu>Tree View</guimenu> or <guimenu>Table View</guimenu>,
      click the wrench icon next to the resource or node you are interested
      in and select <guimenu>View Recent Events</guimenu>.
     </para>
     <para>
      The dialog that opens shows the events of the last hour.
     </para>
    </step>
   </procedure>
   <procedure id="pro.ha.config.hawk.history.explorer">
    <title>Viewing Transitions with the History Explorer</title>
    <para>
     The <guimenu>History Explorer</guimenu> provides transition information
     for a time frame that you can define. It also lists its previous runs
     and allows you to <guimenu>Delete</guimenu> reports that you no longer
     need.
<!--fate#314394 (SP3)-->
    </para>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref
       linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      In the left navigation bar, select <guimenu>History
      Explorer</guimenu>.
     </para>
    </step>
    <step>
     <para>
      By default, the period to explore is set to the last 24 hours. To
      modify this, set another <guimenu>Start Time</guimenu> and
      <guimenu>End Time</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Display</guimenu> to start collecting transition data.
     </para>
    </step>
   </procedure>
   <figure>
    <title>&hawk;&mdash;History Report</title>
    <mediaobject>
     <imageobject role="fo">
      <imagedata fileref="hawk-history-report.png" width="100%" format="PNG"/>
     </imageobject>
     <imageobject role="html">
      <imagedata fileref="hawk-history-report.png" width="90%" format="PNG"/>
     </imageobject>
    </mediaobject>
   </figure>
   <para>
    The following information is displayed:
   </para>
   <variablelist>
    <varlistentry>
     <term><guimenu>Time</guimenu>
     </term>
     <listitem>
      <para>
       The time line of all past transitions in the cluster.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>PE Input</guimenu>/<guimenu>Node</guimenu>
     </term>
     <listitem>
      <para>
       The <filename>pe-input*</filename> file for each transition and the
       node on which it was generated. For each transition, the cluster
       saves a copy of the state which is provided to the policy engine as
       input. The path to this archive is logged. The
       <filename>pe-input*</filename> files are only generated on the
       Designated Coordinator (DC), but as the DC can change, there may be
       <filename>pe-input*</filename> files from several nodes. The files
       show what the Policy Engine (PE) <emphasis>planned</emphasis> to do.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Details</guimenu>/<guimenu>Full Log</guimenu>
     </term>
<!--fate#314395 (SP3)-->
     <listitem>
      <para>
       Opens a pop-up window with snippets of logging data that belong to that particular
       transition. Different amounts of details are available: Clicking
       <guimenu>Details</guimenu> displays the output of <command>crm
       history transition <replaceable>peinput</replaceable></command>
       (including the resource agents' log messages), whereas <guimenu>Full
       Log</guimenu> also includes details from the
       <systemitem>pengine</systemitem>, <systemitem>crmd</systemitem>, and
       <systemitem>lrmd</systemitem> and is equivalent to <command>crm
       history transition log <replaceable>peinput</replaceable></command>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Graph</guimenu>/<guimenu>XML</guimenu>
     </term>
     <listitem>
      <para>
       A graph and an XML representation of each transition. If you choose
       to show the <guimenu>Graph</guimenu>, the PE is reinvoked (using the
       <filename>pe-input*</filename> files), and generates a graphical
       visualization of the transition. Alternatively, you can view the XML
       representation of the graph.
      </para>
      <figure>
       <title>&hawk; History Report&mdash;Transition Graph</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-history-graph.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-history-graph.png" width="70%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><guimenu>Diff</guimenu>
     </term>
<!--fate#314389 (SP3)-->
     <listitem>
      <para>
       If two or more pe-inputs are listed, a <guimenu>Diff</guimenu> link
       will appear to the right of each pair of pe-inputs. Clicking it
       displays the difference of configuration and status.
      </para>
<!--taroth 2013-03-28: commenting because of bnc#807503, line numbers are no longer
       diplayed
       <figure>
       <title>&hawk; History Report&mdash;Diff</title>
       <mediaobject>
        <imageobject role="fo">
         <imagedata fileref="hawk-history-diff.png" width="80%" format="PNG"/>
        </imageobject>
        <imageobject role="html">
         <imagedata fileref="hawk-history-diff.png" width="70%" format="PNG"/>
        </imageobject>
       </mediaobject>
      </figure>-->
     </listitem>
    </varlistentry>
   </variablelist>
  </sect2>

  <sect2 id="sec.ha.config.hawk.simulator">
   <title>Exploring Potential Failure Scenarios</title>
<!--fate#310186-->
   <para>
    &hawk; provides a <guimenu>Simulator</guimenu> that allows you to
    explore failure scenarios before they happen.
<!--fate#314393 (SP3)-->
    After switching to the simulator mode, you can change the status of
    nodes, add or edit resources and constraints, change the cluster
    configuration, or execute multiple resource operations to see how the
    cluster would behave should these events occur. As long as the simulator
    mode is activated, a control dialog will be displayed in the bottom
    right hand corner of the <guimenu>Cluster Status</guimenu> screen. The
    simulator will collect the changes from all screens and will add them to
    its internal queue of events. The simulation run with the queued events
    will not be executed unless it is manually triggered in the control
    dialog. After the simulation run, you can view and analyze the details
    of what would have happened (log snippets, transition graph, and CIB
    states).
   </para>
   <procedure id="pro.ha.config.hawk.simulator">
    <title>Switching to Simulator Mode</title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref
       linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Activate the simulator mode by clicking the wrench icon in the
      top-level row (next to the username), and by selecting
      <guimenu>Simulator</guimenu>.
     </para>
     <para>
      &hawk;'s background changes color to indicate the simulator is active.
      A simulator control dialog is displayed in the bottom right hand
      corner of the <guimenu>Cluster Status</guimenu> screen. Its title
      <guimenu>Simulator (initial state)</guimenu> indicates that no
      simulator run has occurred yet.
     </para>
    </step>
    <step>
     <para>
      Fill the simulator's event queue:
     </para>
     <substeps>
      <step>
       <para>
        To simulate status change of a node: Click <guimenu>+Node</guimenu>
        in the simulator control dialog. Select the <guimenu>Node</guimenu>
        you want to manipulate and select its target
        <guimenu>State</guimenu>. Confirm your changes to add them to the
        queue of events listed in the controller dialog.
       </para>
      </step>
      <step>
       <para>
        To simulate a resource operation: Click <guimenu>+Op</guimenu> in
        the simulator control dialog. Select the <guimenu>Resource</guimenu>
        to manipulate and the <guimenu>Operation</guimenu> to simulate. If
        necessary, define an <guimenu>Interval</guimenu>. Select the
        <guimenu>Node</guimenu> on which to run the operation and the
        targeted <guimenu>Result</guimenu>. Confirm your changes to add them
        to the queue of events listed in the controller dialog.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      Repeat the previous steps for any other node status changes or
      resource operations you wish to simulate.
     </para>
     <figure>
      <title>&hawk;&mdash;Simulator with Injected Events</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-simulator-injected.png" width="90%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-simulator-injected.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      To inject other changes that you wish to simulate:
     </para>
     <substeps>
      <step>
       <para>
        Switch to one or more of the following &hawk; screens:
        <guimenu>Cluster Status</guimenu>, <guimenu>Setup Wizard</guimenu>,
        <guimenu>Cluster Configuration</guimenu>,
        <guimenu>Resources</guimenu>, or <guimenu>Constraints</guimenu>.
       </para>
       <note>
        <title>History Explorer and Simulator Mode</title>
        <para>
         Clicking the <guimenu>History Explorer</guimenu> tab will
         deactivate simulator mode.
        </para>
       </note>
      </step>
      <step>
       <para>
        Add or modify parameters on the screens as desired.
       </para>
       <para>
        The simulator will collect the changes from all screens and will add
        them to its internal queue of events.
        <remark>taroth 2013-03-27: tserong, is there some way to display also the events collected
         on the other screens in the "Injected State" queue? from a user perspective, it's somehow
         strange if the injected events reflect only part of what will happen if you hit the "run"
         button... - tserong 2013-04-15: No, there's not currently, and you're right, that's
         annoying :-/ I've made a note to do something about that (again not sure if that'll make
         this release).</remark>
       </para>
      </step>
      <step>
       <para>
        To return to the simulator control dialog, switch to the
        <guimenu>Cluster Status</guimenu> screen or click the wrench icon in
        the top-level row and click <guimenu>Simulator</guimenu> again.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      If you want to remove an event listed in <guimenu>Injected
      State</guimenu>, select the respective entry and click the minus icon
      beneath the list.
     </para>
    </step>
    <step>
     <para>
      Start the simulation run by clicking <guimenu>Run</guimenu> in the
      simulator control dialog. The <guimenu>Cluster Status</guimenu> screen
      displays the simulated events. For example, if you marked a node as
      unclean, it will now be shown offline, and all its resources will be
      stopped. The simulator control dialog changes to <guimenu>Simulator
      (final state)</guimenu>.
     </para>
     <figure>
      <title>&hawk;&mdash;Simulator in Final State</title>
      <mediaobject>
       <imageobject role="fo">
        <imagedata fileref="hawk-simulator-final.png" width="90%" format="PNG"/>
       </imageobject>
       <imageobject role="html">
        <imagedata fileref="hawk-simulator-final.png" width="70%" format="PNG"/>
       </imageobject>
      </mediaobject>
     </figure>
    </step>
    <step>
     <para>
      To view more detailed information about the simulation run:
     </para>
     <substeps>
      <step>
       <para>
        Click the <guimenu>Details</guimenu> link in the simulator dialog to
        see log snippets of what occurred.
       </para>
      </step>
      <step>
       <para>
        Click the <guimenu>Graph </guimenu> link to show the transition
        graph.
       </para>
      </step>
      <step>
       <para>
        Click <guimenu>CIB (in)</guimenu> to display the initial CIB state.
        To see what the CIB would look like after the transition, click
        <guimenu>CIB (out)</guimenu>.
       </para>
      </step>
     </substeps>
    </step>
    <step>
     <para>
      To start from scratch with a new simulation, use the
      <guimenu>Reset</guimenu> button.
     </para>
    </step>
    <step>
     <para>
      To exit the simulation mode, close the simulator control dialog. The
      <guimenu>Cluster Status</guimenu> screen switches back to its normal
      color and displays the current cluster state.
     </para>
    </step>
   </procedure>
  </sect2>

  <sect2 id="sec.ha.config.hawk.crm_report">
   <title>Generating a Cluster Report</title>
<!--fate##310187-->
   <para>
    For analysis and diagnosis of problems occurring on the cluster, &hawk;
    can generate a cluster report that collects information from all nodes
    in the cluster.
   </para>
   <procedure id="pro.ha.config.hawk.crm_report">
    <title>Generating a <literal>crm_report</literal></title>
    <step>
     <para>
      Start a Web browser and log in to the cluster as described in
      <xref linkend="sec.ha.config.hawk.intro.connect"/>.
     </para>
    </step>
    <step>
     <para>
      Click the wrench icon next to the username in the top-level row, and
      select <guimenu>Generate crm_report</guimenu>.
     </para>
    </step>
    <step>
     <para>
      By default, the period to examine is the last hour. To modify this,
      set another <guimenu>Start Time</guimenu> and <guimenu>End
      Time</guimenu>.
     </para>
    </step>
    <step>
     <para>
      Click <guimenu>Generate</guimenu>.
     </para>
    </step>
    <step>
     <para>
      After the report has been created, download the
      <filename>*.tar.bz2</filename> file by clicking the respective link.
     </para>
    </step>
   </procedure>
   <para>
    For more information about the log files that the
    <literal>crm_report</literal> covers, refer to
    <xref linkend="vle.ha.crm_report"/>.
   </para>
  </sect2>
 </sect1>
 
 <sect1 id="sec.ha.config.hawk.dashboard">
<!--fate#310306 (SP3)-->

  <title>Monitoring Multiple Clusters</title>

  <para>
   Use &hawk; as a single point of administration for monitoring multiple
   clusters. &hawk;'s <guimenu>Cluster Dashboard</guimenu> allows you to
   view a summary of multiple clusters, with each summary listing the number
   of nodes, resources, tickets (if you use &geo; clusters), and their
   state. The summary also shows if any failures have appeared in the
   respective cluster.
  </para>

  <para>
   The cluster information displayed in the <guimenu>Cluster
   Dashboard</guimenu> is stored in a persistent cookie. This means you need
   to decide which &hawk; instance you want to view the <guimenu>Cluster
   Dashboard</guimenu> on, and always use that one. The machine you are
   running &hawk; on does not even have to be part of any cluster for that
   purpose&mdash;it can be a separate, unrelated system.
  </para>

  <procedure id="pro.ha.config.hawk.dashboard">
   <title>Monitoring Multiple Clusters with &hawk;</title>
   <itemizedlist>
    <title>Prerequisites</title>
    <listitem>
     <para>
      All clusters to be monitored from &hawk;'s <guimenu>Cluster
      Dashboard</guimenu> must be running &productname; SP3. It is not
      possible to monitor clusters that are running earlier versions of
      &productname;.
     </para>
    </listitem>
    <listitem>
     <para>
      If you did not replace the self-signed certificate for &hawk; on every
      cluster node with your own certificate (or a certificate signed by an
      official Certificate Authority), you must log in to &hawk; on
      <emphasis>every</emphasis> node in <emphasis>every</emphasis> cluster
      at least once. Verify the certificate (or add an exception in the
      browser to bypass the warning).
     </para>
    </listitem>
    <listitem>
     <para>
      If using Mozilla Firefox, you must change its preferences to
      <guimenu>Accept third-party cookies</guimenu>. Otherwise cookies from
      monitored clusters will not be set, thus preventing login to the
      clusters you are trying to monitor.
     </para>
    </listitem>
   </itemizedlist>
   <step>
    <para>
     Start the &hawk; Web service on a machine you want to use for
     monitoring multiple clusters.
    </para>
   </step>
   <step>
    <para>
     Start a Web browser and point it at the IP address or hostname of the
     machine that runs &hawk;:
    </para>
<screen>https://<replaceable>IPaddress</replaceable>:7630/</screen>
   </step>
   <step>
    <para>
     On the &hawk; login screen, click the <guimenu>Dashboard</guimenu> link
     in the right upper corner.
    </para>
    <para>
     The <guimenu>Add Cluster</guimenu> dialog appears.
    </para>
    <informalfigure>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-dashboard-add-cluster.png" width="100%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-dashboard-add-cluster.png" width="80%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </informalfigure>
   </step>
   <step>
    <para>
     Enter a custom <guimenu>Cluster Name</guimenu> with which to identify
     the cluster the <guimenu>Cluster Dashboard</guimenu>.
    </para>
   </step>
   <step>
    <para>
     Enter the <guimenu>Host Name</guimenu> of one of the cluster nodes and
     confirm your changes.
    </para>
    <para>
     The <guimenu>Cluster Dashboard</guimenu> opens and shows a summary of
     the cluster you just added.
    </para>
   </step>
   <step>
    <para>
     To add more clusters to the dashboard, click the plus icon and enter
     the details for the next cluster.
    </para>
    <figure>
     <title>&hawk;&mdash;Cluster Dashboard</title>
     <mediaobject>
      <imageobject role="fo">
       <imagedata fileref="hawk-dashboard-multiple-clusters.png" width="50%" format="PNG"/>
      </imageobject>
      <imageobject role="html">
       <imagedata fileref="hawk-dashboard-multiple-clusters.png" width="30%" format="PNG"/>
      </imageobject>
     </mediaobject>
    </figure>
   </step>
   <step>
    <para>
     To remove a cluster from the dashboard, click the <literal>x</literal>
     icon next to the cluster's summary.
    </para>
   </step>
   <step>
    <para>
     To view more details about a cluster, click somewhere into the
     cluster's box on the dashboard.
    </para>
    <para>
     This opens a new browser window or new browser tab. If you are not
     currently logged in to the cluster, this takes you to the &hawk; login
     screen. After having logged in, &hawk; shows the <guimenu>Cluster
     Status</guimenu> of that cluster in the summary view. From here, you
     can administrate the cluster with &hawk; as usual.
    </para>
   </step>
   <step>
    <para>
     As the <guimenu>Cluster Dashboard</guimenu> stays open in a separate
     browser window or tab, you can easily switch between the dashboard and
     the administration of individual clusters in with &hawk;.
    </para>
   </step>
  </procedure>

  <para>
   Any status changes for nodes or resources are reflected almost
   immediately within the <guimenu>Cluster Dashboard</guimenu>.
  </para>

  <note>
   <title>Node Not Accessible</title>
   <para>
    The <guimenu>Cluster Dashboard</guimenu> only polls one node in each
    cluster for status. If the node being polled goes down, the dashboard
    will cycle to poll another node. In that case, &hawk; briefly displays a
    warning message about that node being inaccessible. The message will
    disappear after &hawk; has found another node to contact.
   </para>
  </note>

<!--from bnc#808703:  
   Hawk's status screen is for viewing detailed status of one cluster (which is
   why you can't add other clusters to monitor when you're on the status screen).
   
   The dashboard is for showing summary details of many clusters, any of which you
   can click to get to the (more detailed) status screen showing that cluster
   only.
   
   You don't need to log in to hawk to visit the dashboard screen.  But you do
   need to be logged in to any clusters that are being viewed in the dashboard
   (since beta3 the dashboard will prompt for login details for each monitored
   cluster if you're not already logged in).  This is probably where the confusion
   starts.  That and the fact that any Hawk instance can also show a dashboard...
   
   It might help to look at it this way.  Assume you have two clusters (c0 and
   c1), and happen to have a separate unrelated system running Hawk, which you
   only use for its dashboard functionality (in fact there doesn't even need to be
   a cluster running on that system at all).  If you view the dashboard on that
   system, you don't need to log into hawk on that node, as you're not interested
   in that system itself - you just want to use its dashboard to monitor clusters
   c0 and c1.-->
 </sect1>
 <sect1 id="sec.ha.config.hawk.trouble">
  <title>Troubleshooting</title>

  <variablelist>
   <varlistentry>
    <term>&hawk; Log Files</term>
    <listitem>
     <para>
      Find the &hawk; log files in <filename>/srv/www/hawk/log</filename>.
      Check these files in case you cannot access &hawk;.
     </para>
     <para> If you have trouble starting or stopping a resource with &hawk;, check the Pacemaker
      log messages. <remark>taroth 2014-06-24: todo: JOURNALCTL - check with devs!</remark>By
      default, Pacemaker logs to <filename>/var/log/messages</filename>. </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Authentication Fails</term>
    <listitem>
     <para>
      If you cannot log in to &hawk; with a new user that is a member of the
      <systemitem class="groupname">haclient</systemitem> group (or if you
      experience delays until &hawk; accepts logins from this user), stop
      the <systemitem class="daemon">nscd</systemitem> daemon with
      <command>systemctl</command> <literal>stop nscd.service</literal>
      and try again.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry id="vle.ha.hawk.certificate">
    <term>Replacing the Self-Signed Certificate</term>
    <listitem>
     <para>
      To avoid the warning about the self-signed certificate on first &hawk;
      startup, replace the automatically created certificate with your own
      certificate or a certificate that was signed by an official
      Certificate Authority (CA).
     </para>
     <para>
      The certificate is stored in
      <filename>/etc/lighttpd/certs/hawk-combined.pem</filename> and
      contains both key and certificate. After you have created or received
      your new key and certificate, combine them by executing the following
      command:
     </para>
<screen>cat <replaceable>keyfile</replaceable>&nbsp;<replaceable>certificatefile</replaceable> > /etc/lighttpd/certs/hawk-combined.pem</screen>
     <para>
      Change the permissions to make the file only accessible by &rootuser;:
     </para>
<screen>chown root.root /etc/lighttpd/certs/hawk-combined.pem
chmod 600 /etc/lighttpd/certs/hawk-combined.pem</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Login to &hawk; Fails After Using History Explorer/crm_report </term>
    <listitem>
     <para>
<!--taroth 2011-11-18: filed https://bugzilla.novell.com/show_bug.cgi?
      id=731282 - if that can be fixed in the software, remove this 
      troubleshooting topic - taroth 2012-01-11: some progress with the bug
      but maybe still too early to remove the topic completely-->
      Depending on the period of time you defined in the <guimenu>History
      Explorer</guimenu> or <guimenu>crm_report</guimenu> and the events that
      took place in the cluster during this time, &hawk; might collect an
      extensive amount of information stored in log files in the
      <filename>/tmp</filename> directory. This might consume the remaining
      free disk space on your node. In case &hawk; should not respond after
      using the <guimenu>History Explorer</guimenu> or
      <guimenu>crm_report</guimenu>, check the hard disk of your cluster node
      and remove the respective log files.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Cluster Dashboard</guimenu>: Unable to connect to host</term>
    <listitem>
     <para>
      If adding clusters to &hawk;'s dashboard fails, check the
      prerequisites listed in
      <xref linkend="pro.ha.config.hawk.dashboard"/>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><guimenu>Cluster Dashboard</guimenu>: Node Not Accessible</term>
    <listitem>
     <para>
      The <guimenu>Cluster Dashboard</guimenu> only polls one node in each
      cluster for status. If the node being polled goes down, the dashboard
      will cycle to poll another node. In that case, &hawk; briefly displays
      a warning message about that node being inaccessible. The message will
      disappear after &hawk; has found another node to contact to.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect1>
</chapter>
